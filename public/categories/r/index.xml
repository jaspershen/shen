<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R | Xiaotao Shen</title>
    <link>/categories/r/</link>
      <atom:link href="/categories/r/index.xml" rel="self" type="application/rss+xml" />
    <description>R</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>©Xiaotao Shen 2020 From Stanford university, School of Medicine.</copyright><lastBuildDate>Sun, 26 Apr 2020 00:00:00 +0000</lastBuildDate>
    <item>
      <title>Mac R在不同版本之间切换</title>
      <link>/post/2020-04-26-switch-r-in-mac/</link>
      <pubDate>Sun, 26 Apr 2020 00:00:00 +0000</pubDate>
      <guid>/post/2020-04-26-switch-r-in-mac/</guid>
      <description>


&lt;p&gt;Mac在R不同版本之间切换不如windows方便.可以使用&lt;code&gt;Rswitch&lt;/code&gt;工具.链接地址如下:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rud.is/rswitch/&#34; class=&#34;uri&#34;&gt;https://rud.is/rswitch/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;下载之后安装,然后就会出现在menu中.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Screen%20Shot%202020-04-26%20at%2010.54.45%20PM.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后切换R版本,重启R session即可.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;.rs.restartR()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;该函数在Rstudio中才可以使用.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Github多人协作</title>
      <link>/post/2020-03-10-github-collobration/</link>
      <pubDate>Tue, 10 Mar 2020 00:00:00 +0000</pubDate>
      <guid>/post/2020-03-10-github-collobration/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#创建远程仓库&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; 创建远程仓库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#本地创建分支并推送到远程仓库&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; 本地创建分支并推送到远程仓库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#邀请合作者&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3&lt;/span&gt; 邀请合作者&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#合作者参与项目&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4&lt;/span&gt; 合作者参与项目&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#克隆项目&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.1&lt;/span&gt; 克隆项目&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#开始工作&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;5&lt;/span&gt; 开始工作&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#创建文件&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;5.1&lt;/span&gt; 创建文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#提交&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;5.2&lt;/span&gt; 提交&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#合并分支&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;5.3&lt;/span&gt; 合并分支&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#推送到远程仓库&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;5.4&lt;/span&gt; 推送到远程仓库&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#有冲突怎么办&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;6&lt;/span&gt; 有冲突怎么办&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#抓取分支&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;7&lt;/span&gt; 抓取分支&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#多人协作的工作模式&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;8&lt;/span&gt; 多人协作的工作模式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;多个人共同合作进行一个项目,是git的一大优势.&lt;/p&gt;
&lt;p&gt;一般来说,共同合作,是其中某个人先建立一个repo仓库,然后克隆到本地,然后在本地创建分支,将分支推送到远程仓库,然后邀请合作者.&lt;/p&gt;
&lt;div id=&#34;创建远程仓库&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; 创建远程仓库&lt;/h1&gt;
&lt;p&gt;在github创建远程仓库或者将本地仓库推送到远程仓库.这里就不在演示了.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;本地创建分支并推送到远程仓库&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; 本地创建分支并推送到远程仓库&lt;/h1&gt;
&lt;p&gt;比如我们在&lt;code&gt;shenxt&lt;/code&gt;账户上有一个远程仓库,创建一个&lt;code&gt;jaspershen&lt;/code&gt;分支.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git branch jaspershen&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后将该分支推送到远程仓库.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git push origin jaspershen&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这时候再去远程仓库就可以看到&lt;code&gt;jaspershen&lt;/code&gt;分支了.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;邀请合作者&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;3&lt;/span&gt; 邀请合作者&lt;/h1&gt;
&lt;p&gt;在github远程仓库的&lt;code&gt;setting&lt;/code&gt;中,点击&lt;code&gt;Manage access&lt;/code&gt;,然后点击&lt;code&gt;invite collarbortor&lt;/code&gt;,填入邀请人的ID即可.这时候邀请人可以在自己github中看到邀请,同意即可.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;合作者参与项目&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;4&lt;/span&gt; 合作者参与项目&lt;/h1&gt;
&lt;p&gt;合作者同意邀请之后,需要克隆项目,创建本地分支.&lt;/p&gt;
&lt;div id=&#34;克隆项目&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.1&lt;/span&gt; 克隆项目&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;git clone git@github_jaspershen:shenxt/github_test4.git
cd github_test4&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这时候查看分支,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git branch&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;会看到只有master分支.所以要创建远程仓库的分支到本地.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git checkout -b jaspershen origin/jaspershen&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这时候再查看分支,就会在&lt;code&gt;jaspershen&lt;/code&gt;分支了.这时候合作者jaspershen就可以在该分支下进行工作了.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;开始工作&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;5&lt;/span&gt; 开始工作&lt;/h1&gt;
&lt;p&gt;这时候合作者&lt;code&gt;jaspershen&lt;/code&gt;可以在分支下正常工作,然后提交,合并,并推送到远程仓库.&lt;/p&gt;
&lt;div id=&#34;创建文件&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;5.1&lt;/span&gt; 创建文件&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;touch heloworld.txt&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后在该文件下写入一行文字:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;test from jaspershen&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;提交&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;5.2&lt;/span&gt; 提交&lt;/h2&gt;
&lt;p&gt;然后加入到暂存区并提交.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git add helloworld.txt
git commit -m &amp;quot;test from jaspershen&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;合并分支&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;5.3&lt;/span&gt; 合并分支&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;git checkout master
git merge jaspershen&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;推送到远程仓库&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;5.4&lt;/span&gt; 推送到远程仓库&lt;/h2&gt;
&lt;p&gt;然后可以将其推送到远程分支(包括master和jaspershen分支).注意是直接推送到&lt;code&gt;shenxt&lt;/code&gt;账户的远程仓库.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git push origin master
git push origin jaspershen&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这时候就可以在&lt;code&gt;shenxt&lt;/code&gt;的远程仓库下看到&lt;code&gt;jaspershen&lt;/code&gt;的提交工作了.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;有冲突怎么办&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;6&lt;/span&gt; 有冲突怎么办&lt;/h1&gt;
&lt;p&gt;多人协作是不免会有冲突,冲突的主要原因就是对同一文件的修改,所以最好是提前说好不要对同一个文件进行修改,如果有冲突,请参考:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.liaoxuefeng.com/wiki/896043488029600/900004111093344&#34; class=&#34;uri&#34;&gt;https://www.liaoxuefeng.com/wiki/896043488029600/900004111093344&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;抓取分支&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;7&lt;/span&gt; 抓取分支&lt;/h1&gt;
&lt;p&gt;多人协作时，大家都会往&lt;code&gt;master&lt;/code&gt;分支上推送各自的修改。如果两个人同时对同一个文件进行了修改,并且同试图推送到&lt;code&gt;master&lt;/code&gt;分支,那么就会冲突,报错.这时候,应该先使用&lt;code&gt;git pull&lt;/code&gt;命令将最新的提交从&lt;code&gt;origin/master&lt;/code&gt;下抓取下来,然后本地合并,解决冲突,再推送.&lt;/p&gt;
&lt;p&gt;比如我们在&lt;code&gt;shenxt&lt;/code&gt;账户下也创建一个&lt;code&gt;helloworld.txt&lt;/code&gt;文件.然后提交,推送到远程仓库.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git push origin master&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;会得到下面的报错:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; ! [rejected]        master -&amp;gt; master (fetch first)
error: failed to push some refs to &amp;#39;git@github_shenxt:shenxt/github_test4.git&amp;#39;
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., &amp;#39;git pull ...&amp;#39;) before pushing again.
hint: See the &amp;#39;Note about fast-forwards&amp;#39; in &amp;#39;git push --help&amp;#39; for details.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我们先使用&lt;code&gt;git pull&lt;/code&gt;抓取分支的最新提交.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git pull&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;也失败了,因为没有指定本地分支与远程&lt;code&gt;origin/xxx&lt;/code&gt;分支的链接，根据提示，设置本地分支和远程分支的链接：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git branch --set-upstream-to=origin/master master
git branch --set-upstream-to=origin/jaspershen jaspershen&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后在pull.&lt;/p&gt;
&lt;p&gt;这回&lt;code&gt;git pull&lt;/code&gt;成功，但是合并有冲突，需要手动解决，解决的方法和分支管理中的解决冲突完全一样。解决后，提交，再&lt;code&gt;push&lt;/code&gt;：&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;多人协作的工作模式&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;8&lt;/span&gt; 多人协作的工作模式&lt;/h1&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;首先，可以试图用&lt;code&gt;git push origin &amp;lt;branch-name&amp;gt;&lt;/code&gt;推送自己的修改；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果推送失败，则因为远程分支比你的本地更新，需要先用&lt;code&gt;git pull&lt;/code&gt;试图合并；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果合并有冲突，则解决冲突，并在本地提交；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;没有冲突或者解决掉冲突后，再用&lt;code&gt;git push origin &amp;lt;branch-name&amp;gt;&lt;/code&gt;推送就能成功！&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果&lt;code&gt;git pull&lt;/code&gt;提示&lt;code&gt;no tracking information&lt;/code&gt;，则说明本地分支和远程分支的链接关系没有创建，用命令&lt;code&gt;git branch --set-upstream-to &amp;lt;branch-name&amp;gt; origin/&amp;lt;branch-name&amp;gt;&lt;/code&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这就是多人协作的工作模式，一旦熟悉了，就非常简单。&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>git和GitHub使用</title>
      <link>/post/2020-03-04-git_github/</link>
      <pubDate>Wed, 04 Mar 2020 00:00:00 +0000</pubDate>
      <guid>/post/2020-03-04-git_github/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#git配置&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; Git配置&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#安装git之后需要进行一些全局设置比如用户名邮箱.&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1&lt;/span&gt; 安装git之后,需要进行一些全局设置,比如用户名邮箱.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#除了用户名邮箱之外也可以对其他内容进行配置如&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.2&lt;/span&gt; 除了用户名邮箱之外,也可以对其他内容进行配置,如:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#查看所有的配置&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.3&lt;/span&gt; 查看所有的配置&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#基础操作&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; 基础操作&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#创建本地git版本库&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.1&lt;/span&gt; 创建本地git版本库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#将文件添加到版本库&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.2&lt;/span&gt; 将文件添加到版本库&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#使用git-add命令将文件添加到暂存区&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.2.1&lt;/span&gt; 使用&lt;code&gt;git add&lt;/code&gt;命令将文件添加到暂存区:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#使用git-commit命令将暂存区文件提交到仓库中.&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.2.2&lt;/span&gt; 使用&lt;code&gt;git commit&lt;/code&gt;命令将暂存区文件提交到仓库中.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#查看仓库状态&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.3&lt;/span&gt; 查看仓库状态&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#查看仓库中的具体修改&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.4&lt;/span&gt; 查看仓库中的具体修改&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#查看提交的历史记录&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.5&lt;/span&gt; 查看提交的历史记录&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#版本回退&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.6&lt;/span&gt; 版本回退&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#回到未来某个版本&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.7&lt;/span&gt; 回到未来某个版本&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#撤销修改&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.8&lt;/span&gt; 撤销修改&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#丢弃工作区中的文件修改&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.8.1&lt;/span&gt; 丢弃工作区中的文件修改&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#丢弃暂存区的修改&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.8.2&lt;/span&gt; 丢弃暂存区的修改&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#删除文件&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.9&lt;/span&gt; 删除文件&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#git的分支管理&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3&lt;/span&gt; git的分支管理&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#查看分支&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.1&lt;/span&gt; 查看分支&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#创建分支&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.2&lt;/span&gt; 创建分支&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#切换分支&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.3&lt;/span&gt; 切换分支&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#switch命令&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.4&lt;/span&gt; &lt;code&gt;switch&lt;/code&gt;命令&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#合并分支merge&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.5&lt;/span&gt; 合并分支(merge)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#删除分支&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.6&lt;/span&gt; 删除分支&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#分支提交冲突&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.7&lt;/span&gt; 分支提交冲突&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#分支策略&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.8&lt;/span&gt; 分支策略&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#远程仓库github&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4&lt;/span&gt; 远程仓库(GitHub)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#添加到远程仓库&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.1&lt;/span&gt; 添加到远程仓库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#推送到远程仓库&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.2&lt;/span&gt; 推送到远程仓库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#从远程仓库获取最新内容&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.3&lt;/span&gt; 从远程仓库获取最新内容&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#查看远程仓库信息&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.4&lt;/span&gt; 查看远程仓库信息&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#从远程仓库克隆&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.5&lt;/span&gt; 从远程仓库克隆&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#设置忽略文件&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;5&lt;/span&gt; 设置忽略文件&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;git配置&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; Git配置&lt;/h1&gt;
&lt;div id=&#34;安装git之后需要进行一些全局设置比如用户名邮箱.&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1&lt;/span&gt; 安装git之后,需要进行一些全局设置,比如用户名邮箱.&lt;/h2&gt;
&lt;p&gt;设置的主要命令是&lt;code&gt;git config&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git config --global user.name &amp;quot;your name&amp;quot; 
git config --global user.email &amp;quot;your email&amp;quot; &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中,&lt;code&gt;--global&lt;/code&gt;是指全局配置,如果不写,则只为当前仓库(repository)配置.&lt;/p&gt;
&lt;p&gt;如果有多个git用户,这时候需要先确定某个仓库使用的哪个账户.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git config user.name
git config user.email &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;查询全局的git账户信息:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git config --global user.name
git config --global user.email &lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;除了用户名邮箱之外也可以对其他内容进行配置如&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2&lt;/span&gt; 除了用户名邮箱之外,也可以对其他内容进行配置,如:&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;git config --global color.ui true #让git显示不同的颜色
git config cor.ignorcase true #让git对仓库中文件大小写敏感&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;查看所有的配置&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.3&lt;/span&gt; 查看所有的配置&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;git config -l&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;基础操作&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; 基础操作&lt;/h1&gt;
&lt;div id=&#34;创建本地git版本库&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.1&lt;/span&gt; 创建本地git版本库&lt;/h2&gt;
&lt;p&gt;使用&lt;code&gt;git init&lt;/code&gt;命令.&lt;/p&gt;
&lt;p&gt;首先,创建一个你要当作仓库的文件夹,然后将其设置为工作路径,然后执行.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir git_test
cd git_test
git init&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;Annotation%202020-03-04%20101100.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;这时候查看目录结构,就可以看到创建了一个名为&lt;code&gt;.git&lt;/code&gt;的子目录,这就说明创建版本库成功了.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Annotation%202020-03-04%20101400.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;将文件添加到版本库&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.2&lt;/span&gt; 将文件添加到版本库&lt;/h2&gt;
&lt;p&gt;要将一个文件纳入到版本管理,首先需要将其添加到暂存区,然后才能提交到仓库中.&lt;/p&gt;
&lt;div id=&#34;使用git-add命令将文件添加到暂存区&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.2.1&lt;/span&gt; 使用&lt;code&gt;git add&lt;/code&gt;命令将文件添加到暂存区:&lt;/h3&gt;
&lt;p&gt;比如我们首先新建一个名为&lt;code&gt;README.md&lt;/code&gt;的文件,然后将其添加到暂存区.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git add README.md&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;当然也可以使用下面命令将所有修改添加到暂存区:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git add .&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;.&lt;/code&gt; 是正则表达式,代表任意文件.但是空文件夹是不会添加到暂存区的.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;使用git-commit命令将暂存区文件提交到仓库中.&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.2.2&lt;/span&gt; 使用&lt;code&gt;git commit&lt;/code&gt;命令将暂存区文件提交到仓库中.&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;git commit #如果暂存区有文件,则将其中的文件提交到仓库
git commit -m &amp;quot;your note for this commit&amp;quot; #用于注明提交的内容,变更等信息,方便溯源&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;Annotation%202020-03-04%20102352.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;如果直接使用&lt;code&gt;git commit&lt;/code&gt;提交,不带注释信息,则会先弹出评论界面,需要评论.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Annotation%202020-03-04%20102751.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;注意这时候是使用vi打开的文件,所以需要掌握一点vi的基础知识.参考下面帖子:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/itech/archive/2009/04/17/1438439.html&#34; class=&#34;uri&#34;&gt;https://www.cnblogs.com/itech/archive/2009/04/17/1438439.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;简单来说,首先在命令行模式下按下字母&lt;code&gt;i&lt;/code&gt;进入插入模式,在该模式下进行信息的输入.输入结束之后,点击&lt;code&gt;ESC&lt;/code&gt;退回到命令行模式,然后再输入冒号(&lt;code&gt;:&lt;/code&gt;).输入w,回车,保存,然后输入q,回车,退出vi编辑器.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;查看仓库状态&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.3&lt;/span&gt; 查看仓库状态&lt;/h2&gt;
&lt;p&gt;不论我们是新建了文件,将文件加入暂存区,或者是其他修改等,我们都可以使用&lt;code&gt;git status&lt;/code&gt;来查看当前的仓库状态.&lt;/p&gt;
&lt;p&gt;如果当前没有任何变动.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Annotation%202020-03-04%20103831.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;如果我们新建了一个文件,然后再次查看状态:&lt;/p&gt;
&lt;p&gt;因为我们还没有将其添加到暂存区,因此显示该新建文件为 &lt;code&gt;Untracted files&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Annotation%202020-03-04%20103937.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;将文件放入暂存区,然后再查看状态:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Annotation%202020-03-04%20104126.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后再将其进行提交,查看状态.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Annotation%202020-03-04%20104709.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;查看仓库中的具体修改&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.4&lt;/span&gt; 查看仓库中的具体修改&lt;/h2&gt;
&lt;p&gt;如果做过之后修改,我们忘了做了哪些修改,可以使用&lt;code&gt;git diff&lt;/code&gt;命令来查看具体修改内容.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git diff #查看所有改动
git diff README.md #查看具体文件的改动&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;比如我们再&lt;code&gt;test.txt&lt;/code&gt;文件中加入一行,然后查看:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Annotation%202020-03-04%20105306.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以看到记录了对该文件的修改内容.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意,如果你修改之后已经将其存入暂存区,则&lt;code&gt;git diff&lt;/code&gt;不会再显示内容.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;Annotation%202020-03-04%20105454.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;查看提交的历史记录&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.5&lt;/span&gt; 查看提交的历史记录&lt;/h2&gt;
&lt;p&gt;有的时候,你需要查看自己做过哪些提交(commit),来回顾自己的完成部分,这时候需要使用&lt;code&gt;git log&lt;/code&gt;命令.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git log     #显示所有提交的历史记录
git log --pretty=oneline    #单行显示提交历史记录的内容&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;Annotation%202020-03-04%20105927.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以看到我们现在一共进行了4次提交,每次提交的第一行commit之后是该次提交的唯一&lt;code&gt;ID&lt;/code&gt;.然后后面显示提交者,时间以及一些记录等.&lt;/p&gt;
&lt;p&gt;如果提交非常多,需要显示内容精简一些,就需要使用&lt;code&gt;git log --pretty=oneline&lt;/code&gt;命令.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Annotation%202020-03-04%20110141.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;版本回退&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.6&lt;/span&gt; 版本回退&lt;/h2&gt;
&lt;p&gt;有了&lt;code&gt;git log&lt;/code&gt;来查看提交的历史记录,我们就可以通过&lt;code&gt;git reset --hard&lt;/code&gt;来退回到我们需要的某个特定把呢不能.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git reset --hard HEAD^        # 回退到上一个提交版本
git reset --hard HEAD^^        # 回退到上上一个提交版本
git reset --hard &amp;#39;commit_id&amp;#39;    # 会退到 commit_id 指定的提交版本&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;使用&lt;code&gt;git log&lt;/code&gt;我们可以看到每个提交都有一个唯一的commit ID,其中上一个也可以使用&lt;code&gt;HEAD&lt;/code&gt;代表.因此我们可以退回到上一个版本.比如,我们在最近的一次提交中修改了test.txt,在其中加入一行.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Annotation%202020-03-04%20110543.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;我们想退回到上一个版本,不想加入这一行,可以使用下面命令.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git reset --hard HEAD^&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这时候再查看log,可以看到最近的一个commit已经消失,回到了上一个提交.而上一次的修改也已经消失.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Annotation%202020-03-04%20110857.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;回到未来某个版本&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.7&lt;/span&gt; 回到未来某个版本&lt;/h2&gt;
&lt;p&gt;退回到原来某个版本之后,如何再回到未来某个版本呢?还是使用&lt;code&gt;git reset --hard&lt;/code&gt;命令,但是此时使用&lt;code&gt;git log&lt;/code&gt;命令是无法显示在这之后的提交信息的。但是，通过&lt;code&gt;git reflog&lt;/code&gt;可以获取到操作命令的历史。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Annotation%202020-03-04%20111241.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;这时候只要在使用&lt;code&gt;git reset&lt;/code&gt;命令就可以回到未来的任意一个版本了.而且这时候再使用&lt;code&gt;git log&lt;/code&gt;也回到了最初的版本提交记录.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Annotation%202020-03-04%20111622.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;撤销修改&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.8&lt;/span&gt; 撤销修改&lt;/h2&gt;
&lt;p&gt;撤销修改同样包括两方面的内容，由于仓库中的文件在提交之前，可能在工作区中(也就是还未运行 &lt;code&gt;git add&lt;/code&gt;命令)，尚未在版本控制范围内，也可能在暂存区中(也就是运行了&lt;code&gt;git add&lt;/code&gt;命令但是没有运行&lt;code&gt;git commit .&lt;/code&gt;命令)。&lt;/p&gt;
&lt;div id=&#34;丢弃工作区中的文件修改&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.8.1&lt;/span&gt; 丢弃工作区中的文件修改&lt;/h3&gt;
&lt;p&gt;使用如下命令.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git checkout -- READ.md    #如果 READ.md 文件在工作区，则丢弃其修改
git checkout -- .            #丢弃当前目录下所有工作区中文件的修改&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;比如我们再&lt;code&gt;test.txt&lt;/code&gt;中添加另外一行,然后不加入暂存区,然后将其丢弃掉.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Annotation%202020-03-04%20112427.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后运行:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git checkout -- test.txt&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;Annotation%202020-03-04%20112527.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;丢弃暂存区的修改&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.8.2&lt;/span&gt; 丢弃暂存区的修改&lt;/h3&gt;
&lt;p&gt;如果已经运行了&lt;code&gt;git add&lt;/code&gt;将修改放入了暂存区,可以通过下列命令进行丢弃:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git reset HEAD README.md #将 README.md 恢复到 HEAD 提交版本的状态
git checkout -- README.md&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;Annotation%202020-03-04%20112956.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后将其删除掉.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Annotation%202020-03-04%20113351.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;删除文件&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.9&lt;/span&gt; 删除文件&lt;/h2&gt;
&lt;p&gt;在文件未添加到暂存区之前,对想删除文件可以直接物理删除.或者通过&lt;code&gt;git checkout -- file&lt;/code&gt;来丢弃.如果文件已经被提交,则需要&lt;code&gt;git rm&lt;/code&gt;来删除.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git rm Readme.md #删除已经提交(commit)过的文件&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;注意: &lt;code&gt;git rm&lt;/code&gt;只能删除已经提交到版本库中的文件.其他状态的文件直接用这个命令操作是出错的.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;Annotation%202020-03-04%20204036.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;git的分支管理&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;3&lt;/span&gt; git的分支管理&lt;/h1&gt;
&lt;p&gt;分支管理是版本管理中的重要概念.在进行多个并行作业时,我们经常会用到分支.在这类并行开发的过程中,往往同时存在着多个最新的代码状态.&lt;/p&gt;
&lt;p&gt;master分支时git默认创建的分支.因此基本上所有的开发都是以这个分支为中心进行的.&lt;/p&gt;
&lt;p&gt;在不同分支中,可以同时进行不同的作业,等该分支的作业完成之后,再与master分支进行合并.&lt;/p&gt;
&lt;p&gt;比如下图中,我们首先以master作为模板复制得到&lt;code&gt;feature A&lt;/code&gt;的分支.&lt;code&gt;feature A&lt;/code&gt;分支主要用来开发另外一个新的特性,等开发完毕之后,再将其合并到master分支中即可.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Annotation%202020-03-04%20205634.png&#34; /&gt;&lt;/p&gt;
&lt;div id=&#34;查看分支&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.1&lt;/span&gt; 查看分支&lt;/h2&gt;
&lt;p&gt;使用&lt;code&gt;git branch&lt;/code&gt;命令查看分支信息.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git branch        #查看本地分支信息
git branch -v     #查看相对详细的本地分支信息
git branch -av     #查看包括远程仓库在内的分支信息&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;Annotation%202020-03-04%20210006.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以看到我们现在只有一个分支,也就是master,然后星号标识的就是当前所在的分支.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;创建分支&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.2&lt;/span&gt; 创建分支&lt;/h2&gt;
&lt;p&gt;使用 &lt;code&gt;git branch new.name&lt;/code&gt;用来创建新的分支.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git branch development ##创建一个新的名字叫做development的分支&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;需要注意的是,在哪个分支下面新建分支,则该分支就是copy自当前所在的分支.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;切换分支&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.3&lt;/span&gt; 切换分支&lt;/h2&gt;
&lt;p&gt;使用&lt;code&gt;git checkout&lt;/code&gt;命令来切换分支.比如我们先新建一个development的分支,然后切换到该分支下.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git branch development
git checkout development&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;当然也可以使用下面命令直接创建并切换到新建的分支下.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git checkout -b development&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;switch命令&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.4&lt;/span&gt; &lt;code&gt;switch&lt;/code&gt;命令&lt;/h2&gt;
&lt;p&gt;我们注意到切换分支使用&lt;code&gt;git checkout &amp;lt;branch&amp;gt;&lt;/code&gt;,而前面讲过的撤销修改则是&lt;code&gt;git checkout -- &amp;lt;file&amp;gt;&lt;/code&gt;,同一个命令,有两种作用,确实有点令人迷惑.&lt;/p&gt;
&lt;p&gt;实际上,切换分支这个动作,用&lt;code&gt;switch&lt;/code&gt;更科学。因此，最新版本的Git提供了新的&lt;code&gt;git switch&lt;/code&gt;命令来切换分支：&lt;/p&gt;
&lt;p&gt;创建并切换到新的development分支,可以使用:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git switch -c development &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;直接切换到已有分支:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git switch master&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;Annotation%202020-03-04%20210500.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;我们下面在development分支下面再新建一个&lt;code&gt;development.txt&lt;/code&gt;文件,然后写入一些内容.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Annotation%202020-03-04%20211512.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以看到此时有一个新建的development.txt文件.如果我们切换到master分支,还是有该文件,但是对该文件内容进行修改,则因为没有加入到暂存区,因此并不会进行版本控制.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;合并分支merge&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.5&lt;/span&gt; 合并分支(merge)&lt;/h2&gt;
&lt;p&gt;当我们修复完成一个Bug,或者开发完成一个新特性,我们就会把相关的Bug或者特性的上修改合并回原来的主分支上.,这时候就需要&lt;code&gt;git merge&lt;/code&gt;命令来做分支的合并.&lt;/p&gt;
&lt;p&gt;首先需要切换回最终需要合并的分支,也就是&lt;code&gt;master&lt;/code&gt;分支,然后再合并.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git checkout master        #切换回 master 分支
git merge development     #将development分支中的修改合并回master分支&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;Annotation%202020-03-04%20212532.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;删除分支&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.6&lt;/span&gt; 删除分支&lt;/h2&gt;
&lt;p&gt;当之前创建的分支,完成了它的使命,如Bug修复完,分支合并以后,这个分支就不在需要了,就可以删除它.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git branch -d development #删除development分支&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果分支没有合并到master分支中,直接使用上面命令会报错,可以使用下面的命令强制删除.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git branch -D development&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;分支提交冲突&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.7&lt;/span&gt; 分支提交冲突&lt;/h2&gt;
&lt;p&gt;如果新创建了一个分支&lt;code&gt;develpment&lt;/code&gt;,然后在该分支下对&lt;code&gt;readme.txt&lt;/code&gt;进行修改,然后提交.&lt;/p&gt;
&lt;p&gt;随后然后切换到&lt;code&gt;master&lt;/code&gt;分支,然后也对&lt;code&gt;readme.txt&lt;/code&gt;进行修改,然后也提交.&lt;/p&gt;
&lt;p&gt;这样,两个分支分别有了不同的提交.这种情况下,再进行合并就会有冲突.&lt;/p&gt;
&lt;p&gt;我们合并一下试试:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;![](Screen Shot 2020-03-11 at 9.20.30 PM.png)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以看到报错,Git告诉我们,&lt;code&gt;readme.txt&lt;/code&gt;文件存在冲突,必须手动解决冲突后再提交.&lt;code&gt;git status&lt;/code&gt;也可以告诉我们冲突的文件:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git status&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;Screen%20Shot%202020-03-11%20at%209.25.20%20PM.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;这时候我们可以使用&lt;code&gt;vi&lt;/code&gt;或者其他工具打开冲突的文件,在这就是&lt;code&gt;readme.txt&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Screen%20Shot%202020-03-11%20at%209.32.06%20PM.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Git用&lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt;，&lt;code&gt;=======&lt;/code&gt;，&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;标记出不同分支的内容，我们修改如下后保存：&lt;/p&gt;
&lt;p&gt;我们将这些记号删除,然后保留自己想要保留的修改就可.然后重新提交.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git add .
git commit-m &amp;#39;remove conflict&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这时候就完成了合并.可以删除development分支了.&lt;/p&gt;
&lt;p&gt;这时候使用&lt;code&gt;git log&lt;/code&gt;也可以看到分支的提交情况.使用&lt;code&gt;git log --graph&lt;/code&gt;可以观察分支合并图.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;分支策略&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.8&lt;/span&gt; 分支策略&lt;/h2&gt;
&lt;p&gt;在实际开发中，我们应该按照几个基本原则进行分支管理：&lt;/p&gt;
&lt;p&gt;首先，&lt;code&gt;master&lt;/code&gt;分支应该是非常稳定的，也就是仅用来发布新版本，平时不能在上面干活；&lt;/p&gt;
&lt;p&gt;那在哪干活呢？干活都在&lt;code&gt;dev&lt;/code&gt;分支上，也就是说，&lt;code&gt;dev&lt;/code&gt;分支是不稳定的，到某个时候，比如&lt;code&gt;1.0&lt;/code&gt;版本发布时，再把&lt;code&gt;dev&lt;/code&gt;分支合并到&lt;code&gt;master&lt;/code&gt;上，在&lt;code&gt;master&lt;/code&gt;分支发布1.0版本；&lt;/p&gt;
&lt;p&gt;你和你的小伙伴们每个人都在&lt;code&gt;dev&lt;/code&gt;分支上干活，每个人都有自己的分支，时不时地往&lt;code&gt;dev&lt;/code&gt;分支上合并就可以了。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;远程仓库github&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;4&lt;/span&gt; 远程仓库(GitHub)&lt;/h1&gt;
&lt;p&gt;上面的所有命令都是针对本地仓库的操作.当我们希望多个人来协作时,会将代码发布到一个统一的远程仓库,然后多个人在本地操作以后,再推送到远程仓库.其他人协作时,需要先同步远程仓库的内容,再推送自己的修改.这就要用到了我们最常用的github.&lt;/p&gt;
&lt;div id=&#34;添加到远程仓库&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.1&lt;/span&gt; 添加到远程仓库&lt;/h2&gt;
&lt;p&gt;比如我们上面所建立的&lt;code&gt;git_test&lt;/code&gt;本地仓库,我们需要将其添加到github的远程仓库中.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git remote add origin your_remote_git_repo #为本地仓库添加远程仓库&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中&lt;code&gt;your_remote_git_repo&lt;/code&gt;是再github中创建的.我们先创建一下,然后进行尝试.&lt;/p&gt;
&lt;p&gt;格式为&lt;code&gt;git@github.com:user.name/repo_name&lt;/code&gt;.
当然,也可以直接使用远程仓库的网址:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jaspershen/git_test&#34; class=&#34;uri&#34;&gt;https://github.com/jaspershen/git_test&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Annotation%202020-03-04%20213542.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;推送到远程仓库&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.2&lt;/span&gt; 推送到远程仓库&lt;/h2&gt;
&lt;p&gt;使用&lt;code&gt;git push&lt;/code&gt;将本地仓库的内容推送到远程仓库.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git push -u origin master #第一次推送时使用,可以简化后面的推送或者拉取命令使用
git push origin master #将本地master分支推送到origin远程分支,后面之后就可以直接使用该命令推送&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;Annotation%202020-03-04%20214807.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;以后再推送的时候,就使用&lt;code&gt;git push&lt;/code&gt;就可以了.&lt;/p&gt;
&lt;p&gt;这时候可以看到github中已经有了内容.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Annotation%202020-03-04%20214930.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;从远程仓库获取最新内容&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.3&lt;/span&gt; 从远程仓库获取最新内容&lt;/h2&gt;
&lt;p&gt;在多人协作过程中,当自己完成了本地仓库中的提交,想要向远程仓库推送前,需要先获取到远程仓库的最新内容。&lt;/p&gt;
&lt;p&gt;可以通过&lt;code&gt;git fetch&lt;/code&gt;和&lt;code&gt;git pull&lt;/code&gt;来获取远程仓库的内容.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git fetch origin master    
git pull origin master&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;两者之间的区别:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;git fetch&lt;/code&gt;是仅仅获取远程仓库的更新内容,并不会自动做合并.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;git pull&lt;/code&gt;在获取远程仓库的内容后,会自动做合并,可以看成&lt;code&gt;git fetch&lt;/code&gt;之后&lt;code&gt;git merge&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;查看远程仓库信息&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.4&lt;/span&gt; 查看远程仓库信息&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;git remote -v&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;从远程仓库克隆&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.5&lt;/span&gt; 从远程仓库克隆&lt;/h2&gt;
&lt;p&gt;如果你本地没有仓库,希望从已有的远程仓库上复制一份代码,那么你需要&lt;code&gt;git clone&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/jaspershen/git_test #通过 https 协议,克隆Github上git仓库的源码
git clone jaspershen@github.com/git/git_test #通过ssh协议,克隆Github上git仓库的源码&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;设置忽略文件&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;5&lt;/span&gt; 设置忽略文件&lt;/h1&gt;
&lt;p&gt;有时候仓库中的某些文件或者文件夹并不需要进行同步,这时候可以通过设置忽略文件&lt;code&gt;.gitignore&lt;/code&gt;进行管理.&lt;/p&gt;
&lt;p&gt;参考帖子:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/onlynight/ReadmeDemo/tree/master/Readmes/GitIgnore&#34; class=&#34;uri&#34;&gt;https://github.com/onlynight/ReadmeDemo/tree/master/Readmes/GitIgnore&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Introduction to metagenomics</title>
      <link>/post/2020-02-06-r-study/</link>
      <pubDate>Fri, 21 Feb 2020 00:00:00 +0000</pubDate>
      <guid>/post/2020-02-06-r-study/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#eli-metchnikoff&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; Eli MEtchnikoff&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#phylogenetics-of-organisms&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; Phylogenetics of organisms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#the-human-microbiome-project&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3&lt;/span&gt; The human Microbiome Project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;eli-metchnikoff&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; Eli MEtchnikoff&lt;/h1&gt;
&lt;p&gt;microbome祖师爷.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;phylogenetics-of-organisms&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; Phylogenetics of organisms&lt;/h1&gt;
&lt;p&gt;核糖体RNA (rRNA)功能非常重要,可以将RNA变为蛋白质.序列非常保守.在所有生物种很相似.所以可以用来比较其序列来确定进化的依据.&lt;/p&gt;
&lt;p&gt;rRNA tree based.&lt;/p&gt;
&lt;p&gt;16S ribosomal RNA structure. (细菌)&lt;/p&gt;
&lt;p&gt;二级结构是预测出来的.&lt;/p&gt;
&lt;p&gt;RNA不稳定,所以一般都是测DNA.&lt;/p&gt;
&lt;p&gt;The collective genomes of soil microflora. metagenome.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;the-human-microbiome-project&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;3&lt;/span&gt; The human Microbiome Project&lt;/h1&gt;
&lt;p&gt;300 healthy participants.&lt;/p&gt;
&lt;p&gt;Utilize next generation sequencing&lt;/p&gt;
&lt;p&gt;what is normal microbome?&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.hmpdacc.org/ihmp/&#34; class=&#34;uri&#34;&gt;https://www.hmpdacc.org/ihmp/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;16S and sequencing.&lt;/p&gt;
&lt;p&gt;Targeted sequening 16S rna&lt;/p&gt;
&lt;p&gt;16S只能知道是什么菌.但是whole genome知道所有的基因的功能.&lt;/p&gt;
&lt;p&gt;Taxa.&lt;/p&gt;
&lt;p&gt;97 % similiary is one OTU (Operate Taxonomy Unit)&lt;/p&gt;
&lt;p&gt;Operational Taxonomic Unit (OPT)&lt;/p&gt;
&lt;p&gt;MetaHIT&lt;/p&gt;
&lt;p&gt;929 reference genomes.&lt;/p&gt;
&lt;p&gt;k-mers&lt;/p&gt;
&lt;p&gt;Challenge:&lt;/p&gt;
&lt;p&gt;Metagenomics classification&lt;/p&gt;
&lt;p&gt;跟已知的数据库进行对比.&lt;/p&gt;
&lt;p&gt;HUMAnN 2.0 pipeline&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R下载数据</title>
      <link>/post/2020-02-21-introduction_to_metagenomics/</link>
      <pubDate>Thu, 06 Feb 2020 00:00:00 +0000</pubDate>
      <guid>/post/2020-02-21-introduction_to_metagenomics/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#使用命令打开网页&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; 使用命令打开网页&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#下载2019-new-coronaverus数据&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; 下载2019 new-Coronaverus数据&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;在看余光创教授的一个包,把一些学到的内容记录下来.&lt;/p&gt;
&lt;div id=&#34;使用命令打开网页&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; 使用命令打开网页&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;  url &amp;lt;- &amp;#39;https://baidu.com&amp;#39;
  utils::browseURL(url)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;下载2019-new-coronaverus数据&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; 下载2019 new-Coronaverus数据&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt; url &amp;lt;- &amp;#39;https://view.inews.qq.com/g2/getOnsInfo?name=disease_h5&amp;amp;callback=1580373566110&amp;#39;
  x &amp;lt;- suppressWarnings(readLines(url, encoding = &amp;quot;UTF-8&amp;quot;))
  x &amp;lt;- sub(pattern = &amp;quot;^\\d+\\(&amp;quot;, replacement = &amp;quot;&amp;quot;, x = x)
  x &amp;lt;- sub(pattern = &amp;quot;\\)$&amp;quot;, replacement = &amp;quot;&amp;quot;, x = x)
  y &amp;lt;- jsonlite::fromJSON(txt = x)
  z &amp;lt;- jsonlite::fromJSON(txt = y$data)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;z是一个list,里面包含了所有的信息.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;names(z)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;lastUpdateTime&amp;quot;     &amp;quot;chinaTotal&amp;quot;         &amp;quot;chinaAdd&amp;quot;          
##  [4] &amp;quot;isShowAdd&amp;quot;          &amp;quot;showAddSwitch&amp;quot;      &amp;quot;areaTree&amp;quot;          
##  [7] &amp;quot;chinaDayList&amp;quot;       &amp;quot;chinaDayAddList&amp;quot;    &amp;quot;dailyNewAddHistory&amp;quot;
## [10] &amp;quot;dailyHistory&amp;quot;       &amp;quot;wuhanDayList&amp;quot;       &amp;quot;articleList&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;z$chinaTotal&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $confirm
## [1] 78196
## 
## $heal
## [1] 29858
## 
## $dead
## [1] 2718
## 
## $nowConfirm
## [1] 45620
## 
## $suspect
## [1] 2491
## 
## $nowSevere
## [1] 8752&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;z$chinaAdd&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $confirm
## [1] 6
## 
## $heal
## [1] 83
## 
## $dead
## [1] 0
## 
## $nowConfirm
## [1] -77
## 
## $suspect
## [1] 0
## 
## $nowSevere
## [1] 0&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;z$lastUpdateTime&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2020-02-27 00:32:14&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>使用pkgdown为自己的R包创建说明网站</title>
      <link>/post/2020-01-08-r-pkgdown/</link>
      <pubDate>Wed, 08 Jan 2020 00:00:00 +0000</pubDate>
      <guid>/post/2020-01-08-r-pkgdown/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#安装&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; 安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#创建网站&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; 创建网站&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#主页home-page&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3&lt;/span&gt; 主页(Home page)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#文章article&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4&lt;/span&gt; 文章(Article)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#新闻news&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;5&lt;/span&gt; 新闻(NEWS)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#发布&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;6&lt;/span&gt; 发布&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;使用&lt;code&gt;pkgdown&lt;/code&gt;包可以为自己的R包创建说明网站,从而更加方便别人对自己包的立即以及自己对包的管理.&lt;/p&gt;
&lt;p&gt;参考网址如下:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://pkgdown.r-lib.org/index.html&#34; class=&#34;uri&#34;&gt;https://pkgdown.r-lib.org/index.html&lt;/a&gt;&lt;/p&gt;
&lt;div id=&#34;安装&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; 安装&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Install release version from CRAN
install.packages(&amp;quot;pkgdown&amp;quot;)
# Install development version from GitHub
devtools::install_github(&amp;quot;r-lib/pkgdown&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;创建网站&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; 创建网站&lt;/h1&gt;
&lt;p&gt;在包的根目录下运行下列代码来创建网站.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pkgdown::build_site()&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;主页home-page&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;3&lt;/span&gt; 主页(Home page)&lt;/h1&gt;
&lt;p&gt;主页的内容来自于&lt;code&gt;README.md&lt;/code&gt;或者&lt;code&gt;index.md&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;文章article&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;4&lt;/span&gt; 文章(Article)&lt;/h1&gt;
&lt;p&gt;pkgdown自动的将&lt;code&gt;vignettes&lt;/code&gt;文件夹中的所有的&lt;code&gt;md&lt;/code&gt;文件转变为aritcles.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;新闻news&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;5&lt;/span&gt; 新闻(NEWS)&lt;/h1&gt;
&lt;p&gt;在根目录下创建&lt;code&gt;NEWS.md&lt;/code&gt;文件,然后就会在&lt;code&gt;Changelog&lt;/code&gt;页面下显示.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;发布&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;6&lt;/span&gt; 发布&lt;/h1&gt;
&lt;p&gt;最简单的方式是在github网页的&lt;code&gt;setting&lt;/code&gt;中,直接将&lt;code&gt;docs&lt;/code&gt;选为github pages.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;figure1.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>ggplot2 legend总结-1</title>
      <link>/post/2019-12-23-r-ggplot2-legend/</link>
      <pubDate>Mon, 23 Dec 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-12-23-r-ggplot2-legend/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#画出示例图片&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; 画出示例图片&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#去掉legend&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; 去掉legend&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#更改legend位置&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3&lt;/span&gt; 更改legend位置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#更改legend水平或者垂直排列&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4&lt;/span&gt; 更改legend水平或者垂直排列&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#更改legend各个元素相对位置&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;5&lt;/span&gt; 更改legend各个元素相对位置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#更改legend背景&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;6&lt;/span&gt; 更改legend背景&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#其他一些设置&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;7&lt;/span&gt; 其他一些设置&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#设置legend上下左右的边缘距离&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;7.1&lt;/span&gt; 设置legend上下左右的边缘距离&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;画出示例图片&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; 画出示例图片&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggplot2&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tidyverse&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Attaching packages ------------------------------------------------------------- tidyverse 1.2.1 --&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## v tibble  2.1.3     v purrr   0.3.3
## v tidyr   1.0.0     v dplyr   0.8.3
## v readr   1.3.1     v stringr 1.4.0
## v tibble  2.1.3     v forcats 0.4.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tibble&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tidyr&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;purrr&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;dplyr&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Conflicts ---------------------------------------------------------------- tidyverse_conflicts() --
## x dplyr::filter() masks stats::filter()
## x dplyr::lag()    masks stats::lag()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mtcars$gear &amp;lt;- factor(mtcars$gear)
(plot &amp;lt;- mtcars %&amp;gt;% 
    ggplot(aes(x = gear)) +
    geom_bar(aes(fill = gear)) +
    theme_bw()
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-12-23-r-ggplot2-legend/index_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;与其他ggplot2上的对象一样，对于其外在表现（appearance）等，大都是在&lt;code&gt;theme()&lt;/code&gt;函数中进行设置。&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;去掉legend&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; 去掉legend&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##使用theme函数
plot +
  theme(legend.position = &amp;quot;none&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-12-23-r-ggplot2-legend/index_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#使用guides函数
plot +
  guides(fill = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-12-23-r-ggplot2-legend/index_files/figure-html/unnamed-chunk-2-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##在scales系列函数中设置
plot +
  scale_fill_discrete(guide = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-12-23-r-ggplot2-legend/index_files/figure-html/unnamed-chunk-2-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;更改legend位置&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;3&lt;/span&gt; 更改legend位置&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##左侧
plot +
  theme(legend.position = &amp;quot;left&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-12-23-r-ggplot2-legend/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##右侧
plot +
  theme(legend.position = &amp;quot;top&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-12-23-r-ggplot2-legend/index_files/figure-html/unnamed-chunk-3-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##底部
plot +
  theme(legend.position = &amp;quot;bottom&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-12-23-r-ggplot2-legend/index_files/figure-html/unnamed-chunk-3-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##右侧。默认放在右侧
plot +
  theme(legend.position = &amp;quot;right&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-12-23-r-ggplot2-legend/index_files/figure-html/unnamed-chunk-3-4.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;有时候我们需要将legend放在角上。这时候还是使用&lt;code&gt;legend.position&lt;/code&gt;参数，但是需要配合&lt;code&gt;legend.justification&lt;/code&gt;参数使用。&lt;code&gt;legend.position&lt;/code&gt;设置为两个元素（数值）的向量，且取值范围为0-1。0代表最左边或者最右边，而1代表最上边或者最右边。第一个数值控制左右，第二个数值控制上下。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##右上角
plot +
  theme(legend.position = c(1, 1),
        legend.justification = c(1, 1))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-12-23-r-ggplot2-legend/index_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##右下角
plot +
  theme(legend.position = c(1, 0),
        legend.justification = c(1, 0))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-12-23-r-ggplot2-legend/index_files/figure-html/unnamed-chunk-4-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##左上角
plot +
  theme(legend.position = c(0, 1),
        legend.justification = c(0, 1))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-12-23-r-ggplot2-legend/index_files/figure-html/unnamed-chunk-4-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##左下角
plot +
  theme(legend.position = c(0, 0),
        legend.justification = c(0, 0))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-12-23-r-ggplot2-legend/index_files/figure-html/unnamed-chunk-4-4.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;当然，也可以通过设置具体的位置参数，来控制legend的位置。&lt;code&gt;legend.poisition&lt;/code&gt;中的数值都是相对值,而不是绝对值.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##中间
plot +
  theme(legend.position =  c(0.5, 0.5))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-12-23-r-ggplot2-legend/index_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;更改legend水平或者垂直排列&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;4&lt;/span&gt; 更改legend水平或者垂直排列&lt;/h1&gt;
&lt;p&gt;可以通过&lt;code&gt;legend.direction&lt;/code&gt;参数进行设置：&lt;code&gt;horizontal&lt;/code&gt;水平或者&lt;code&gt;verti&lt;/code&gt;垂直。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##修改legend标识中的size
plot +
  guides(fill = guide_legend(override.aes = list(size = 20)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-12-23-r-ggplot2-legend/index_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##修改legend title位置
##通过设置legend..title.align从而控制其左右相对位置，0是居中对其，-1靠左对其，1靠右对其，
plot +
  theme(legend.title.align = 0)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-12-23-r-ggplot2-legend/index_files/figure-html/unnamed-chunk-6-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot +
  theme(legend.title.align = -1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-12-23-r-ggplot2-legend/index_files/figure-html/unnamed-chunk-6-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot +
  theme(legend.title.align = 1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-12-23-r-ggplot2-legend/index_files/figure-html/unnamed-chunk-6-4.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##通过guides函数控制
plot +
  guides(fill = guide_legend(title.position = &amp;quot;left&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-12-23-r-ggplot2-legend/index_files/figure-html/unnamed-chunk-6-5.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot +
  guides(fill = guide_legend(title.position = &amp;quot;bottom&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-12-23-r-ggplot2-legend/index_files/figure-html/unnamed-chunk-6-6.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot +
  theme(legend.direction = &amp;quot;horizontal&amp;quot;, legend.position = &amp;quot;bottom&amp;quot;) +
  guides(fill = guide_legend(title.position = &amp;quot;top&amp;quot;, title.hjust = 0.5))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-12-23-r-ggplot2-legend/index_files/figure-html/unnamed-chunk-6-7.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;更改legend各个元素相对位置&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;5&lt;/span&gt; 更改legend各个元素相对位置&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##修改legend title位置
##通过设置legend..title.align从而控制其左右相对位置，0是居中对其，-1靠左对其，1靠右对其，
plot +
  theme(legend.title.align = 0)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-12-23-r-ggplot2-legend/index_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot +
  theme(legend.title.align = -1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-12-23-r-ggplot2-legend/index_files/figure-html/unnamed-chunk-7-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot +
  theme(legend.title.align = 1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-12-23-r-ggplot2-legend/index_files/figure-html/unnamed-chunk-7-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##通过guides函数控制
plot +
  guides(fill = guide_legend(title.position = &amp;quot;left&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-12-23-r-ggplot2-legend/index_files/figure-html/unnamed-chunk-7-4.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot +
  guides(fill = guide_legend(title.position = &amp;quot;bottom&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-12-23-r-ggplot2-legend/index_files/figure-html/unnamed-chunk-7-5.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot +
  theme(legend.direction = &amp;quot;horizontal&amp;quot;, legend.position = &amp;quot;bottom&amp;quot;) +
  guides(fill = guide_legend(title.position = &amp;quot;top&amp;quot;, title.hjust = 0.5))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-12-23-r-ggplot2-legend/index_files/figure-html/unnamed-chunk-7-6.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##去除legend文字
plot +
  guides(fill = guide_legend(label = FALSE))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-12-23-r-ggplot2-legend/index_files/figure-html/unnamed-chunk-7-7.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##修改legend text位置
plot +
  theme(legend.text.align = 1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-12-23-r-ggplot2-legend/index_files/figure-html/unnamed-chunk-7-8.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot +
  guides(fill = guide_legend(label.position = &amp;quot;left&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-12-23-r-ggplot2-legend/index_files/figure-html/unnamed-chunk-7-9.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot +
  theme(legend.position = &amp;quot;bottom&amp;quot;) +
  guides(fill = guide_legend(
    title.position = &amp;quot;right&amp;quot;,
    label.position = &amp;quot;bottom&amp;quot;,
    title.vjust = 1
  ))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-12-23-r-ggplot2-legend/index_files/figure-html/unnamed-chunk-7-10.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;更改legend背景&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;6&lt;/span&gt; 更改legend背景&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##修改legend整体背景
plot +
  theme(legend.background = element_rect(
    fill = &amp;quot;green&amp;quot;,
    colour = &amp;quot;red&amp;quot;,
    size = 2,
    linetype = 2
  ))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-12-23-r-ggplot2-legend/index_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##修改legend单个标识的背景
plot +
  theme(legend.key = element_rect(
    fill = &amp;quot;green&amp;quot;,
    colour = &amp;quot;red&amp;quot;,
    size = 0.1,
    linetype = 3
  ))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-12-23-r-ggplot2-legend/index_files/figure-html/unnamed-chunk-8-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##修改单个标识的高度和宽度，也可以用来改变标识的大小。
plot +
  theme(legend.key.height = unit(2, &amp;quot;line&amp;quot;),
        legend.key.width = unit(2, &amp;quot;line&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-12-23-r-ggplot2-legend/index_files/figure-html/unnamed-chunk-8-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot +
  theme(legend.key.size = unit(2, &amp;quot;line&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-12-23-r-ggplot2-legend/index_files/figure-html/unnamed-chunk-8-4.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##修改legend各个key之间的距离
plot +
  theme(legend.position = &amp;quot;top&amp;quot;,
        legend.spacing.x = unit(2, &amp;quot;line&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-12-23-r-ggplot2-legend/index_files/figure-html/unnamed-chunk-8-5.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot +
  theme(legend.position = &amp;quot;left&amp;quot;,
        legend.spacing.y = unit(2, &amp;quot;line&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-12-23-r-ggplot2-legend/index_files/figure-html/unnamed-chunk-8-6.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot +
  theme(legend.position = &amp;quot;left&amp;quot;,
        legend.spacing = unit(2, &amp;quot;line&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-12-23-r-ggplot2-legend/index_files/figure-html/unnamed-chunk-8-7.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;其他一些设置&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;7&lt;/span&gt; 其他一些设置&lt;/h1&gt;
&lt;div id=&#34;设置legend上下左右的边缘距离&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;7.1&lt;/span&gt; 设置legend上下左右的边缘距离&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot +
  theme(legend.margin = margin(5, 5, 5, 5, &amp;#39;cm&amp;#39;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-12-23-r-ggplot2-legend/index_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Rstudio shortcut总结</title>
      <link>/post/2019-12-23-rstudio-shortcut/</link>
      <pubDate>Mon, 23 Dec 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-12-23-rstudio-shortcut/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#tab标签&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; Tab(标签)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#panes窗口窗格&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; Panes(窗口,窗格)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#files文件&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3&lt;/span&gt; Files(文件)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#source-navigation导航&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4&lt;/span&gt; Source Navigation(导航)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;Rstudio快捷键总结,仅限于windows.&lt;/p&gt;
&lt;p&gt;完整版可以在Rstudio &lt;code&gt;Help&lt;/code&gt;找到.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;file:///D:/software/R/RStudio/www/docs/keyboard.htm&#34; class=&#34;uri&#34;&gt;file:///D:/software/R/RStudio/www/docs/keyboard.htm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;figure1.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;figure2.png&#34; /&gt;&lt;/p&gt;
&lt;div id=&#34;tab标签&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; Tab(标签)&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;Shortcut&lt;/th&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;Ctrl+Shift+.&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;切换标签&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;Ctrl+Tab&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;切换到下一个标签&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;Ctrl+Shift+Tab&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;切换到上一个标签&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;Ctrl+Shift+F11&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;切换到第一个标签&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;Ctrl+Shift+F11&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;切换到最后一个标签&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;panes窗口窗格&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; Panes(窗口,窗格)&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;Shortcut&lt;/th&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;Ctrl+1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;光标转移到&lt;code&gt;Source&lt;/code&gt;窗口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;Ctrl+2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;光标转移到&lt;code&gt;Console&lt;/code&gt;窗口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;Ctrl+3&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;光标转移到&lt;code&gt;Help&lt;/code&gt;窗口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;Ctrl+4&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;History&lt;/code&gt;窗口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;Ctrl+5&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Files&lt;/code&gt;窗口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;Ctrl+6&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Plot&lt;/code&gt;窗口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;Ctrl+7&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Packages&lt;/code&gt;窗口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;Ctrl+8&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Enviorment&lt;/code&gt;窗口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;Ctrl+9&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Viewer&lt;/code&gt;窗口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;Ctrl+F1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;版本控制&lt;code&gt;Git&lt;/code&gt;窗口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;Ctrl+F2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Build&lt;/code&gt;窗口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;Ctrl+F5&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Connection&lt;/code&gt;窗口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;Shift+Alt+T&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;光标转移到&lt;code&gt;Terminal&lt;/code&gt;窗口&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;上面所有的快捷键,加上&lt;code&gt;Shift&lt;/code&gt;之后,会最大化该窗口.&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;files文件&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;3&lt;/span&gt; Files(文件)&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;Shortcut&lt;/th&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;Ctrl+S&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;保存当前文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;Ctrl+Alt+S&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;保存所有文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;Ctrl+Shift+N&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;新建R script文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;Ctrl+O&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;打开文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;Ctrl+W&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;关闭当前文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;Ctrl+Shift+Alt+W&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;关闭除当前文件之外的所有文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;Ctrl+Shift+W&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;关闭除所有文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;Ctrl+Shift+F&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;在某个文件夹下的所有文件中进行搜索&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;source-navigation导航&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;4&lt;/span&gt; Source Navigation(导航)&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;Shortcut&lt;/th&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;Ctrl+F9&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;后退?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;Ctrl+F10&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;前进?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;Ctrl+F&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;在当前文件中寻找&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;F3&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查找下一个&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;Shift+F3&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查找前一个&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;Ctrl+Shift+J&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查找和替换&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;Ctrl+.&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;快速到达一个文件或者函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;Shift+Alt+G&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;快速到达文件的某一行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;Shift+Alt+J&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;快速跳转到其他部分&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;Ctrl+Shift+0&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;展示文档的outline&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;Ctrl+Alt+Up&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;在当前光标的上方添加光标&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;Ctrl+Alt+Down&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;在当前光标的下方添加光标&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R终端输出</title>
      <link>/post/2019-12-18-r-terminal-output/</link>
      <pubDate>Wed, 18 Dec 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-12-18-r-terminal-output/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#message函数&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; &lt;code&gt;message()&lt;/code&gt;函数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#改变输出字体颜色和格式&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; 改变输出字体颜色和格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#一些常用的特殊字符&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3&lt;/span&gt; 一些常用的特殊字符&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;message函数&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; &lt;code&gt;message()&lt;/code&gt;函数&lt;/h1&gt;
&lt;p&gt;可以使用&lt;code&gt;message()&lt;/code&gt;函数进行终端屏幕输出.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;message(&amp;quot;ABC&amp;quot;, &amp;quot;DEF&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ABCDEF&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;suppressMessages(message(&amp;quot;ABC&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;testit &amp;lt;- function() {
  message(&amp;quot;testing package startup messages&amp;quot;)
  packageStartupMessage(&amp;quot;initializing ...&amp;quot;, appendLF = FALSE)
  Sys.sleep(1)
  packageStartupMessage(&amp;quot; done&amp;quot;)
}

testit()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## testing package startup messages&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## initializing ... done&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;suppressPackageStartupMessages(testit())&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## testing package startup messages&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;suppressMessages(testit())&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;改变输出字体颜色和格式&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; 改变输出字体颜色和格式&lt;/h1&gt;
&lt;p&gt;使用&lt;code&gt;crayon&lt;/code&gt;包可以修改输出字体的颜色.参考官方文档:&lt;a href=&#34;https://github.com/r-lib/crayon&#34; class=&#34;uri&#34;&gt;https://github.com/r-lib/crayon&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(crayon)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;crayon&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cat(blue(&amp;quot;Hello&amp;quot;, &amp;quot;world!\n&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Hello world!&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cat(&amp;quot;... to highlight the &amp;quot; %+% red(&amp;quot;search term&amp;quot;) %+% &amp;quot; in a block of text\n&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ... to highlight the search term in a block of text&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cat(yellow$bgMagenta$bold(&amp;#39;Hello world!\n&amp;#39;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Hello world!&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cat(green(
  &amp;#39;I am a green line &amp;#39; %+%
  blue$underline$bold(&amp;#39;with a blue substring&amp;#39;) %+%
  &amp;#39; that becomes green again!\n&amp;#39;
))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## I am a green line with a blue substring that becomes green again!&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;error &amp;lt;- red $ bold
warn &amp;lt;- magenta $ underline
note &amp;lt;- cyan
cat(error(&amp;quot;Error: subscript out of bounds!\n&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Error: subscript out of bounds!&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cat(warn(&amp;quot;Warning: shorter argument was recycled.\n&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: shorter argument was recycled.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cat(note(&amp;quot;Note: no such directory.\n&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Note: no such directory.&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;一些常用的特殊字符&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;3&lt;/span&gt; 一些常用的特殊字符&lt;/h1&gt;
&lt;p&gt;使用&lt;code&gt;clisymbols&lt;/code&gt;包可以给出一些常见的特殊字符.&lt;/p&gt;
&lt;p&gt;官方文档:&lt;a href=&#34;https://github.com/r-lib/clisymbols&#34; class=&#34;uri&#34;&gt;https://github.com/r-lib/clisymbols&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(clisymbols)
cat(symbol$tick, &amp;quot;All good\n&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;lt;U+2714&amp;gt; All good&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cat(symbol$cross, &amp;quot;Problem\n&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;lt;U+2716&amp;gt; Problem&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;for (i in seq_along(symbol)) {
  cat(symbol[[i]], &amp;quot;\t&amp;quot;, names(symbol)[i], &amp;quot;\n&amp;quot;, sep = &amp;quot;&amp;quot;)
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;lt;U+2714&amp;gt; tick
## &amp;lt;U+2716&amp;gt; cross
## &amp;lt;U+2605&amp;gt; star
## &amp;lt;U+2587&amp;gt; square
## [ ]  square_small
## [¦]  square_small_filled
## &amp;lt;U+25EF&amp;gt; circle
## (*)  circle_filled
## &amp;lt;U+25CC&amp;gt; circle_dotted
## (o)  circle_double
## &amp;lt;U+24DE&amp;gt; circle_circle
## &amp;lt;U+24E7&amp;gt; circle_cross
## &amp;lt;U+24BE&amp;gt; circle_pipe
## (?)  circle_question_mark
## &amp;lt;U+25CF&amp;gt; bullet
## .    dot
## -    line
## -    double_line
## …    ellipsis
## &amp;gt;    pointer
## i    info
## &amp;lt;U+203C&amp;gt; warning
## &amp;lt;U+2630&amp;gt; menu
## &amp;lt;U+263A&amp;gt; smiley
## &amp;lt;U+0DF4&amp;gt; mustache
## &amp;lt;U+2665&amp;gt; heart
## &amp;lt;U+2191&amp;gt; arrow_up
## &amp;lt;U+2193&amp;gt; arrow_down
## &amp;lt;U+2190&amp;gt; arrow_left
## &amp;lt;U+2192&amp;gt; arrow_right
## (*)  radio_on
## ( )  radio_off
## &amp;lt;U+2612&amp;gt; checkbox_on
## &amp;lt;U+2610&amp;gt; checkbox_off
## &amp;lt;U+24E7&amp;gt; checkbox_circle_on
## &amp;lt;U+24BE&amp;gt; checkbox_circle_off
## (?)  fancy_question_mark
## !=   neq
## &amp;gt;=   geq
## &amp;lt;=   leq
## &amp;lt;U+2594&amp;gt; upper_block_1
## ¯    upper_block_4
## &amp;lt;U+2581&amp;gt; lower_block_1
## &amp;lt;U+2582&amp;gt; lower_block_2
## &amp;lt;U+2583&amp;gt; lower_block_3
## _    lower_block_4
## &amp;lt;U+2585&amp;gt; lower_block_5
## &amp;lt;U+2586&amp;gt; lower_block_6
## &amp;lt;U+2587&amp;gt; lower_block_7
## ¦    lower_block_8
## ¦    full_block&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>ggraph画网络图</title>
      <link>/post/2019-11-27-r-ggraph/</link>
      <pubDate>Wed, 27 Nov 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-11-27-r-ggraph/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#安装&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; 安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#构建所需要的数据&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; 构建所需要的数据&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#构建edges数据&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.1&lt;/span&gt; 构建edges数据&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#然后构建node的数据&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.2&lt;/span&gt; 然后构建node的数据&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#构建ggraph所需的数据&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.3&lt;/span&gt; 构建&lt;code&gt;ggraph&lt;/code&gt;所需的数据&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#画图&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3&lt;/span&gt; 画图&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#基础绘图&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.1&lt;/span&gt; 基础绘图&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#添加文字&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.2&lt;/span&gt; 添加文字&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#使用不同的layout&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.3&lt;/span&gt; 使用不同的layout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#不同的连接线&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.4&lt;/span&gt; 不同的连接线&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#使用不同的主题&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.5&lt;/span&gt; 使用不同的主题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code&gt;ggraph&lt;/code&gt;是Thomas Lin Pedersen开发的网络可视化的包.官方文档在这:&lt;a href=&#34;https://ggraph.data-imaginist.com/index.html&#34; class=&#34;uri&#34;&gt;https://ggraph.data-imaginist.com/index.html&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;它和&lt;code&gt;igraph&lt;/code&gt;不同,igraph虽然也有网络可视化,但是更多的还是用于网络分析,可视化并不是太友好.&lt;/p&gt;
&lt;p&gt;大致记录一下如何使用它来进行网络图的构建.&lt;/p&gt;
&lt;div id=&#34;安装&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; 安装&lt;/h1&gt;
&lt;p&gt;需要安装两个包.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;install.packages(&amp;quot;ggraph&amp;quot;)
install.packages(&amp;quot;tidygraph&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tidyverse&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Attaching packages ------------------------------------------------------------- tidyverse 1.2.1 --&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## v ggplot2 3.2.1     v purrr   0.3.2
## v tibble  2.1.3     v dplyr   0.8.3
## v tidyr   1.0.0     v stringr 1.4.0
## v readr   1.3.1     v forcats 0.4.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggplot2&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tibble&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tidyr&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;dplyr&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Conflicts ---------------------------------------------------------------- tidyverse_conflicts() --
## x dplyr::filter() masks stats::filter()
## x dplyr::lag()    masks stats::lag()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidygraph)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tidygraph&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;tidygraph&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following object is masked from &amp;#39;package:stats&amp;#39;:
## 
##     filter&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggraph)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggraph&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;构建所需要的数据&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; 构建所需要的数据&lt;/h1&gt;
&lt;p&gt;最为简单的办法是使用数据库格式的数据,而且前两行分别为&lt;code&gt;from&lt;/code&gt;和&lt;code&gt;to&lt;/code&gt;.我们构建一个示例数据:&lt;/p&gt;
&lt;div id=&#34;构建edges数据&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.1&lt;/span&gt; 构建edges数据&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(0)
edges &amp;lt;- data.frame(from = sample(1:15, 80, replace = TRUE), 
                 to = sample(1:15, 80, replace = TRUE), 
                 stringsAsFactors = FALSE) %&amp;gt;% 
  distinct()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这是最简单的一个edge信息,每一行就是一个edge信息,当然,我们也可以给每一条边都加上属性信息.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;edges &amp;lt;- data.frame(edges, 
                 edge.width = rnorm(n = nrow(edges), mean = 1, sd = 0.5), 
                 edge.colour = rnorm(n = nrow(edges), mean = 0, sd = 0.5),
                 stringsAsFactors = FALSE)
edges %&amp;gt;% head&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   from to edge.width  edge.colour
## 1   14  6  0.2382166  0.225093551
## 2    9  8  1.2969731 -0.009279916
## 3    4  7  1.1664752 -0.159034187
## 4    7 11  1.5315499 -0.464681074
## 5    1  1  0.8479080 -0.743730155
## 6    2  4  1.1850094 -0.537596148&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;然后构建node的数据&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.2&lt;/span&gt; 然后构建node的数据&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;node &amp;lt;- unique(c(edges$from, edges$to)) %&amp;gt;% sort()
node&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;nodes &amp;lt;- data.frame(node, node.size = rnorm(n = length(node), mean = 1, sd = 0.5),
                    node.colour = sample(c(&amp;quot;Class A&amp;quot;, &amp;quot;Class B&amp;quot;), length(node), replace = TRUE), 
                    stringsAsFactors = FALSE)
nodes %&amp;gt;% head&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   node node.size node.colour
## 1    1 0.3733551     Class A
## 2    2 1.3211207     Class B
## 3    3 0.9776454     Class A
## 4    4 0.1333908     Class B
## 5    5 1.0010659     Class B
## 6    6 0.6848498     Class A&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;构建ggraph所需的数据&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.3&lt;/span&gt; 构建&lt;code&gt;ggraph&lt;/code&gt;所需的数据&lt;/h2&gt;
&lt;p&gt;得到edges和nodes之后,需要将其转为&lt;code&gt;ggraph&lt;/code&gt;所需要的格式.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;graph_data &amp;lt;- tidygraph::tbl_graph(nodes = nodes, edges = edges, 
                                   directed = FALSE)
graph_data&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tbl_graph: 15 nodes and 67 edges
## #
## # An undirected multigraph with 1 component
## #
## # Node Data: 15 x 3 (active)
##    node node.size node.colour
##   &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;      
## 1     1     0.373 Class A    
## 2     2     1.32  Class B    
## 3     3     0.978 Class A    
## 4     4     0.133 Class B    
## 5     5     1.00  Class B    
## 6     6     0.685 Class A    
## # ... with 9 more rows
## #
## # Edge Data: 67 x 4
##    from    to edge.width edge.colour
##   &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;      &amp;lt;dbl&amp;gt;       &amp;lt;dbl&amp;gt;
## 1     6    14      0.238     0.225  
## 2     8     9      1.30     -0.00928
## 3     4     7      1.17     -0.159  
## # ... with 64 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;画图&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;3&lt;/span&gt; 画图&lt;/h1&gt;
&lt;div id=&#34;基础绘图&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.1&lt;/span&gt; 基础绘图&lt;/h2&gt;
&lt;p&gt;拿到所需数据之后,可以开始画图了,跟&lt;code&gt;ggplot2&lt;/code&gt;一样,也是图层的画法,一层层进行叠加.我们先看一个简单的例子.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggraph(graph = graph_data) +
  geom_edge_fan() +
  geom_node_point()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Using `stress` as default layout&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-11-27-r-ggraph/index_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;首先可以看到,需要使用&lt;code&gt;ggraph&lt;/code&gt;启动一个图像,然后必须的两个geom分别是&lt;code&gt;geom_edge_xx&lt;/code&gt;和&lt;code&gt;geom_node_xxx&lt;/code&gt;分别用来定义边和node.他们的使用办法跟&lt;code&gt;ggplot2&lt;/code&gt;非常类似,参数也都很类似,只是加上了&lt;code&gt;edge&lt;/code&gt;和&lt;code&gt;node&lt;/code&gt;标签.&lt;/p&gt;
&lt;p&gt;我们下面接着对图片进行美化.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot &amp;lt;- 
ggraph(graph = graph_data, layout = &amp;quot;linear&amp;quot;, circular = TRUE) +
  geom_edge_arc(aes(edge_colour = edge.colour, edge_width = edge.width)) +
scale_edge_colour_gradient2(low = &amp;quot;#155F83FF&amp;quot;, mid = &amp;quot;white&amp;quot;, high = &amp;quot;#800000FF&amp;quot;) +
  scale_edge_width_continuous(range = c(0.2,2)) +
  geom_node_point(aes(colour = node.colour, size = node.size)) +
  scale_size_continuous(range = c(5,10)) +
  scale_colour_manual(values = c(&amp;quot;Class A&amp;quot; = &amp;quot;#8A9045FF&amp;quot;, &amp;quot;Class B&amp;quot; = &amp;quot;#155F83FF&amp;quot;)) +
  theme_void()
plot&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-11-27-r-ggraph/index_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;从上面例子可以看到,对于edge的属性的设置,需要使用&lt;code&gt;scale_edge_xxx&lt;/code&gt;系列函数,而对于node,则直接使用原来的&lt;code&gt;ggplot2&lt;/code&gt;的&lt;code&gt;scale_xxx&lt;/code&gt;系列函数就可以了.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;添加文字&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.2&lt;/span&gt; 添加文字&lt;/h2&gt;
&lt;p&gt;添加文字可以使用&lt;code&gt;geom_node_text()&lt;/code&gt;和&lt;code&gt;geom_node_label()&lt;/code&gt;函数.&lt;/p&gt;
&lt;p&gt;对于layout为圆形网状来说,我们需要将node的角度进行一定程度的调整.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;node_name = paste(&amp;quot;Node&amp;quot;, node, sep = &amp;quot;_&amp;quot;)
node_name&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;Node_1&amp;quot;  &amp;quot;Node_2&amp;quot;  &amp;quot;Node_3&amp;quot;  &amp;quot;Node_4&amp;quot;  &amp;quot;Node_5&amp;quot;  &amp;quot;Node_6&amp;quot;  &amp;quot;Node_7&amp;quot; 
##  [8] &amp;quot;Node_8&amp;quot;  &amp;quot;Node_9&amp;quot;  &amp;quot;Node_10&amp;quot; &amp;quot;Node_11&amp;quot; &amp;quot;Node_12&amp;quot; &amp;quot;Node_13&amp;quot; &amp;quot;Node_14&amp;quot;
## [15] &amp;quot;Node_15&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;angle &amp;lt;- 360 * (c(1:length(node_name)) - 0.5)/length(node_name)
hjust &amp;lt;- ifelse(angle &amp;gt; 180, 1, 0)
angle &amp;lt;- ifelse(angle &amp;gt; 180, 90 - angle + 180, 90 - angle)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后添加node文字.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot +
  geom_node_text(aes(x = x * 1.05,
                     y = y * 1.15,
                     label = node_name), 
                 angle = angle, 
                 hjust = hjust,
                 colour = &amp;quot;black&amp;quot;,
                 size = 3.5)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-11-27-r-ggraph/index_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以看到有些文字跑到绘图区域外面了,这时候需要将坐标轴进行扩展就行了.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot +
  geom_node_text(aes(x = x * 1.05,
                     y = y * 1.15,
                     label = node_name), 
                 angle = angle, 
                 hjust = hjust,
                 colour = &amp;quot;black&amp;quot;,
                 size = 3.5) +
  expand_limits(x = c(-1.5, 1.5), y = c(-1.5, 1.5))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-11-27-r-ggraph/index_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;我们可以看看原来的坐标轴是什么样子的.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggraph(graph = graph_data, layout = &amp;quot;linear&amp;quot;, circular = TRUE) +
  geom_edge_arc(aes(edge_colour = edge.colour, edge_width = edge.width)) +
scale_edge_colour_gradient2(low = &amp;quot;#155F83FF&amp;quot;, mid = &amp;quot;white&amp;quot;, high = &amp;quot;#800000FF&amp;quot;) +
  scale_edge_width_continuous(range = c(0.2,2)) +
  geom_node_point(aes(colour = node.colour, size = node.size)) +
  scale_size_continuous(range = c(5,10)) +
  scale_colour_manual(values = c(&amp;quot;Class A&amp;quot; = &amp;quot;#8A9045FF&amp;quot;, &amp;quot;Class B&amp;quot; = &amp;quot;#155F83FF&amp;quot;)) +
  theme_bw()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-11-27-r-ggraph/index_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;我们将theme设置为&lt;code&gt;theme_bw()&lt;/code&gt;就可以清楚的看到原来的坐标体系了.&lt;/p&gt;
&lt;p&gt;可以看到legend的顺序有点乱.可以在&lt;code&gt;guides()&lt;/code&gt;函数中设置.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggraph(graph = graph_data, layout = &amp;quot;linear&amp;quot;, circular = TRUE) +
  geom_edge_arc(aes(edge_colour = edge.colour, edge_width = edge.width)) +
  scale_edge_colour_gradient2(low = &amp;quot;#155F83FF&amp;quot;, mid = &amp;quot;white&amp;quot;, high = &amp;quot;#800000FF&amp;quot;) +
  scale_edge_width_continuous(range = c(0.2,2)) +
  geom_node_point(aes(colour = node.colour, size = node.size)) +
  scale_size_continuous(range = c(5,10)) +
  scale_colour_manual(values = c(&amp;quot;Class A&amp;quot; = &amp;quot;#8A9045FF&amp;quot;, &amp;quot;Class B&amp;quot; = &amp;quot;#155F83FF&amp;quot;)) +
  guides(colour = guide_legend(order = 1),
         size = guide_legend(order = 2),
         colour = guide_edge_colourbar(order = 3)) +
  theme_void()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Duplicated aesthetics after name standardisation: colour&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-11-27-r-ggraph/index_files/figure-html/unnamed-chunk-12-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;添加文字的时候,文字之间,以及文字node之间,会出现覆盖的问题.如下图所示:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggraph(graph = graph_data, layout = &amp;quot;auto&amp;quot;, circular = TRUE) +
  geom_edge_arc(aes(edge_colour = edge.colour, edge_width = edge.width)) +
scale_edge_colour_gradient2(low = &amp;quot;#155F83FF&amp;quot;, mid = &amp;quot;white&amp;quot;, high = &amp;quot;#800000FF&amp;quot;) +
  scale_edge_width_continuous(range = c(0.2,2)) +
  geom_node_point(aes(colour = node.colour, size = node.size)) +
  scale_size_continuous(range = c(5,10)) +
  scale_colour_manual(values = c(&amp;quot;Class A&amp;quot; = &amp;quot;#8A9045FF&amp;quot;, &amp;quot;Class B&amp;quot; = &amp;quot;#155F83FF&amp;quot;)) +
  theme_void() +
      geom_node_text(aes(x = x,
                     y = y,
                     label = node_name,
                     colour = node.colour), 
                 size = 3.5) &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Using `stress` as default layout&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-11-27-r-ggraph/index_files/figure-html/unnamed-chunk-13-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;ggplot2&lt;/code&gt;中,我们使用&lt;code&gt;ggrepel&lt;/code&gt;包可以解决这个问题.在这里,我们可以设置&lt;code&gt;repel&lt;/code&gt;为TRUE.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggraph(graph = graph_data, layout = &amp;quot;auto&amp;quot;, circular = TRUE) +
  geom_edge_arc(aes(edge_colour = edge.colour, edge_width = edge.width)) +
scale_edge_colour_gradient2(low = &amp;quot;#155F83FF&amp;quot;, mid = &amp;quot;white&amp;quot;, high = &amp;quot;#800000FF&amp;quot;) +
  scale_edge_width_continuous(range = c(0.2,2)) +
  geom_node_point(aes(colour = node.colour, size = node.size)) +
  scale_size_continuous(range = c(5,10)) +
  scale_colour_manual(values = c(&amp;quot;Class A&amp;quot; = &amp;quot;#8A9045FF&amp;quot;, &amp;quot;Class B&amp;quot; = &amp;quot;#155F83FF&amp;quot;)) +
  theme_void() +
      geom_node_text(aes(label = node_name,
                     colour = node.colour), 
                 size = 3.5, repel = TRUE) &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Using `stress` as default layout&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-11-27-r-ggraph/index_files/figure-html/unnamed-chunk-14-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;当然,也可以使用&lt;code&gt;geom_node_label()&lt;/code&gt;来标注.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggraph(graph = graph_data, layout = &amp;quot;auto&amp;quot;, circular = TRUE) +
  geom_edge_arc(aes(edge_colour = edge.colour, edge_width = edge.width)) +
scale_edge_colour_gradient2(low = &amp;quot;#155F83FF&amp;quot;, mid = &amp;quot;white&amp;quot;, high = &amp;quot;#800000FF&amp;quot;) +
  scale_edge_width_continuous(range = c(0.2,2)) +
  geom_node_point(aes(colour = node.colour, size = node.size)) +
  scale_size_continuous(range = c(5,10)) +
  scale_colour_manual(values = c(&amp;quot;Class A&amp;quot; = &amp;quot;#8A9045FF&amp;quot;, &amp;quot;Class B&amp;quot; = &amp;quot;#155F83FF&amp;quot;)) +
  theme_void() +
      geom_node_label(aes(label = node_name,
                     colour = node.colour), 
                 size = 3.5, repel = TRUE) &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Using `stress` as default layout&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-11-27-r-ggraph/index_files/figure-html/unnamed-chunk-15-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;使用不同的layout&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.3&lt;/span&gt; 使用不同的layout&lt;/h2&gt;
&lt;p&gt;对网络来说,可以使用不同的layout,layout既可以通过再&lt;code&gt;ggraph&lt;/code&gt;中通过设置&lt;code&gt;layout&lt;/code&gt;参数实现,也可以通过将&lt;code&gt;graph&lt;/code&gt;直接赋予layout属性实现.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggraph(graph = graph_data, layout = &amp;quot;auto&amp;quot;, circular = TRUE) +
  geom_edge_arc(aes(edge_colour = edge.colour, edge_width = edge.width)) +
scale_edge_colour_gradient2(low = &amp;quot;#155F83FF&amp;quot;, mid = &amp;quot;white&amp;quot;, high = &amp;quot;#800000FF&amp;quot;) +
  scale_edge_width_continuous(range = c(0.2,2)) +
  geom_node_point(aes(colour = node.colour, size = node.size)) +
  scale_size_continuous(range = c(5,10)) +
  scale_colour_manual(values = c(&amp;quot;Class A&amp;quot; = &amp;quot;#8A9045FF&amp;quot;, &amp;quot;Class B&amp;quot; = &amp;quot;#155F83FF&amp;quot;)) +
  theme_void()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Using `stress` as default layout&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-11-27-r-ggraph/index_files/figure-html/unnamed-chunk-16-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggraph(graph = graph_data, layout = &amp;quot;linear&amp;quot;, circular = FALSE) +
  geom_edge_arc(aes(edge_colour = edge.colour, edge_width = edge.width)) +
scale_edge_colour_gradient2(low = &amp;quot;#155F83FF&amp;quot;, mid = &amp;quot;white&amp;quot;, high = &amp;quot;#800000FF&amp;quot;) +
  scale_edge_width_continuous(range = c(0.2,2)) +
  geom_node_point(aes(colour = node.colour, size = node.size)) +
  scale_size_continuous(range = c(5,10)) +
  scale_colour_manual(values = c(&amp;quot;Class A&amp;quot; = &amp;quot;#8A9045FF&amp;quot;, &amp;quot;Class B&amp;quot; = &amp;quot;#155F83FF&amp;quot;)) +
      geom_node_text(aes(colour = node.colour),
                     hjust = 1,
                     angle = 65,
                     nudge_y = -0.3,
                     label = node_name, 
                 size = 3.5) +
  expand_limits(x = c(-1.5, 1.5), y = c(-1.5, 1.5)) +
  theme_void()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-11-27-r-ggraph/index_files/figure-html/unnamed-chunk-17-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggraph(graph = graph_data, layout = &amp;quot;eigen&amp;quot;, circular = FALSE) +
  geom_edge_arc(aes(edge_colour = edge.colour, edge_width = edge.width)) +
scale_edge_colour_gradient2(low = &amp;quot;#155F83FF&amp;quot;, mid = &amp;quot;white&amp;quot;, high = &amp;quot;#800000FF&amp;quot;) +
  scale_edge_width_continuous(range = c(0.2,2)) +
  geom_node_point(aes(colour = node.colour, size = node.size)) +
  scale_size_continuous(range = c(5,10)) +
  scale_colour_manual(values = c(&amp;quot;Class A&amp;quot; = &amp;quot;#8A9045FF&amp;quot;, &amp;quot;Class B&amp;quot; = &amp;quot;#155F83FF&amp;quot;)) +
  theme_void() +
    geom_node_text(aes(x = x,
                     y = y,
                     label = node_name,
                     colour = node.colour), 
                 size = 3.5) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-11-27-r-ggraph/index_files/figure-html/unnamed-chunk-18-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;不同的连接线&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.4&lt;/span&gt; 不同的连接线&lt;/h2&gt;
&lt;p&gt;上面的例子node之间的连接都是曲线(&lt;code&gt;geom_edge_arc&lt;/code&gt;),当然我们也可以使用不同的连接方式,比如直线,这时候需要使用不同的&lt;code&gt;geom_edge_xxx()&lt;/code&gt;函数.&lt;/p&gt;
&lt;p&gt;比如直线可以使用&lt;code&gt;geom_edge_link()&lt;/code&gt;,有三个不同的函数,暂时没有仔细看差别,详细差别可以使用:&lt;code&gt;?get_edges&lt;/code&gt;查看.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggraph(graph = graph_data, layout = &amp;quot;auto&amp;quot;, circular = TRUE) +
  geom_edge_link(aes(edge_colour = edge.colour, edge_width = edge.width)) +
scale_edge_colour_gradient2(low = &amp;quot;#155F83FF&amp;quot;, mid = &amp;quot;white&amp;quot;, high = &amp;quot;#800000FF&amp;quot;) +
  scale_edge_width_continuous(range = c(0.2,2)) +
  geom_node_point(aes(colour = node.colour, size = node.size)) +
  scale_size_continuous(range = c(5,10)) +
  scale_colour_manual(values = c(&amp;quot;Class A&amp;quot; = &amp;quot;#8A9045FF&amp;quot;, &amp;quot;Class B&amp;quot; = &amp;quot;#155F83FF&amp;quot;)) +
  theme_void()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Using `stress` as default layout&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-11-27-r-ggraph/index_files/figure-html/unnamed-chunk-19-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggraph(graph = graph_data, layout = &amp;quot;auto&amp;quot;, circular = TRUE) +
  geom_edge_link2(aes(edge_colour = edge.colour, edge_width = edge.width)) +
scale_edge_colour_gradient2(low = &amp;quot;#155F83FF&amp;quot;, mid = &amp;quot;white&amp;quot;, high = &amp;quot;#800000FF&amp;quot;) +
  scale_edge_width_continuous(range = c(0.2,2)) +
  geom_node_point(aes(colour = node.colour, size = node.size)) +
  scale_size_continuous(range = c(5,10)) +
  scale_colour_manual(values = c(&amp;quot;Class A&amp;quot; = &amp;quot;#8A9045FF&amp;quot;, &amp;quot;Class B&amp;quot; = &amp;quot;#155F83FF&amp;quot;)) +
  theme_void()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Using `stress` as default layout&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-11-27-r-ggraph/index_files/figure-html/unnamed-chunk-20-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggraph(graph = graph_data, layout = &amp;quot;auto&amp;quot;, circular = TRUE) +
  geom_edge_link0(aes(edge_colour = edge.colour, edge_width = edge.width)) +
scale_edge_colour_gradient2(low = &amp;quot;#155F83FF&amp;quot;, mid = &amp;quot;white&amp;quot;, high = &amp;quot;#800000FF&amp;quot;) +
  scale_edge_width_continuous(range = c(0.2,2)) +
  geom_node_point(aes(colour = node.colour, size = node.size)) +
  scale_size_continuous(range = c(5,10)) +
  scale_colour_manual(values = c(&amp;quot;Class A&amp;quot; = &amp;quot;#8A9045FF&amp;quot;, &amp;quot;Class B&amp;quot; = &amp;quot;#155F83FF&amp;quot;)) +
  theme_void()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Using `stress` as default layout&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-11-27-r-ggraph/index_files/figure-html/unnamed-chunk-21-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;画有一定弯度的edge可以使用&lt;code&gt;geom_edge_fan()&lt;/code&gt;函数.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggraph(graph = graph_data, layout = &amp;quot;auto&amp;quot;, circular = TRUE) +
  geom_edge_fan(aes(edge_colour = edge.colour, edge_width = edge.width)) +
scale_edge_colour_gradient2(low = &amp;quot;#155F83FF&amp;quot;, mid = &amp;quot;white&amp;quot;, high = &amp;quot;#800000FF&amp;quot;) +
  scale_edge_width_continuous(range = c(0.2,2)) +
  geom_node_point(aes(colour = node.colour, size = node.size)) +
  scale_size_continuous(range = c(5,10)) +
  scale_colour_manual(values = c(&amp;quot;Class A&amp;quot; = &amp;quot;#8A9045FF&amp;quot;, &amp;quot;Class B&amp;quot; = &amp;quot;#155F83FF&amp;quot;)) +
  theme_void()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Using `stress` as default layout&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-11-27-r-ggraph/index_files/figure-html/unnamed-chunk-22-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;使用不同的主题&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.5&lt;/span&gt; 使用不同的主题&lt;/h2&gt;
&lt;p&gt;可以使用暗黑主题,像图片显示的更炫酷一些.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggraph(graph = graph_data, layout = &amp;quot;auto&amp;quot;, circular = TRUE) +
  geom_edge_arc(aes(edge_colour = edge.colour, edge_width = edge.width)) +
scale_edge_colour_gradient2(low = &amp;quot;#155F83FF&amp;quot;, mid = &amp;quot;white&amp;quot;, high = &amp;quot;#800000FF&amp;quot;) +
  scale_edge_width_continuous(range = c(0.2,2)) +
  geom_node_point(aes(colour = node.colour, size = node.size)) +
  scale_size_continuous(range = c(5,10)) +
  scale_colour_manual(values = c(&amp;quot;Class A&amp;quot; = &amp;quot;#8A9045FF&amp;quot;, &amp;quot;Class B&amp;quot; = &amp;quot;#155F83FF&amp;quot;)) +
  ggdark::dark_theme_void() +
      geom_node_text(aes(label = node_name,
                     colour = node.colour), 
                 size = 3.5, repel = TRUE) &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Using `stress` as default layout&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Inverted geom defaults of fill and color/colour.
## To change them back, use invert_geom_defaults().&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-11-27-r-ggraph/index_files/figure-html/unnamed-chunk-23-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;因为leged的某些显示颜色为黑色,而主题没有将其修改过来,可以手动进行修改.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggraph(graph = graph_data, layout = &amp;quot;auto&amp;quot;, circular = TRUE) +
  geom_edge_arc(aes(edge_colour = edge.colour, edge_width = edge.width)) +
  scale_edge_colour_gradient2(low = &amp;quot;#155F83FF&amp;quot;, mid = &amp;quot;white&amp;quot;,
                              high = &amp;quot;#800000FF&amp;quot;) +
  scale_edge_width_continuous(range = c(0.2,2), 
                              guide = guide_legend(override.aes = list(colour = &amp;quot;white&amp;quot;, alpha =1))) +
  guides(colour = guide_legend(override.aes = list(size = 5))) +
  geom_node_point(aes(colour = node.colour, size = node.size)) +
  scale_size_continuous(range = c(5,10)) +
  scale_colour_manual(values = c(&amp;quot;Class A&amp;quot; = &amp;quot;#8A9045FF&amp;quot;, &amp;quot;Class B&amp;quot; = &amp;quot;#155F83FF&amp;quot;)) +
  ggdark::dark_theme_void() +
      geom_node_text(aes(label = node_name,
                     colour = node.colour), 
                 size = 3.5, repel = TRUE) &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Using `stress` as default layout&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-11-27-r-ggraph/index_files/figure-html/unnamed-chunk-24-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>SAM test用于差异标志物的选择</title>
      <link>/post/2019-11-27-volcano-plot/</link>
      <pubDate>Wed, 27 Nov 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-11-27-volcano-plot/</guid>
      <description>


&lt;p&gt;参考文献&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;,&lt;a href=&#34;#fn2&#34; class=&#34;footnote-ref&#34; id=&#34;fnref2&#34;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;示例代码:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Function to compute the smooth threshold curve
smooth.threshold=function(x,ta,s0,df){
  xp=x[x&amp;gt;(ta*s0)]; xn=x[x&amp;lt;(-ta*s0)]; dp=xp/ta-s0; dn=xn/(-ta)-s0;
  dp=s0/dp; dp=ta*(1+dp); dn=s0/dn; dn=ta*(1+dn);
  fp=pt(dp,df=df); fn=pt(dn,df=df); yp=-log10(2*(1-fp)); yn=-log10(2*(1-fn));
  return(cbind(c(xn,xp),c(yn,yp)));
}

# Get data
library(cp4p); data(LFQRatio2); tabl=LFQRatio2;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;cp4p&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: MESS&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;MESS&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: multtest&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: BiocGenerics&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: parallel&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;BiocGenerics&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:parallel&amp;#39;:
## 
##     clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
##     clusterExport, clusterMap, parApply, parCapply, parLapply,
##     parLapplyLB, parRapply, parSapply, parSapplyLB&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:stats&amp;#39;:
## 
##     IQR, mad, sd, var, xtabs&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:base&amp;#39;:
## 
##     anyDuplicated, append, as.data.frame, basename, cbind,
##     colnames, dirname, do.call, duplicated, eval, evalq, Filter,
##     Find, get, grep, grepl, intersect, is.unsorted, lapply, Map,
##     mapply, match, mget, order, paste, pmax, pmax.int, pmin,
##     pmin.int, Position, rank, rbind, Reduce, rownames, sapply,
##     setdiff, sort, table, tapply, union, unique, unsplit, which,
##     which.max, which.min&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: Biobase&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Welcome to Bioconductor
## 
##     Vignettes contain introductory material; view with
##     &amp;#39;browseVignettes()&amp;#39;. To cite Bioconductor, see
##     &amp;#39;citation(&amp;quot;Biobase&amp;quot;)&amp;#39;, and for packages &amp;#39;citation(&amp;quot;pkgname&amp;quot;)&amp;#39;.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: qvalue&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: limma&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;limma&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following object is masked from &amp;#39;package:BiocGenerics&amp;#39;:
## 
##     plotMA&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Get Fold-Change
n1=3; n2=3;
m1=apply(tabl[,1:n1],1,mean); m2=apply(tabl[,(n1+1):(n1+n2)],1,mean);
FC=m1-m2;

# Get standard deviations for t-test
sd1=apply(tabl[,1:n1],1,sd)
sd2=apply(tabl[,(n1+1):(n1+n2)],1,sd)
sdd=sqrt(((sd1^2)+(sd2^2))/(n1+n2))

# Compute the fudge factor with the method of Tusher, V., Tibshirani, R., and Chu, G. (2001)
library(siggenes) &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: splines&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ff0=fudge2(FC,sdd)$s.zero;

# Get degrees of freedom for significance testing
df=(n1+n2)-2;

# Get t.stats and p.values 
t.stat=FC/sdd; p.value=2*(1-pt(abs(t.stat),df=df));

####################################################
# Prepare displays
abs.inf=-3.5; abs.sup=3.5;

#################################
# Figure a
#################################
# Display the volcano plot on the interval [abs.inf,abs.sup]
plot(FC,-log10(p.value),xlim=c(abs.inf,abs.sup),col=4);
# Display the human proteins which should be identified as differentially abundant
points(FC[(tabl$Organism==&amp;quot;human&amp;quot;)],-log10(p.value)[(tabl$Organism==&amp;quot;human&amp;quot;)],col=2,pch=3);

confidence_level=0.975
ff=0.5;
ht &amp;lt;- -log10(1-confidence_level);
points(c(-ff,ff), c(10,10), type=&amp;#39;h&amp;#39;, col=&amp;#39;green&amp;#39;,lwd=2);
lines(c(abs.inf,abs.sup), c(ht,ht), col=&amp;#39;green&amp;#39;,lwd=2);&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-11-27-volcano-plot/index_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#################################
# Figure b
#################################
# Display the volcano plot on the interval [abs.inf,abs.sup]
plot(FC,-log10(p.value),xlim=c(abs.inf,abs.sup),col=4);
# Display the human proteins which should be identified as differentially abundant
points(FC[(tabl$Organism==&amp;quot;human&amp;quot;)],-log10(p.value)[(tabl$Organism==&amp;quot;human&amp;quot;)],col=2,pch=3);

confidence_level=0.975; ff=0.5;
smoothcurve=smooth.threshold(seq(abs.inf,abs.sup,by=0.0001),
                             ta=qt(confidence_level,df=df),s0=ff,df=df);
lines(smoothcurve, col=&amp;#39;green&amp;#39;,lwd=2);&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-11-27-volcano-plot/index_files/figure-html/unnamed-chunk-1-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#################################
# Figure c
#################################
# Display the volcano plot on the interval [abs.inf,abs.sup]
plot(FC,-log10(p.value),xlim=c(abs.inf,abs.sup),col=4);
# Display the human proteins which should be identified as differentially abundant
points(FC[(tabl$Organism==&amp;quot;human&amp;quot;)],-log10(p.value)[(tabl$Organism==&amp;quot;human&amp;quot;)],col=2,pch=3);

confidence_level=0.975; ff=0.5; ht &amp;lt;- -log10(1-confidence_level)
points(c(-ff,ff), c(10,10), type=&amp;#39;h&amp;#39;, col=&amp;#39;black&amp;#39;,lwd=1)
lines(c(abs.inf,abs.sup), c(ht,ht), col=&amp;#39;black&amp;#39;,lwd=1)

confidence_level=0.9; ff=0.6;
smoothcurve=smooth.threshold(seq(abs.inf,abs.sup,by=0.0001),ta=qt(confidence_level,df=df),s0=ff,df=df);
lines(smoothcurve, col=&amp;#39;gray&amp;#39;,lwd=1)

confidence_level=0.75; ff=2;
smoothcurve=smooth.threshold(seq(abs.inf,abs.sup,by=0.0001),ta=qt(confidence_level,df=df),s0=ff,df=df);
lines(smoothcurve, col=&amp;#39;gray&amp;#39;,lwd=1)

confidence_level=0.95; ff=0.6;
smoothcurve=smooth.threshold(seq(abs.inf,abs.sup,by=0.0001),ta=qt(confidence_level,df=df),s0=ff,df=df);
lines(smoothcurve, col=&amp;#39;gray&amp;#39;,lwd=1)

confidence_level=0.97; ff=0.15;
smoothcurve=smooth.threshold(seq(abs.inf,abs.sup,by=0.0001),ta=qt(confidence_level,df=df),s0=ff,df=df);
lines(smoothcurve, col=&amp;#39;green&amp;#39;,lwd=2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-11-27-volcano-plot/index_files/figure-html/unnamed-chunk-1-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#################################
# Figure d
#################################
# Display the volcano plot on the interval [abs.inf,abs.sup]
plot(FC,-log10(p.value),xlim=c(abs.inf,abs.sup),col=4);
# Display the human proteins which should be identified as differentially abundant
points(FC[(tabl$Organism==&amp;quot;human&amp;quot;)],-log10(p.value)[(tabl$Organism==&amp;quot;human&amp;quot;)],col=2,pch=3);&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-11-27-volcano-plot/index_files/figure-html/unnamed-chunk-1-4.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;Uses and misuses of the fudge factor in quantitative discovery proteomics&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn2&#34;&gt;&lt;p&gt;Significance analysis of microarrays applied to the ionizing radiation response&lt;a href=&#34;#fnref2&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>blogdown创建post模板文件夹</title>
      <link>/post/2019-11-20-blogdown-creat-post/</link>
      <pubDate>Wed, 20 Nov 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-11-20-blogdown-creat-post/</guid>
      <description>


&lt;p&gt;&lt;code&gt;blogdown&lt;/code&gt;好像并没有自动创建post模板文件夹的函数,要达到的目的是,自动在&lt;code&gt;content/en/post&lt;/code&gt;中创建文件夹,然后文件夹中有一个&lt;code&gt;index.Rmd&lt;/code&gt;文件.代码如下:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;new_post &amp;lt;- 
  function(
  post.name = &amp;quot;python for genomics class day03&amp;quot;,
  date = Sys.Date(),
  post.title = &amp;quot;Python for genomics class day03&amp;quot;,
  author = &amp;quot;Xiaotao Shen&amp;quot;,
  categories = c(&amp;quot;Python&amp;quot;),
  tags = c(&amp;quot;Blog&amp;quot;, &amp;quot;Chinese&amp;quot;),
  path = &amp;quot;D:/my github/shen/content/en/post&amp;quot;){
  post.name &amp;lt;- stringr::str_replace_all(post.name, &amp;quot; &amp;quot;, &amp;quot;-&amp;quot;)
  file.name &amp;lt;- paste(date, post.name, sep = &amp;quot;-&amp;quot;)
 
  dir.create(file.path(path, file.name))
  
  file &amp;lt;- &amp;quot;---&amp;quot;
  write.table(file, 
              file.path(path, file.name, &amp;quot;index.txt&amp;quot;), 
              row.names = FALSE, col.names = FALSE, 
              quote = FALSE, append = FALSE)
  
  write.table(paste(&amp;quot;title:&amp;quot;, post.title),
    file.path(path, file.name, &amp;quot;index.txt&amp;quot;), 
  row.names = FALSE, col.names = FALSE, 
  quote = FALSE, append = TRUE
  )
  
  write.table(paste(&amp;quot;author:&amp;quot;, author),
              file.path(path, file.name, &amp;quot;index.txt&amp;quot;), 
              row.names = FALSE, col.names = FALSE, 
              quote = FALSE, append = TRUE
  )
  
  write.table(paste(&amp;quot;date:&amp;quot;, date),
              file.path(path, file.name, &amp;quot;index.txt&amp;quot;), 
              row.names = FALSE, col.names = FALSE, 
              quote = FALSE, append = TRUE
  )
  
  write.table(&amp;quot;slug: &amp;#39;&amp;#39;&amp;quot;,
              file.path(path, file.name, &amp;quot;index.txt&amp;quot;), 
              row.names = FALSE, col.names = FALSE, 
              quote = FALSE, append = TRUE
  )
  
  write.table(&amp;quot;categories:&amp;quot;,
              file.path(path, file.name, &amp;quot;index.txt&amp;quot;), 
              row.names = FALSE, col.names = FALSE, 
              quote = FALSE, append = TRUE
  )
  
  for(i in 1:length(categories)){
    write.table(paste(&amp;quot; - &amp;quot;, categories[i]),
                file.path(path, file.name, &amp;quot;index.txt&amp;quot;), 
                row.names = FALSE, col.names = FALSE, 
                quote = FALSE, append = TRUE
    )
  }
    
    write.table(&amp;quot;tags:&amp;quot;,
                file.path(path, file.name, &amp;quot;index.txt&amp;quot;), 
                row.names = FALSE, col.names = FALSE, 
                quote = FALSE, append = TRUE
    )
    
    for(i in 1:length(tags)){
      write.table(paste(&amp;quot; - &amp;quot;, tags[i]),
                  file.path(path, file.name, &amp;quot;index.txt&amp;quot;), 
                  row.names = FALSE, col.names = FALSE, 
                  quote = FALSE, append = TRUE
      )
    }
      
      end &amp;lt;- 
&amp;quot;image:
  caption: &amp;#39;&amp;#39;
  focal_point: &amp;#39;&amp;#39;
output:
  blogdown::html_page:
    toc: true
    number_sections: true
---&amp;quot;
      write.table(
        end,
        file.path(path, file.name, &amp;quot;index.txt&amp;quot;),
        row.names = FALSE,
        col.names = FALSE,
        quote = FALSE,
        append = TRUE
      )
      
 file.rename(from = file.path(path, file.name, &amp;quot;index.txt&amp;quot;),
             to = file.path(path, file.name, &amp;quot;index.Rmd&amp;quot;))
 
  }
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>ggplot2做蝴蝶图</title>
      <link>/post/2019-11-16-butterfly-plot/</link>
      <pubDate>Sat, 16 Nov 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-11-16-butterfly-plot/</guid>
      <description>


&lt;p&gt;使用&lt;code&gt;ggplot2&lt;/code&gt;画蝴蝶图.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tidyverse&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Attaching packages ------------------------------------------------------------------------ tidyverse 1.2.1 --&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## v ggplot2 3.2.1     v purrr   0.3.2
## v tibble  2.1.3     v dplyr   0.8.3
## v tidyr   1.0.0     v stringr 1.4.0
## v readr   1.3.1     v forcats 0.4.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggplot2&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tibble&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tidyr&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;dplyr&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Conflicts --------------------------------------------------------------------------- tidyverse_conflicts() --
## x dplyr::filter() masks stats::filter()
## x dplyr::lag()    masks stats::lag()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##构建示例数据
df &amp;lt;- 
mtcars %&amp;gt;% 
  select(carb, wt, gear) %&amp;gt;% 
  filter(gear == 3 | gear == 4) %&amp;gt;%  ##只选择gear位3或者4的车
  group_by(carb, gear) %&amp;gt;% 
  summarise(mean = mean(wt)) %&amp;gt;% #计算每类车的wt的平均值
  ungroup() %&amp;gt;% 
  mutate(carb = factor(carb, levels = unique(carb)),
         gear = factor(gear, levels = unique(gear)))

##观察数据
df&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 7 x 3
##   carb  gear   mean
##   &amp;lt;fct&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;dbl&amp;gt;
## 1 1     3      3.05
## 2 1     4      2.07
## 3 2     3      3.56
## 4 2     4      2.68
## 5 3     3      3.86
## 6 4     3      4.69
## 7 4     4      3.09&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##这一步用来将某类(用于分组的变量)的值设置为负值
df &amp;lt;- 
df %&amp;gt;% 
  mutate(mean = case_when(
    gear == 4 ~ -1*mean,
    gear == 3 ~  mean
  )
  )


df %&amp;gt;% 
  ggplot(aes(x = carb, mean, fill = gear)) +
  geom_bar(stat = &amp;quot;identity&amp;quot;, width = 0.5) +
  labs(x = &amp;quot;Carb&amp;quot;, y = &amp;quot;WT mean&amp;quot;) +
  scale_y_continuous(breaks = c(-2, 0, 2, 4), labels = c(2, 0 ,2, 4)) +
  theme_bw() +
  coord_flip()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-11-16-butterfly-plot/index_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-twitter&#34;&gt;&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-weixin&#34;&gt;&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-qq&#34;&gt;&lt;/i&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>KEGG数据库总结</title>
      <link>/post/2019-11-14-kegg/</link>
      <pubDate>Thu, 14 Nov 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-11-14-kegg/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#kegg-pathway数据库&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; KEGG Pathway数据库&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#背景&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1&lt;/span&gt; 背景&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#kgml的overview&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.2&lt;/span&gt; &lt;code&gt;KGML&lt;/code&gt;的overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#如何获得某个pathwaykgml文件&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.3&lt;/span&gt; 如何获得某个pathway&lt;code&gt;KGML&lt;/code&gt;文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#pathway&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.4&lt;/span&gt; Pathway&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#pathway-element&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.4.1&lt;/span&gt; Pathway element&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#entry条目&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.5&lt;/span&gt; Entry(条目)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#entry-element&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.5.1&lt;/span&gt; Entry element&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#relation&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.6&lt;/span&gt; Relation&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#relation元素&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.6.1&lt;/span&gt; relation元素&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#reaction反应&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.7&lt;/span&gt; Reaction反应&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;kegg-pathway数据库&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; KEGG Pathway数据库&lt;/h1&gt;
&lt;p&gt;KEGG pathway的数据是使用&lt;code&gt;KGML&lt;/code&gt;(KEGG Markup Language)格式存储下来的.详细的信息可以阅读官方文档.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.kegg.jp/kegg/xml/docs/&#34; class=&#34;uri&#34;&gt;https://www.kegg.jp/kegg/xml/docs/&lt;/a&gt;&lt;/p&gt;
&lt;div id=&#34;背景&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1&lt;/span&gt; 背景&lt;/h2&gt;
&lt;p&gt;KEGG pathway有两个类型.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;reference pathways&lt;/strong&gt;: 手动画的.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;organism-specific pathways&lt;/strong&gt;: 使用计算方法自动从reference pathway得到的.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在&lt;code&gt;KGML&lt;/code&gt;文件中,&lt;code&gt;entry&lt;/code&gt;指的是node,而&lt;code&gt;relation&lt;/code&gt;和&lt;code&gt;reaction&lt;/code&gt;指的是整个网络的边.在KEGG pathway中,矩形表示基因(也可以认为是gene的产物蛋白质),而circle代表的是metabolite.&lt;/p&gt;
&lt;p&gt;如果网络中只有&lt;code&gt;entry&lt;/code&gt;和&lt;code&gt;relation&lt;/code&gt;,则该网络称为&lt;code&gt;protein network&lt;/code&gt;.如果只有&lt;code&gt;entry&lt;/code&gt;和&lt;code&gt;reaction&lt;/code&gt;,则称为&lt;code&gt;chemical network&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;所以一般来说,可以用两种方式来表示metabolic pathway:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;metabolic pathways viewed as both protein networks and chemical networks and&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;regulatory pathways viewed as protein networks only.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;kgml的overview&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2&lt;/span&gt; &lt;code&gt;KGML&lt;/code&gt;的overview&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;overview.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;这幅图是整个&lt;code&gt;KGML&lt;/code&gt;的总览.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;如何获得某个pathwaykgml文件&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.3&lt;/span&gt; 如何获得某个pathway&lt;code&gt;KGML&lt;/code&gt;文件&lt;/h2&gt;
&lt;p&gt;使用R包&lt;code&gt;KEGGlincs&lt;/code&gt;可以下载pathway的&lt;code&gt;KGML&lt;/code&gt;文件.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(KEGGREST)
library(KEGGlincs)
###
#获得所有has的pathway ID
path_id &amp;lt;- KEGGREST::keggList(database = &amp;quot;pathway&amp;quot;, 
                              organism = &amp;quot;hsa&amp;quot;)
head(path_id)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                                                     path:hsa00010 
##             &amp;quot;Glycolysis / Gluconeogenesis - Homo sapiens (human)&amp;quot; 
##                                                     path:hsa00020 
##                &amp;quot;Citrate cycle (TCA cycle) - Homo sapiens (human)&amp;quot; 
##                                                     path:hsa00030 
##                &amp;quot;Pentose phosphate pathway - Homo sapiens (human)&amp;quot; 
##                                                     path:hsa00040 
## &amp;quot;Pentose and glucuronate interconversions - Homo sapiens (human)&amp;quot; 
##                                                     path:hsa00051 
##          &amp;quot;Fructose and mannose metabolism - Homo sapiens (human)&amp;quot; 
##                                                     path:hsa00052 
##                     &amp;quot;Galactose metabolism - Homo sapiens (human)&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;path_id &amp;lt;- 
  path_id %&amp;gt;% 
  names() %&amp;gt;% 
  unique() %&amp;gt;% 
  stringr::str_replace(&amp;quot;path:&amp;quot;, &amp;quot;&amp;quot;)
head(path_id)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;hsa00010&amp;quot; &amp;quot;hsa00020&amp;quot; &amp;quot;hsa00030&amp;quot; &amp;quot;hsa00040&amp;quot; &amp;quot;hsa00051&amp;quot; &amp;quot;hsa00052&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##下载kgml文件并进行解析
temp_kgml &amp;lt;- 
  KEGGlincs::get_KGML(pathwayid = path_id[1])
class(temp_kgml)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;KEGGPathway&amp;quot;
## attr(,&amp;quot;package&amp;quot;)
## [1] &amp;quot;KEGGgraph&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;temp_kgml&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## KEGG Pathway
## [ Title ]: Glycolysis / Gluconeogenesis
## [ Name ]: path:hsa00010
## [ Organism ]: hsa
## [ Number ] :00010
## [ Image ] :http://www.kegg.jp/kegg/pathway/hsa/hsa00010.png
## [ Link ] :http://www.kegg.jp/kegg-bin/show_pathway?hsa00010
## ------------------------------------------------------------
## Statistics:
##  100 node(s)
##  89 edge(s)
##  35 reaction(s)
## ------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;get_KGML()&lt;/code&gt;函数其实分别使用了&lt;code&gt;KEGGREST&lt;/code&gt;包中的&lt;code&gt;keggGet()&lt;/code&gt;函数来下载的,然后使用&lt;code&gt;KEGGgraph&lt;/code&gt;包中的&lt;code&gt;paraseKGML()&lt;/code&gt;函数来解析.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;temp_kgml2 &amp;lt;-
  KEGGREST::keggGet(dbentries = path_id[1], option = &amp;quot;kgml&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## No encoding supplied: defaulting to UTF-8.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;class(temp_kgml2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;character&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;temp_kgml2 &amp;lt;- 
  KEGGgraph::parseKGML(file = temp_kgml2)
temp_kgml2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## KEGG Pathway
## [ Title ]: Glycolysis / Gluconeogenesis
## [ Name ]: path:hsa00010
## [ Organism ]: hsa
## [ Number ] :00010
## [ Image ] :http://www.kegg.jp/kegg/pathway/hsa/hsa00010.png
## [ Link ] :http://www.kegg.jp/kegg-bin/show_pathway?hsa00010
## ------------------------------------------------------------
## Statistics:
##  100 node(s)
##  89 edge(s)
##  35 reaction(s)
## ------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;pathway&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.4&lt;/span&gt; Pathway&lt;/h2&gt;
&lt;div id=&#34;pathway-element&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.4.1&lt;/span&gt; Pathway element&lt;/h3&gt;
&lt;p&gt;一共有六个属性.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Attribute.name
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Explanation
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
name
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Pathway ID
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
org
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
ko/ec/org ID
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
number
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
pathway ID numebr
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
title
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
pathway title
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
image
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
pathway figure link
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
link
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
pathway link
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;我们可以下载pathway的图片.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;image_link &amp;lt;- slot(slot(temp_kgml, &amp;quot;pathwayInfo&amp;quot;), &amp;quot;image&amp;quot;)
image_link&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;http://www.kegg.jp/kegg/pathway/hsa/hsa00010.png&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;download.file(url = image_link, 
              destfile = basename(image_link), 
              mode = &amp;quot;wb&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;hsa00010.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;entry条目&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.5&lt;/span&gt; Entry(条目)&lt;/h2&gt;
&lt;div id=&#34;entry-element&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.5.1&lt;/span&gt; Entry element&lt;/h3&gt;
&lt;p&gt;包括了网络中的node的属性.属性包括以下内容.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Attribute.name
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Explanation
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
id
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
ID of the entry
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
name
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
KEGG ID of the entry
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
type
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Type of the entry
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
link
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Link of the entry
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
reaction
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
The KEGG ID of corresponding reaction
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#整体信息
temp_kgml@pathwayInfo&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [ Title ]: Glycolysis / Gluconeogenesis
## [ Name ]: path:hsa00010
## [ Organism ]: hsa
## [ Number ] :00010
## [ Image ] :http://www.kegg.jp/kegg/pathway/hsa/hsa00010.png
## [ Link ] :http://www.kegg.jp/kegg-bin/show_pathway?hsa00010&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#分别的属性
temp_kgml@pathwayInfo@name&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;path:hsa00010&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;temp_kgml@pathwayInfo@org&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;hsa&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;temp_kgml@pathwayInfo@number&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;00010&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;temp_kgml@pathwayInfo@title&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Glycolysis / Gluconeogenesis&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;temp_kgml@pathwayInfo@image&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;http://www.kegg.jp/kegg/pathway/hsa/hsa00010.png&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;temp_kgml@pathwayInfo@link&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;http://www.kegg.jp/kegg-bin/show_pathway?hsa00010&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;图片下载链接:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.kegg.jp/kegg/pathway/hsa/hsa00010.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;pathway详细信息链接:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.kegg.jp/kegg-bin/show_pathway?hsa00010&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我们下面看看pathwa中node的信息.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;temp_kgml&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## KEGG Pathway
## [ Title ]: Glycolysis / Gluconeogenesis
## [ Name ]: path:hsa00010
## [ Organism ]: hsa
## [ Number ] :00010
## [ Image ] :http://www.kegg.jp/kegg/pathway/hsa/hsa00010.png
## [ Link ] :http://www.kegg.jp/kegg-bin/show_pathway?hsa00010
## ------------------------------------------------------------
## Statistics:
##  100 node(s)
##  89 edge(s)
##  35 reaction(s)
## ------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以看到这个pathway含有node,edge还有reaction.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# node
temp_kgml@nodes$`18`&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## KEGG Node (Entry &amp;#39;18&amp;#39;):
## ------------------------------------------------------------
## [ displayName ]: ALDOA, ALDA, GSD12, HEL-S-87p...
## [ Name ]: hsa:226,hsa:229,hsa:230
## [ Type ]: gene
## [ Link ]: http://www.kegg.jp/dbget-bin/www_bget?hsa:226+hsa:229+hsa:230
## ------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#edge
temp_kgml@edges[[1]]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   KEGG Edge (Type: ECrel):
## ------------------------------------------------------------
## [ Entry 1 ID ]: 73
## [ Entry 2 ID ]: 75
## [ Subtype ]: 
##   [ Subtype name ]: compound
##   [ Subtype value ]: 90
## ------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#reaction
temp_kgml@reactions[[1]]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## KEGG Reaction(rn:R00710)
## ------------------------------------------------------------
## [ Name ]: rn:R00710
## [ Type ]: reversible
## [ Substrate Name ]: cpd:C00084
## [ Product Name ]: cpd:C00033&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;type属性的详细解释&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.5.1.1&lt;/span&gt; Type属性的详细解释&lt;/h4&gt;
&lt;p&gt;在pathway中,如果一个pathway链接到另外一个pathway,那么pathway也是会被作为一个node展示出来.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Attribute.name
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Explanation
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
ortholog
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
the node is a KO (ortholog group)
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
enzyme
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
the node is an enzyme
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
reaction
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
the node is a reaction
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
gene
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
the node is a gene product (mostly a protein)
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
group
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
the node is a complex of gene products (mostly a protein complex)
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
compound
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
the node is a chemical compound (including a glycan)
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
map
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
the node is a linked pathway map
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
brite
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
the node is a linked brite hierarchy
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
other
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
the node is an unclassified type
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;relation&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.6&lt;/span&gt; Relation&lt;/h2&gt;
&lt;div id=&#34;relation元素&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.6.1&lt;/span&gt; relation元素&lt;/h3&gt;
&lt;p&gt;这里面的relation不包括我们所知道的酶催化代谢物的联系.只包括两个proteins(gene products)或者两个KOs(ortholog groups)或者protein和compound&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Attribute.name
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Explanation
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
entry1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
the first (from) entry that defines this relation
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
entry2
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
the second (to) entry that defines this relation
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
type
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
the type of this relation
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div id=&#34;type属性&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.6.1.1&lt;/span&gt; Type属性&lt;/h4&gt;
&lt;p&gt;relation的type一共有5个,分别是&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ECrel&lt;/strong&gt;: enzyme-enzyme relation, indicating two enzymes catalyzing successive reaction steps.代表的是两个酶之间的联系,比如enzyme1-metabolite1-enzyme2-metabolite2.那么enzyme1-enzyme2之间的关系realtion就是&lt;code&gt;ECrel&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;PPrel&lt;/strong&gt;: protein-protein interaction, such as binding and modification.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;GErel&lt;/strong&gt;: gene expression interaction, indicating relation of transcription factor and target gene product.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;PCrel&lt;/strong&gt;: protein-compound interaction,注意这个关系不是enzyme催化的关系.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;maplink&lt;/strong&gt;: 跟另外一个pathway的联系.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;subtype-element&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.6.1.2&lt;/span&gt; subtype element&lt;/h4&gt;
&lt;p&gt;每个relatio还有一个subtype属性.这个属性用来对relation做进一步的说明.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;name&lt;/strong&gt;: interation/relation的信息.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;包含以下几种信息.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;figure2.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;其中&lt;code&gt;compound&lt;/code&gt;是指这个relation其实是两个enzyme.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;temp_kgml@edges[[1]]@entry1ID&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;73&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;temp_kgml@edges[[1]]@entry2ID&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;75&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;temp_kgml@edges[[1]]@type&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;ECrel&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;temp_kgml@edges[[1]]@subtype&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $subtype
##   [ Subtype name ]: compound
##   [ Subtype value ]: 90&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这个relation就是两个enzyme连接起来的.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;reaction反应&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.7&lt;/span&gt; Reaction反应&lt;/h2&gt;
&lt;p&gt;reaction和relation很类似.不一样的是type属性.&lt;/p&gt;
&lt;p&gt;type属性包括&lt;code&gt;reversible&lt;/code&gt;和&lt;code&gt;irreversible&lt;/code&gt;.分别表示可逆反应和不可逆反映.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;temp_kgml@reactions[[1]]@name&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;rn:R00710&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;temp_kgml@reactions[[1]]@type&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;reversible&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;temp_kgml@reactions[[1]]@substrateName&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;cpd:C00084&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;temp_kgml@reactions[[1]]@productName&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;cpd:C00033&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R读取和输出数据</title>
      <link>/post/2019-11-12-r-import-export-data/</link>
      <pubDate>Mon, 11 Nov 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-11-12-r-import-export-data/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#csv文件&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; &lt;code&gt;CSV&lt;/code&gt;文件&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#读取&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1&lt;/span&gt; 读取&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#readr包&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1.1&lt;/span&gt; &lt;code&gt;readr&lt;/code&gt;包&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;csv文件&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; &lt;code&gt;CSV&lt;/code&gt;文件&lt;/h1&gt;
&lt;div id=&#34;读取&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1&lt;/span&gt; 读取&lt;/h2&gt;
&lt;div id=&#34;readr包&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.1&lt;/span&gt; &lt;code&gt;readr&lt;/code&gt;包&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;readr&lt;/code&gt;包中有几个函数可以读取&lt;code&gt;csv&lt;/code&gt;文件.其中第一个就是&lt;code&gt;read_csv()&lt;/code&gt;函数.另外还有一个与其非常类似的&lt;code&gt;read_csv2()&lt;/code&gt;函数,唯一区别在于&lt;code&gt;read_csv()&lt;/code&gt;读取的&lt;code&gt;csv&lt;/code&gt;文件分隔符是逗号(,),而&lt;code&gt;read_csv2()&lt;/code&gt;读取的分隔符是分号(;),这在某些欧洲国家会比较常见.需要注意一下.&lt;/p&gt;
&lt;p&gt;第一个参数&lt;code&gt;file&lt;/code&gt;用来指定要读取的文件的路径和名称.&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;readr&lt;/code&gt;自带的示例数据.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(readr)
test &amp;lt;- readr_example(path = &amp;quot;mtcars.csv&amp;quot;)
test&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;D:/software/R/R-3.6.0/library/readr/extdata/mtcars.csv&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;test &amp;lt;- read_csv(file = test)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Parsed with column specification:
## cols(
##   mpg = col_double(),
##   cyl = col_double(),
##   disp = col_double(),
##   hp = col_double(),
##   drat = col_double(),
##   wt = col_double(),
##   qsec = col_double(),
##   vs = col_double(),
##   am = col_double(),
##   gear = col_double(),
##   carb = col_double()
## )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以看到读取数据的时候,显示出了每一列类型,他就按照这个类型对每一列进行解析.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;readr()&lt;/code&gt;默认读取前1000行,并对其类型进行猜测,然后按照猜测的类型对所有数据进行读取解析.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>使用rayshader包将ggplot2转换为3D图像</title>
      <link>/post/2019-11-11-ggpot2-3d/</link>
      <pubDate>Mon, 11 Nov 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-11-11-ggpot2-3d/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#安装&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; 安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#使用&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; 使用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code&gt;rayshader&lt;/code&gt;包可以将&lt;code&gt;ggplot2&lt;/code&gt;图片转换为3D.&lt;/p&gt;
&lt;p&gt;参考原作者帖子:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.tylermw.com/3d-ggplots-with-rayshader/&#34; class=&#34;uri&#34;&gt;https://www.tylermw.com/3d-ggplots-with-rayshader/&lt;/a&gt;&lt;/p&gt;
&lt;div id=&#34;安装&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; 安装&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;devtools::install_github(&amp;quot;tylermorganwall/rayshader&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;使用&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; 使用&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(rayshader)
library(ggplot2)
library(tidyverse)

gg &amp;lt;- ggplot(diamonds, aes(x, depth)) +
  stat_density_2d(aes(fill = stat(nlevel)), 
                  geom = &amp;quot;polygon&amp;quot;,
                  n = 100,bins = 10,contour = TRUE) +
  facet_wrap(clarity~.) +
  scale_fill_viridis_c(option = &amp;quot;A&amp;quot;)
rayshader::plot_gg(gg, multicore = TRUE, width = 5, height = 5,scale = 250)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;blogdown::shortcode(&amp;quot;video&amp;quot;, src = &amp;quot;./test.mp4&amp;quot;)&lt;/code&gt;&lt;/pre&gt;












  


&lt;video autoplay loop &gt;
  &lt;source src=&#34;./test.mp4&#34; type=&#34;video/mp4&#34;&gt;
&lt;/video&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;blogdown::shortcode(&amp;quot;youtube&amp;quot;, &amp;quot;p4liifrbK8w&amp;quot;)&lt;/code&gt;&lt;/pre&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/p4liifrbK8w&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>tibble cookbook</title>
      <link>/post/2019-10-09-tibble-cookbook/</link>
      <pubDate>Sat, 09 Nov 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-10-09-tibble-cookbook/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#创建一个tibble&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; 创建一个tibble&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#tibble函数&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1&lt;/span&gt; &lt;code&gt;tibble()&lt;/code&gt;函数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#as_tibble函数&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.2&lt;/span&gt; &lt;code&gt;as_tibble()&lt;/code&gt;函数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#tribble函数&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.3&lt;/span&gt; &lt;code&gt;tribble()&lt;/code&gt;函数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#enframe函数&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.4&lt;/span&gt; &lt;code&gt;enframe()&lt;/code&gt;函数&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#tibble显示控制&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; tibble显示控制&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#使用print函数&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.1&lt;/span&gt; 使用&lt;code&gt;print()&lt;/code&gt;函数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#修改options默认参数&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.2&lt;/span&gt; 修改&lt;code&gt;options()&lt;/code&gt;默认参数&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#tibble切片操作&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3&lt;/span&gt; tibble切片操作&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#tibble添加新的列或者行&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4&lt;/span&gt; tibble添加新的列或者行&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#添加新的行&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.1&lt;/span&gt; 添加新的行&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#添加新的列&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.2&lt;/span&gt; 添加新的列&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#tibble对列名和行名的操作&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;5&lt;/span&gt; tibble对列名和行名的操作&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#判断是否有行名&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;5.1&lt;/span&gt; 判断是否有行名&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#行名和某一列互相转换&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;5.2&lt;/span&gt; 行名和某一列互相转换&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;创建一个tibble&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; 创建一个tibble&lt;/h1&gt;
&lt;div id=&#34;tibble函数&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1&lt;/span&gt; &lt;code&gt;tibble()&lt;/code&gt;函数&lt;/h2&gt;
&lt;p&gt;使用&lt;code&gt;tibble()&lt;/code&gt;可以创建新的&lt;code&gt;tibble&lt;/code&gt;对象,但是一般用来创建比较简单的tibble。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
a &amp;lt;- 1
b &amp;lt;- 2:6
tibble(a, b)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 5 x 2
##       a     b
##   &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;
## 1     1     2
## 2     1     3
## 3     1     4
## 4     1     5
## 5     1     6&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 使用下列方法修改列名
tibble(column1 = a, column2 = b)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 5 x 2
##   column1 column2
##     &amp;lt;dbl&amp;gt;   &amp;lt;int&amp;gt;
## 1       1       2
## 2       1       3
## 3       1       4
## 4       1       5
## 5       1       6&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;需要注意的是,如果输入的vector长度不一致,只有其中某一个长度为1,才会循环补齐,否则报错.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tibble()&lt;/code&gt;函数有一个参数可以注意一下:&lt;code&gt;.name_repair&lt;/code&gt;,用来控制对那些不如何规矩的列名如何处理.常用的一共有4个选项:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;minimal&lt;/strong&gt; 对列名不做任何处理,既不做列名检查,也不做处理.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;unique&lt;/strong&gt; 保证列名都是唯一的并且不能为空.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#如果列名是重复的,会在列名后加入不同的序号.
try(
 tibble(a = 1:3, a = 1:3, 1:3, .name_repair = &amp;quot;unique&amp;quot;) 
)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## New names:
## * a -&amp;gt; a...1
## * a -&amp;gt; a...2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 3
##   a...1 a...2 `1:3`
##   &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;
## 1     1     1     1
## 2     2     2     2
## 3     3     3     3&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;check_unique&lt;/strong&gt; 这是默认的参数设置,不对列名做修改,只做列名检查.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#如果列名是重复的,则会报错
try(
 tibble(a = 1:3, a = 1:3) 
)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Error : Column name `a` must not be duplicated.
## Use .name_repair to specify repair.&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;universal&lt;/strong&gt; 保证列名都是唯一的并且符合R语言语法.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果有相同的列名,会在列名后加入不同的序号.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#如果列名是重复的,则会报错
try(
 tibble(a = 1:3, a = 1:3, .name_repair = &amp;quot;universal&amp;quot;) 
)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## New names:
## * a -&amp;gt; a...1
## * a -&amp;gt; a...2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 2
##   a...1 a...2
##   &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;
## 1     1     1
## 2     2     2
## 3     3     3&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;as_tibble函数&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2&lt;/span&gt; &lt;code&gt;as_tibble()&lt;/code&gt;函数&lt;/h2&gt;
&lt;p&gt;使用&lt;code&gt;as_tibble()&lt;/code&gt;函数可以将已有的matrix和data.frame转变为tibble对象.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;test1 &amp;lt;- 
  matrix(1:6, ncol = 2)
tibble::as_tibble(test1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: `as_tibble.matrix()` requires a matrix with column names or a `.name_repair` argument. Using compatibility `.name_repair`.
## This warning is displayed once per session.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 2
##      V1    V2
##   &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;
## 1     1     4
## 2     2     5
## 3     3     6&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;test2 &amp;lt;- 
  data.frame(a = 1:3, b = 2:4, stringsAsFactors = FALSE)
tibble::as_tibble(test2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 2
##       a     b
##   &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;
## 1     1     2
## 2     2     3
## 3     3     4&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;as_tibble()&lt;/code&gt;函数的参数与&lt;code&gt;tibble()&lt;/code&gt;大概相同,另外一个需要注意的的参数是:&lt;strong&gt;rownames&lt;/strong&gt;,用来控制如何处理原有的行名.如果设置为NULL,则去除掉行名(默认),如果设置为NA,则保留原来的列名.设置为一个string vector,则将其设置为新的列名.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;tribble函数&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.3&lt;/span&gt; &lt;code&gt;tribble()&lt;/code&gt;函数&lt;/h2&gt;
&lt;p&gt;使用&lt;code&gt;tribble()&lt;/code&gt;函数可以用另外一种方法来创建tibble对象.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tibble::tribble(
  ~colA, ~colB,
  ## two columns
  &amp;quot;a&amp;quot;,   1,
  &amp;quot;b&amp;quot;,   2,
  &amp;quot;c&amp;quot;,   3
)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 2
##   colA   colB
##   &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;
## 1 a         1
## 2 b         2
## 3 c         3&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;需要注意的是,tibble和data.frame一样,他们中的元素也可以是list.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tribble(
  ~x,  ~y,
  &amp;quot;a&amp;quot;, 1:3,
  &amp;quot;b&amp;quot;, 4:6
)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 2 x 2
##   x     y        
##   &amp;lt;chr&amp;gt; &amp;lt;list&amp;gt;   
## 1 a     &amp;lt;int [3]&amp;gt;
## 2 b     &amp;lt;int [3]&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;enframe函数&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.4&lt;/span&gt; &lt;code&gt;enframe()&lt;/code&gt;函数&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;enframe()&lt;/code&gt;可以将vector转换为tibble,另外有一个相反的函数,&lt;code&gt;deframe()&lt;/code&gt;函数,将tibble/data.frame转变为vector.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;enframe(x = 1:3)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 2
##    name value
##   &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;
## 1     1     1
## 2     2     2
## 3     3     3&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;enframe(c(a = 5, b = 7))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 2 x 2
##   name  value
##   &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;
## 1 a         5
## 2 b         7&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;enframe(list(one = 1, two = 2:3, three = 4:6))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 2
##   name  value    
##   &amp;lt;chr&amp;gt; &amp;lt;list&amp;gt;   
## 1 one   &amp;lt;dbl [1]&amp;gt;
## 2 two   &amp;lt;int [2]&amp;gt;
## 3 three &amp;lt;int [3]&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;enframe()&lt;/code&gt;的第一个参数是&lt;code&gt;x&lt;/code&gt;,必须是一个vector或者list,他会将他的每一个元素的名字组成第一列,而其内容作为第二列转变为一个tibble.也就是说其只能用来创建两列的tibble.两列的列名默认为name和value如果想要修改,可以更改两个参数(name和value).&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;deframe()&lt;/code&gt;函数将一个一列或者两列的tibble转变为vector或者list.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;deframe(enframe(1:3))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 1 2 3 
## 1 2 3&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;tibble显示控制&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; tibble显示控制&lt;/h1&gt;
&lt;p&gt;tibble默认情况下只输出前十行内容,列自动适应屏幕宽度,如果想要输出比默认更多的数据,有以下几种方法.&lt;/p&gt;
&lt;div id=&#34;使用print函数&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.1&lt;/span&gt; 使用&lt;code&gt;print()&lt;/code&gt;函数&lt;/h2&gt;
&lt;p&gt;使用&lt;code&gt;print()&lt;/code&gt;函数,可以控制行数和列数.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
# 默认显示
nycflights13::flights&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 336,776 x 19
##     year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time
##    &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;
##  1  2013     1     1      517            515         2      830            819
##  2  2013     1     1      533            529         4      850            830
##  3  2013     1     1      542            540         2      923            850
##  4  2013     1     1      544            545        -1     1004           1022
##  5  2013     1     1      554            600        -6      812            837
##  6  2013     1     1      554            558        -4      740            728
##  7  2013     1     1      555            600        -5      913            854
##  8  2013     1     1      557            600        -3      709            723
##  9  2013     1     1      557            600        -3      838            846
## 10  2013     1     1      558            600        -2      753            745
## # … with 336,766 more rows, and 11 more variables: arr_delay &amp;lt;dbl&amp;gt;,
## #   carrier &amp;lt;chr&amp;gt;, flight &amp;lt;int&amp;gt;, tailnum &amp;lt;chr&amp;gt;, origin &amp;lt;chr&amp;gt;, dest &amp;lt;chr&amp;gt;,
## #   air_time &amp;lt;dbl&amp;gt;, distance &amp;lt;dbl&amp;gt;, hour &amp;lt;dbl&amp;gt;, minute &amp;lt;dbl&amp;gt;, time_hour &amp;lt;dttm&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 输出15行及所有列数
nycflights13::flights %&amp;gt;% 
  print(n = 15, width = Inf)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 336,776 x 19
##     year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time
##    &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;
##  1  2013     1     1      517            515         2      830            819
##  2  2013     1     1      533            529         4      850            830
##  3  2013     1     1      542            540         2      923            850
##  4  2013     1     1      544            545        -1     1004           1022
##  5  2013     1     1      554            600        -6      812            837
##  6  2013     1     1      554            558        -4      740            728
##  7  2013     1     1      555            600        -5      913            854
##  8  2013     1     1      557            600        -3      709            723
##  9  2013     1     1      557            600        -3      838            846
## 10  2013     1     1      558            600        -2      753            745
## 11  2013     1     1      558            600        -2      849            851
## 12  2013     1     1      558            600        -2      853            856
## 13  2013     1     1      558            600        -2      924            917
## 14  2013     1     1      558            600        -2      923            937
## 15  2013     1     1      559            600        -1      941            910
##    arr_delay carrier flight tailnum origin dest  air_time distance  hour minute
##        &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;    &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;    &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;
##  1        11 UA        1545 N14228  EWR    IAH        227     1400     5     15
##  2        20 UA        1714 N24211  LGA    IAH        227     1416     5     29
##  3        33 AA        1141 N619AA  JFK    MIA        160     1089     5     40
##  4       -18 B6         725 N804JB  JFK    BQN        183     1576     5     45
##  5       -25 DL         461 N668DN  LGA    ATL        116      762     6      0
##  6        12 UA        1696 N39463  EWR    ORD        150      719     5     58
##  7        19 B6         507 N516JB  EWR    FLL        158     1065     6      0
##  8       -14 EV        5708 N829AS  LGA    IAD         53      229     6      0
##  9        -8 B6          79 N593JB  JFK    MCO        140      944     6      0
## 10         8 AA         301 N3ALAA  LGA    ORD        138      733     6      0
## 11        -2 B6          49 N793JB  JFK    PBI        149     1028     6      0
## 12        -3 B6          71 N657JB  JFK    TPA        158     1005     6      0
## 13         7 UA         194 N29129  JFK    LAX        345     2475     6      0
## 14       -14 UA        1124 N53441  EWR    SFO        361     2565     6      0
## 15        31 AA         707 N3DUAA  LGA    DFW        257     1389     6      0
##    time_hour          
##    &amp;lt;dttm&amp;gt;             
##  1 2013-01-01 05:00:00
##  2 2013-01-01 05:00:00
##  3 2013-01-01 05:00:00
##  4 2013-01-01 05:00:00
##  5 2013-01-01 06:00:00
##  6 2013-01-01 05:00:00
##  7 2013-01-01 06:00:00
##  8 2013-01-01 06:00:00
##  9 2013-01-01 06:00:00
## 10 2013-01-01 06:00:00
## 11 2013-01-01 06:00:00
## 12 2013-01-01 06:00:00
## 13 2013-01-01 06:00:00
## 14 2013-01-01 06:00:00
## 15 2013-01-01 06:00:00
## # … with 3.368e+05 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;修改options默认参数&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.2&lt;/span&gt; 修改&lt;code&gt;options()&lt;/code&gt;默认参数&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;options(tibble.print_max = n, tibble.pring_min = m)&lt;/code&gt;:如果多于m行,则只打印出n
行.&lt;code&gt;options(tibble.print_min = Inf)&lt;/code&gt;表示总是打印所有行.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;options(tibble.width = Inf)&lt;/code&gt;表示总是打印所有列,不考虑屏幕的宽度.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;options()&lt;/code&gt;中所有和&lt;code&gt;tibble&lt;/code&gt;相关的参数:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;tibble.print_max&lt;/code&gt;:Row number threshold: Maximum number of rows printed. Set to Inf to always print all rows. Default: 20.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;tibble.print_min&lt;/code&gt;: 如果设置为m,意思即为如果行数大于m,则只打印出前n行.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;tibble.width&lt;/code&gt;: 打印列的宽度.默认为NULL,也就是适应屏幕宽度.设置为&lt;code&gt;Inf&lt;/code&gt;,则打印出全部列.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;tibble.max_extra_cols&lt;/code&gt;: Number of extra columns printed in reduced form. Default: 100.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;pillar.bold&lt;/code&gt;: pillar是柱子的意思.如果设置为TRUE,则列名为粗体,默认为FALSE,因为在terminal中很多字体对粗体支持不够.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;pillar.subtle&lt;/code&gt;: 是否打印出其他详细的信息,比如总的行和列数.默认为TRUE.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;pillar.subtle_num&lt;/code&gt;: Use subtle style for insignificant digits? Default: FALSE, is also affected by the pillar.subtle option.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;pillar.neg&lt;/code&gt;: 是否高亮负值.默认为TRUE.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;pillar.sigfig&lt;/code&gt;: 高亮那些数字,比如如果设置为3,则会高亮数字3.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;pillar.min_title_chars&lt;/code&gt;: 列名打印时最小的字符数,默认为15.意味着如果某些列名大于15,则会被截断.设置为&lt;code&gt;Inf&lt;/code&gt;,打印出完整的列名.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;tibble切片操作&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;3&lt;/span&gt; tibble切片操作&lt;/h1&gt;
&lt;p&gt;如何取出一个tibble的一列或者几列.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;test &amp;lt;- as_tibble(mtcars)
test[,1, drop = TRUE]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] 21.0 21.0 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 17.8 16.4 17.3 15.2 10.4
## [16] 10.4 14.7 32.4 30.4 33.9 21.5 15.5 15.2 13.3 19.2 27.3 26.0 30.4 15.8 19.7
## [31] 15.0 21.4&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mtcars[,1]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] 21.0 21.0 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 17.8 16.4 17.3 15.2 10.4
## [16] 10.4 14.7 32.4 30.4 33.9 21.5 15.5 15.2 13.3 19.2 27.3 26.0 30.4 15.8 19.7
## [31] 15.0 21.4&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;tibble如果使用&lt;code&gt;[&lt;/code&gt;函数来进行选择某一列,则默认出来的还是一个tibble,当然可以使用&lt;code&gt;drop&lt;/code&gt;参数来设置为TRUE,让其转变成一个vector.而对于data.frame,则取出一列,默认为vector.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;test$mpg&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] 21.0 21.0 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 17.8 16.4 17.3 15.2 10.4
## [16] 10.4 14.7 32.4 30.4 33.9 21.5 15.5 15.2 13.3 19.2 27.3 26.0 30.4 15.8 19.7
## [31] 15.0 21.4&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;test[[&amp;quot;mpg&amp;quot;]]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] 21.0 21.0 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 17.8 16.4 17.3 15.2 10.4
## [16] 10.4 14.7 32.4 30.4 33.9 21.5 15.5 15.2 13.3 19.2 27.3 26.0 30.4 15.8 19.7
## [31] 15.0 21.4&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;当然还可以使用&lt;code&gt;$&lt;/code&gt;和&lt;code&gt;[[&lt;/code&gt;函数,这两个函数取出来的都是vector.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
test %&amp;gt;% 
  pull(mpg)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] 21.0 21.0 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 17.8 16.4 17.3 15.2 10.4
## [16] 10.4 14.7 32.4 30.4 33.9 21.5 15.5 15.2 13.3 19.2 27.3 26.0 30.4 15.8 19.7
## [31] 15.0 21.4&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;当然,还可以使用&lt;code&gt;dplyr&lt;/code&gt;中的&lt;code&gt;pull()&lt;/code&gt;函数,取出来的也是vector.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;tibble添加新的列或者行&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;4&lt;/span&gt; tibble添加新的列或者行&lt;/h1&gt;
&lt;div id=&#34;添加新的行&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.1&lt;/span&gt; 添加新的行&lt;/h2&gt;
&lt;p&gt;使用&lt;code&gt;add_row()&lt;/code&gt;函数可以给已有的tibble对象添加新的行.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df &amp;lt;- tibble(x = 1:3, y = 3:1)
add_row(df, x = 4, y = 0)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 4 x 2
##       x     y
##   &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1     1     3
## 2     2     2
## 3     3     1
## 4     4     0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以通过设置&lt;code&gt;.before&lt;/code&gt;和&lt;code&gt;.after&lt;/code&gt;参数来指定插入的位置.默认都是NULL,插入到最后的位置.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;add_row(df, x = 4, y = 0, .before = 1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 4 x 2
##       x     y
##   &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1     4     0
## 2     1     3
## 3     2     2
## 4     3     1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;add_row(df, x = 4, y = 0, .before = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 4 x 2
##       x     y
##   &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1     1     3
## 2     4     0
## 3     2     2
## 4     3     1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;add_row(df, x = 4, y = 0, .before = 3)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 4 x 2
##       x     y
##   &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1     1     3
## 2     2     2
## 3     4     0
## 4     3     1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;.before&lt;/code&gt;设置为n,则是指从原来的第n行的前一行开始添加.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;add_row(df, x = 4, y = 0, .after = 1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 4 x 2
##       x     y
##   &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1     1     3
## 2     4     0
## 3     2     2
## 4     3     1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;add_row(df, x = 4, y = 0, .after = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 4 x 2
##       x     y
##   &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1     1     3
## 2     2     2
## 3     4     0
## 4     3     1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;add_row(df, x = 4, y = 0, .after = 3)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 4 x 2
##       x     y
##   &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1     1     3
## 2     2     2
## 3     3     1
## 4     4     0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;.after&lt;/code&gt;设置为m,则是指从原来的第m行的后面一行开始添加.&lt;/p&gt;
&lt;p&gt;如果某些行不提供新的元素,则会变为NA.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;add_row(df, x = 4)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 4 x 2
##       x     y
##   &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;
## 1     1     3
## 2     2     2
## 3     3     1
## 4     4    NA&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;添加新的列&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.2&lt;/span&gt; 添加新的列&lt;/h2&gt;
&lt;p&gt;使用&lt;code&gt;add_column()&lt;/code&gt;函数可以给已有的tibble对象添加新的列.跟&lt;code&gt;add_column()&lt;/code&gt;一样的.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# add_column ---------------------------------
df &amp;lt;- tibble(x = 1:3, y = 3:1)
add_column(df, z = -1:1, w = 0)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 4
##       x     y     z     w
##   &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt;
## 1     1     3    -1     0
## 2     2     2     0     0
## 3     3     1     1     0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;需要注意的是,并不能覆盖原来的列以及和原来的行数不一样的新的列.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# You can&amp;#39;t overwrite existing columns
try(
add_column(df, x = 4:6)  
)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Error : Can&amp;#39;t add duplicate columns with `add_column()`:
## * Column `x` already exists in `.data`.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# You can&amp;#39;t create new observations
try(
 add_column(df, z = 1:5) 
)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Error : New columns in `add_column()` must be consistent with `.data`:
## * `.data` has 3 rows
## * New column contributes 5 rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;所以其实并不方便,还是使用&lt;code&gt;dplyr&lt;/code&gt;更方便.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;tibble对列名和行名的操作&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;5&lt;/span&gt; tibble对列名和行名的操作&lt;/h1&gt;
&lt;div id=&#34;判断是否有行名&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;5.1&lt;/span&gt; 判断是否有行名&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(mtcars)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                    mpg cyl disp  hp drat    wt  qsec vs am gear carb
## Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4
## Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4
## Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1
## Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1
## Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2
## Valiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rownames(mtcars)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;Mazda RX4&amp;quot;           &amp;quot;Mazda RX4 Wag&amp;quot;       &amp;quot;Datsun 710&amp;quot;         
##  [4] &amp;quot;Hornet 4 Drive&amp;quot;      &amp;quot;Hornet Sportabout&amp;quot;   &amp;quot;Valiant&amp;quot;            
##  [7] &amp;quot;Duster 360&amp;quot;          &amp;quot;Merc 240D&amp;quot;           &amp;quot;Merc 230&amp;quot;           
## [10] &amp;quot;Merc 280&amp;quot;            &amp;quot;Merc 280C&amp;quot;           &amp;quot;Merc 450SE&amp;quot;         
## [13] &amp;quot;Merc 450SL&amp;quot;          &amp;quot;Merc 450SLC&amp;quot;         &amp;quot;Cadillac Fleetwood&amp;quot; 
## [16] &amp;quot;Lincoln Continental&amp;quot; &amp;quot;Chrysler Imperial&amp;quot;   &amp;quot;Fiat 128&amp;quot;           
## [19] &amp;quot;Honda Civic&amp;quot;         &amp;quot;Toyota Corolla&amp;quot;      &amp;quot;Toyota Corona&amp;quot;      
## [22] &amp;quot;Dodge Challenger&amp;quot;    &amp;quot;AMC Javelin&amp;quot;         &amp;quot;Camaro Z28&amp;quot;         
## [25] &amp;quot;Pontiac Firebird&amp;quot;    &amp;quot;Fiat X1-9&amp;quot;           &amp;quot;Porsche 914-2&amp;quot;      
## [28] &amp;quot;Lotus Europa&amp;quot;        &amp;quot;Ford Pantera L&amp;quot;      &amp;quot;Ferrari Dino&amp;quot;       
## [31] &amp;quot;Maserati Bora&amp;quot;       &amp;quot;Volvo 142E&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;has_rownames(mtcars)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(iris)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
## 1          5.1         3.5          1.4         0.2  setosa
## 2          4.9         3.0          1.4         0.2  setosa
## 3          4.7         3.2          1.3         0.2  setosa
## 4          4.6         3.1          1.5         0.2  setosa
## 5          5.0         3.6          1.4         0.2  setosa
## 6          5.4         3.9          1.7         0.4  setosa&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rownames(iris)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   [1] &amp;quot;1&amp;quot;   &amp;quot;2&amp;quot;   &amp;quot;3&amp;quot;   &amp;quot;4&amp;quot;   &amp;quot;5&amp;quot;   &amp;quot;6&amp;quot;   &amp;quot;7&amp;quot;   &amp;quot;8&amp;quot;   &amp;quot;9&amp;quot;   &amp;quot;10&amp;quot;  &amp;quot;11&amp;quot;  &amp;quot;12&amp;quot; 
##  [13] &amp;quot;13&amp;quot;  &amp;quot;14&amp;quot;  &amp;quot;15&amp;quot;  &amp;quot;16&amp;quot;  &amp;quot;17&amp;quot;  &amp;quot;18&amp;quot;  &amp;quot;19&amp;quot;  &amp;quot;20&amp;quot;  &amp;quot;21&amp;quot;  &amp;quot;22&amp;quot;  &amp;quot;23&amp;quot;  &amp;quot;24&amp;quot; 
##  [25] &amp;quot;25&amp;quot;  &amp;quot;26&amp;quot;  &amp;quot;27&amp;quot;  &amp;quot;28&amp;quot;  &amp;quot;29&amp;quot;  &amp;quot;30&amp;quot;  &amp;quot;31&amp;quot;  &amp;quot;32&amp;quot;  &amp;quot;33&amp;quot;  &amp;quot;34&amp;quot;  &amp;quot;35&amp;quot;  &amp;quot;36&amp;quot; 
##  [37] &amp;quot;37&amp;quot;  &amp;quot;38&amp;quot;  &amp;quot;39&amp;quot;  &amp;quot;40&amp;quot;  &amp;quot;41&amp;quot;  &amp;quot;42&amp;quot;  &amp;quot;43&amp;quot;  &amp;quot;44&amp;quot;  &amp;quot;45&amp;quot;  &amp;quot;46&amp;quot;  &amp;quot;47&amp;quot;  &amp;quot;48&amp;quot; 
##  [49] &amp;quot;49&amp;quot;  &amp;quot;50&amp;quot;  &amp;quot;51&amp;quot;  &amp;quot;52&amp;quot;  &amp;quot;53&amp;quot;  &amp;quot;54&amp;quot;  &amp;quot;55&amp;quot;  &amp;quot;56&amp;quot;  &amp;quot;57&amp;quot;  &amp;quot;58&amp;quot;  &amp;quot;59&amp;quot;  &amp;quot;60&amp;quot; 
##  [61] &amp;quot;61&amp;quot;  &amp;quot;62&amp;quot;  &amp;quot;63&amp;quot;  &amp;quot;64&amp;quot;  &amp;quot;65&amp;quot;  &amp;quot;66&amp;quot;  &amp;quot;67&amp;quot;  &amp;quot;68&amp;quot;  &amp;quot;69&amp;quot;  &amp;quot;70&amp;quot;  &amp;quot;71&amp;quot;  &amp;quot;72&amp;quot; 
##  [73] &amp;quot;73&amp;quot;  &amp;quot;74&amp;quot;  &amp;quot;75&amp;quot;  &amp;quot;76&amp;quot;  &amp;quot;77&amp;quot;  &amp;quot;78&amp;quot;  &amp;quot;79&amp;quot;  &amp;quot;80&amp;quot;  &amp;quot;81&amp;quot;  &amp;quot;82&amp;quot;  &amp;quot;83&amp;quot;  &amp;quot;84&amp;quot; 
##  [85] &amp;quot;85&amp;quot;  &amp;quot;86&amp;quot;  &amp;quot;87&amp;quot;  &amp;quot;88&amp;quot;  &amp;quot;89&amp;quot;  &amp;quot;90&amp;quot;  &amp;quot;91&amp;quot;  &amp;quot;92&amp;quot;  &amp;quot;93&amp;quot;  &amp;quot;94&amp;quot;  &amp;quot;95&amp;quot;  &amp;quot;96&amp;quot; 
##  [97] &amp;quot;97&amp;quot;  &amp;quot;98&amp;quot;  &amp;quot;99&amp;quot;  &amp;quot;100&amp;quot; &amp;quot;101&amp;quot; &amp;quot;102&amp;quot; &amp;quot;103&amp;quot; &amp;quot;104&amp;quot; &amp;quot;105&amp;quot; &amp;quot;106&amp;quot; &amp;quot;107&amp;quot; &amp;quot;108&amp;quot;
## [109] &amp;quot;109&amp;quot; &amp;quot;110&amp;quot; &amp;quot;111&amp;quot; &amp;quot;112&amp;quot; &amp;quot;113&amp;quot; &amp;quot;114&amp;quot; &amp;quot;115&amp;quot; &amp;quot;116&amp;quot; &amp;quot;117&amp;quot; &amp;quot;118&amp;quot; &amp;quot;119&amp;quot; &amp;quot;120&amp;quot;
## [121] &amp;quot;121&amp;quot; &amp;quot;122&amp;quot; &amp;quot;123&amp;quot; &amp;quot;124&amp;quot; &amp;quot;125&amp;quot; &amp;quot;126&amp;quot; &amp;quot;127&amp;quot; &amp;quot;128&amp;quot; &amp;quot;129&amp;quot; &amp;quot;130&amp;quot; &amp;quot;131&amp;quot; &amp;quot;132&amp;quot;
## [133] &amp;quot;133&amp;quot; &amp;quot;134&amp;quot; &amp;quot;135&amp;quot; &amp;quot;136&amp;quot; &amp;quot;137&amp;quot; &amp;quot;138&amp;quot; &amp;quot;139&amp;quot; &amp;quot;140&amp;quot; &amp;quot;141&amp;quot; &amp;quot;142&amp;quot; &amp;quot;143&amp;quot; &amp;quot;144&amp;quot;
## [145] &amp;quot;145&amp;quot; &amp;quot;146&amp;quot; &amp;quot;147&amp;quot; &amp;quot;148&amp;quot; &amp;quot;149&amp;quot; &amp;quot;150&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;has_rownames(iris)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] FALSE&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以使用&lt;code&gt;remove_rownames()&lt;/code&gt;函数去除掉行名.当然也可以使用将行名设置为NULL打到目的&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;has_rownames(mtcars)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mtcars2 &amp;lt;- 
  remove_rownames(mtcars)
has_rownames(mtcars2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] FALSE&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;行名和某一列互相转换&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;5.2&lt;/span&gt; 行名和某一列互相转换&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;rownames_to_column()&lt;/code&gt;函数可以将tibble的行名转变为某一列,并且删除掉行名.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mtcars2 &amp;lt;- 
rownames_to_column(mtcars, var = &amp;quot;test&amp;quot;)
mtcars2 %&amp;gt;% 
  as_tibble()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 32 x 12
##    test          mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb
##    &amp;lt;chr&amp;gt;       &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1 Mazda RX4    21       6  160    110  3.9   2.62  16.5     0     1     4     4
##  2 Mazda RX4 …  21       6  160    110  3.9   2.88  17.0     0     1     4     4
##  3 Datsun 710   22.8     4  108     93  3.85  2.32  18.6     1     1     4     1
##  4 Hornet 4 D…  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1
##  5 Hornet Spo…  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2
##  6 Valiant      18.1     6  225    105  2.76  3.46  20.2     1     0     3     1
##  7 Duster 360   14.3     8  360    245  3.21  3.57  15.8     0     0     3     4
##  8 Merc 240D    24.4     4  147.    62  3.69  3.19  20       1     0     4     2
##  9 Merc 230     22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2
## 10 Merc 280     19.2     6  168.   123  3.92  3.44  18.3     1     0     4     4
## # … with 22 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;另外一个函数,&lt;code&gt;rowid_to_column()&lt;/code&gt;可以去除掉行名,并在最开始添加一列rowid,从1开始.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rowid_to_column(mtcars) %&amp;gt;% 
  as_tibble()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 32 x 12
##    rowid   mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb
##    &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1     1  21       6  160    110  3.9   2.62  16.5     0     1     4     4
##  2     2  21       6  160    110  3.9   2.88  17.0     0     1     4     4
##  3     3  22.8     4  108     93  3.85  2.32  18.6     1     1     4     1
##  4     4  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1
##  5     5  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2
##  6     6  18.1     6  225    105  2.76  3.46  20.2     1     0     3     1
##  7     7  14.3     8  360    245  3.21  3.57  15.8     0     0     3     4
##  8     8  24.4     4  147.    62  3.69  3.19  20       1     0     4     2
##  9     9  22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2
## 10    10  19.2     6  168.   123  3.92  3.44  18.3     1     0     4     4
## # … with 22 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;当然也可以将某一列变为行名:&lt;code&gt;column_to_rownames()&lt;/code&gt;.注意必须要求tibble没有行名,且新的行名是没有重复元素的.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;column_to_rownames(mtcars2, var = &amp;quot;test&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                      mpg cyl  disp  hp drat    wt  qsec vs am gear carb
## Mazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4
## Mazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4
## Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1
## Hornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1
## Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2
## Valiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1
## Duster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4
## Merc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2
## Merc 230            22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2
## Merc 280            19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4
## Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4
## Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3
## Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3
## Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3
## Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4
## Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4
## Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4
## Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1
## Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2
## Toyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1
## Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1
## Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2
## AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2
## Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4
## Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2
## Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1
## Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2
## Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2
## Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4
## Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6
## Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8
## Volvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>日期时间操作总结</title>
      <link>/post/2019-10-31-date-summary/</link>
      <pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-10-31-date-summary/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#日期格式转换&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; 日期格式转换&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#比如美国这边常见的月日年.&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1&lt;/span&gt; 比如美国这边常见的&lt;code&gt;月/日/年&lt;/code&gt;.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#国内常见常见的年月日&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.2&lt;/span&gt; 国内常见常见的&lt;code&gt;年/月/日&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#常见日期各个元素的写法及相应format的写法&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.3&lt;/span&gt; 常见日期各个元素的写法及相应format的写法&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#年&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.3.1&lt;/span&gt; 年&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#月&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.3.2&lt;/span&gt; 月&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#日&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.3.3&lt;/span&gt; 日&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#时间&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.3.4&lt;/span&gt; 时间&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;R语言中和日期时间相关的一共有三种格式,分别是日期(date),日期时间(data-times)和时间(time).&lt;/p&gt;
&lt;p&gt;一般来说,日期格式需要符合&lt;code&gt;ISO8601&lt;/code&gt;格式,这是一种国际上通用的日期时间格式,包含的内容从大到小包括:年,月,日,小时,分钟和秒.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(readr)
parse_datetime(&amp;quot;2019-11-11T2010&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2019-11-11 20:10:00 UTC&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;parse_datetime()&lt;/code&gt;是&lt;code&gt;readr&lt;/code&gt;包中的用于解析日期的函数.&lt;/p&gt;
&lt;div id=&#34;日期格式转换&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; 日期格式转换&lt;/h1&gt;
&lt;p&gt;使用&lt;code&gt;as.Date()&lt;/code&gt;函数将文本格式日期转换为date格式数据.一共需要两个参数:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;x:文本格式日期.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;format:文本格式日期的格式.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;比如美国这边常见的月日年.&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1&lt;/span&gt; 比如美国这边常见的&lt;code&gt;月/日/年&lt;/code&gt;.&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;date &amp;lt;- c(&amp;quot;8/6/2014&amp;quot;, &amp;quot;3/18/2015&amp;quot;)
class(date)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;character&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;date2 &amp;lt;- as.Date(x = date, format = &amp;quot;%m/%d/%Y&amp;quot;)
date2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2014-08-06&amp;quot; &amp;quot;2015-03-18&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;class(date2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Date&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;date &amp;lt;- c(&amp;quot;08/06/2014&amp;quot;, &amp;quot;03/18/2015&amp;quot;)
date2 &amp;lt;- as.Date(x = date, format = &amp;quot;%m/%d/%Y&amp;quot;)
date2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2014-08-06&amp;quot; &amp;quot;2015-03-18&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;class(date2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Date&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;date &amp;lt;- c(&amp;quot;08/06/14&amp;quot;, &amp;quot;03/18/15&amp;quot;)
date2 &amp;lt;- as.Date(x = date, format = &amp;quot;%m/%d/%y&amp;quot;)
date2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2014-08-06&amp;quot; &amp;quot;2015-03-18&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;class(date2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Date&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;注意可以看到,对于&lt;code&gt;年&lt;/code&gt;,有时候大家会省写,比如&lt;code&gt;2015&lt;/code&gt;写为&lt;code&gt;15&lt;/code&gt;.这时候在&lt;code&gt;format&lt;/code&gt;参数中代表年的位置应当由全写的&lt;code&gt;Y&lt;/code&gt;改为小写的&lt;code&gt;y&lt;/code&gt;.对于&lt;code&gt;月&lt;/code&gt;和&lt;code&gt;日&lt;/code&gt;则不存在这个问题.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;国内常见常见的年月日&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2&lt;/span&gt; 国内常见常见的&lt;code&gt;年/月/日&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;当然对于其他的类似使用&lt;code&gt;/&lt;/code&gt;分隔开日期形式,只要变换&lt;code&gt;format&lt;/code&gt;中的顺序即可.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;date &amp;lt;- c(&amp;quot;2015/8/6&amp;quot;, &amp;quot;3/18/15&amp;quot;)
class(date)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;character&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;date2 &amp;lt;- as.Date(x = date, format = c(&amp;quot;%Y/%m/%d&amp;quot; ,&amp;quot;%m/%d/%y&amp;quot;))
date2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2015-08-06&amp;quot; &amp;quot;2015-03-18&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;class(date2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Date&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以看到对于格式不同的数据,可以将&lt;code&gt;format&lt;/code&gt;设置为向量.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;常见日期各个元素的写法及相应format的写法&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.3&lt;/span&gt; 常见日期各个元素的写法及相应format的写法&lt;/h2&gt;
&lt;div id=&#34;年&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.3.1&lt;/span&gt; 年&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;%Y&lt;/strong&gt;: 4位完整数字的年.如&lt;code&gt;2019&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;%y&lt;/strong&gt;: 2位数字的年.如&lt;code&gt;19&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;月&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.3.2&lt;/span&gt; 月&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;%m&lt;/strong&gt;: 两位或者一位的月,如&lt;code&gt;01&lt;/code&gt;或者&lt;code&gt;10&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;%b&lt;/strong&gt;: 月份的简写,比如&lt;code&gt;Jan&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;%B&lt;/strong&gt;: 月份的全写,比如&lt;code&gt;January&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;日&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.3.3&lt;/span&gt; 日&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;%d&lt;/strong&gt;: 两位或者一位的日,比如&lt;code&gt;1&lt;/code&gt;或者&lt;code&gt;28&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;%d&lt;/strong&gt;: 两位或者一位的日,比如&lt;code&gt;1&lt;/code&gt;或者&lt;code&gt;28&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;时间&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.3.4&lt;/span&gt; 时间&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;%H&lt;/strong&gt;: 0-23小时的时间格式.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;%I&lt;/strong&gt;: 0-12小时的时间格式.必须和&lt;code&gt;%p&lt;/code&gt;联合使用.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;%p&lt;/strong&gt;: &lt;code&gt;a.m.&lt;/code&gt;和&lt;code&gt;p.m.&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;%M&lt;/strong&gt;: 分钟.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;%S&lt;/strong&gt;: 整数秒.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;%OS&lt;/strong&gt;: 真实秒.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;%Z&lt;/strong&gt;: 时区.必须是一个地名.如&lt;code&gt;America&lt;/code&gt;或者&lt;code&gt;Chicago&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## locale-specific version of the date
format(Sys.Date(), &amp;quot;%a %b %d&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Tue Nov 12&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x &amp;lt;- c(&amp;quot;1jan1960&amp;quot;, &amp;quot;2jan1960&amp;quot;, &amp;quot;31mar1960&amp;quot;, &amp;quot;30jul1960&amp;quot;)
z &amp;lt;- as.Date(x, &amp;quot;%d%b%Y&amp;quot;)
z&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;1960-01-01&amp;quot; &amp;quot;1960-01-02&amp;quot; &amp;quot;1960-03-31&amp;quot; &amp;quot;1960-07-30&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## read in date/time info in format &amp;#39;m/d/y&amp;#39;
dates &amp;lt;- c(&amp;quot;02/27/92&amp;quot;, &amp;quot;02/27/92&amp;quot;, &amp;quot;01/14/92&amp;quot;, &amp;quot;02/28/92&amp;quot;, &amp;quot;02/01/92&amp;quot;)
as.Date(dates, &amp;quot;%m/%d/%y&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;1992-02-27&amp;quot; &amp;quot;1992-02-27&amp;quot; &amp;quot;1992-01-14&amp;quot; &amp;quot;1992-02-28&amp;quot; &amp;quot;1992-02-01&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## date given as number of days since 1900-01-01 (a date in 1989)
as.Date(32768, origin = &amp;quot;1900-01-01&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;1989-09-19&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## Excel is said to use 1900-01-01 as day 1 (Windows default) or
## 1904-01-01 as day 0 (Mac default), but this is complicated by Excel
## incorrectly treating 1900 as a leap year.
## So for dates (post-1901) from Windows Excel
as.Date(35981, origin = &amp;quot;1899-12-30&amp;quot;) # 1998-07-05&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;1998-07-05&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## and Mac Excel
as.Date(34519, origin = &amp;quot;1904-01-01&amp;quot;) # 1998-07-05&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;1998-07-05&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## (these values come from http://support.microsoft.com/kb/214330)

## Experiment shows that Matlab&amp;#39;s origin is 719529 days before ours,
## (it takes the non-existent 0000-01-01 as day 1)
## so Matlab day 734373 can be imported as
as.Date(734373, origin = &amp;quot;1970-01-01&amp;quot;) - 719529 # 2010-08-23&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2010-08-23&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## (value from
## http://www.mathworks.de/de/help/matlab/matlab_prog/represent-date-and-times-in-MATLAB.html)

## Time zone effect
z &amp;lt;- ISOdate(2010, 04, 13, c(0,12)) # midnight and midday UTC
as.Date(z) # in UTC&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2010-04-13&amp;quot; &amp;quot;2010-04-13&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## these time zone names are common
as.Date(z, tz = &amp;quot;NZ&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2010-04-13&amp;quot; &amp;quot;2010-04-14&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;as.Date(z, tz = &amp;quot;HST&amp;quot;) # Hawaii&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2010-04-12&amp;quot; &amp;quot;2010-04-13&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>dplyr cookbook</title>
      <link>/post/2019-10-28-dplyr-cookbook/</link>
      <pubDate>Mon, 28 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-10-28-dplyr-cookbook/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#对行进行筛选filter_xxx系列函数&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; 对行进行筛选:&lt;code&gt;filter_xxx()&lt;/code&gt;系列函数&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#filter_all函数&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1&lt;/span&gt; &lt;code&gt;filter_all()&lt;/code&gt;函数&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;对行进行筛选filter_xxx系列函数&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; 对行进行筛选:&lt;code&gt;filter_xxx()&lt;/code&gt;系列函数&lt;/h1&gt;
&lt;div id=&#34;filter_all函数&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1&lt;/span&gt; &lt;code&gt;filter_all()&lt;/code&gt;函数&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;filter_all()&lt;/code&gt;函数可以对所有的列进行判断从而对行进行筛选.&lt;/p&gt;
&lt;p&gt;比如我想对&lt;code&gt;mtcars&lt;/code&gt;数据集进行筛选,对于每一行,只有每一行的值都大于150才保留下来.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tidyverse&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Attaching packages ------------------------------------------------------------------------------------ tidyverse 1.2.1 --&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## v ggplot2 3.2.1     v purrr   0.3.2
## v tibble  2.1.3     v dplyr   0.8.3
## v tidyr   1.0.0     v stringr 1.4.0
## v readr   1.3.1     v forcats 0.4.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggplot2&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tibble&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tidyr&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;dplyr&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Conflicts --------------------------------------------------------------------------------------- tidyverse_conflicts() --
## x dplyr::filter() masks stats::filter()
## x dplyr::lag()    masks stats::lag()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;filter_all(mtcars, all_vars(. &amp;gt; 150))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] mpg  cyl  disp hp   drat wt   qsec vs   am   gear carb
## &amp;lt;0 rows&amp;gt; (or 0-length row.names)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果只要任意一行大于150,就保留下来,那么可以这么写:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;filter_all(mtcars, any_vars(. &amp;gt; 150))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##     mpg cyl  disp  hp drat    wt  qsec vs am gear carb
## 1  21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4
## 2  21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4
## 3  21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1
## 4  18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2
## 5  18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1
## 6  14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4
## 7  19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4
## 8  17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4
## 9  16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3
## 10 17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3
## 11 15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3
## 12 10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4
## 13 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4
## 14 14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4
## 15 15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2
## 16 15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2
## 17 13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4
## 18 19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2
## 19 15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4
## 20 19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6
## 21 15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以看到,&lt;code&gt;ffilter_all()&lt;/code&gt;经常和&lt;code&gt;all_vars()&lt;/code&gt;和&lt;code&gt;any_vals()&lt;/code&gt;函数搭配使用.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>ggplot2主题扩充包-ggthemes</title>
      <link>/post/2019-10-28-ggplot2-ggthemes/ggplot2-ggthemes/</link>
      <pubDate>Mon, 28 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-10-28-ggplot2-ggthemes/ggplot2-ggthemes/</guid>
      <description>


&lt;p&gt;&lt;code&gt;ggthemes&lt;/code&gt;是&lt;code&gt;ggplot2&lt;/code&gt;的一个主题扩展包.含有&lt;code&gt;ggplot2&lt;/code&gt;的多个扩展主题.官网参考文档见下面链接:&lt;/p&gt;
&lt;div id=&#34;安装&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;安装&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;# 从CRAN安装
install.packages(&amp;#39;ggthemes&amp;#39;, dependencies = TRUE)
# 从github安装
library(&amp;quot;devtools&amp;quot;)
install_github(c(&amp;quot;hadley/ggplot2&amp;quot;, &amp;quot;jrnold/ggthemes&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;主题&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;主题&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;ggthemes&lt;/code&gt;提供的最直接的就是主题.可以直接在ggplot2对象后通过&lt;code&gt;+&lt;/code&gt;好添加主题.&lt;/p&gt;
&lt;div id=&#34;theme_base主题&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;theme_base()&lt;/code&gt;主题&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;ggplot2&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggplot2&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggthemes)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggthemes&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;(
p &amp;lt;- ggplot(mtcars) + geom_point(aes(x = wt, y = mpg,
     colour = factor(gear))) + facet_wrap(~am)
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p + theme_base()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-1-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;theme_base()&lt;/code&gt;有两个参数,&lt;code&gt;base_size&lt;/code&gt;和&lt;code&gt;base_family&lt;/code&gt;,分别用来设置图片中所有字体的颜色和字体.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;theme_calc主题&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;theme_calc()&lt;/code&gt;主题&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;ggplot2&amp;quot;)
library(ggthemes)
(
p &amp;lt;- ggplot(mtcars) + geom_point(aes(x = wt, y = mpg,
     colour = factor(gear))) + facet_wrap(~am)
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p + theme_calc()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-2-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;还有很多其他的主题,可以直接参考官方网站.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;颜色标度&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;颜色标度&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;ggthemes()&lt;/code&gt;同样也提供了颜色标度.&lt;/p&gt;
&lt;div id=&#34;色盲友好型颜色调色板和标度&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;色盲友好型颜色调色板和标度&lt;/h2&gt;
&lt;p&gt;可以参考如下网址:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/#a-colorblind-friendly-palette&#34; class=&#34;uri&#34;&gt;http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/#a-colorblind-friendly-palette&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一共包括四个函数:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;colorblind_pal()&lt;/code&gt;,&lt;code&gt;scale_colour_colorblind()&lt;/code&gt;,&lt;code&gt;scale_color_colorblind()&lt;/code&gt;和&lt;code&gt;scale_fill_colorblind()&lt;/code&gt;.用于分散性的数据.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;ggplot2&amp;quot;)
library(&amp;quot;scales&amp;quot;)
library(ggthemes)

show_col(colorblind_pal()(8))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##该函数用来给出最多8种颜色的名字&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;ggplot2&amp;quot;)
library(&amp;quot;scales&amp;quot;)
library(ggthemes)

show_col(colorblind_pal()(8))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##该函数用来给出最多8种颜色的名字
(
p &amp;lt;- ggplot(mtcars) + 
  geom_point(aes(x = wt, y = mpg,
     colour = factor(gear))) + 
  facet_wrap(~am)
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-4-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p + 
  theme_igray() + 
  scale_colour_colorblind()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-4-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;scale_fill_colorblind()&lt;/code&gt;函数和colour函数相同,只是用来填充.&lt;/p&gt;
&lt;p&gt;还有很多其他的颜色标度扩展,详情可以看其官方网站.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;形状标度&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;形状标度&lt;/h1&gt;
&lt;p&gt;给美学参数&lt;code&gt;shape&lt;/code&gt;来提供扩展.&lt;/p&gt;
&lt;div id=&#34;scale_shape_calc&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;scale_shape_calc()&lt;/code&gt;&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;(
p &amp;lt;- ggplot(mtcars) + 
  geom_point(aes(x = wt, y = mpg,
     shape = factor(gear))) + 
  facet_wrap(~am)
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p + scale_shape_calc()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-5-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;线性标度&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;线性标度&lt;/h1&gt;
&lt;p&gt;给美学参数&lt;code&gt;linetype&lt;/code&gt;来提供扩展.&lt;/p&gt;
&lt;div id=&#34;scale_linetype_stata&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;scale_linetype_stata()&lt;/code&gt;&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
require(ggthemes)
(
  p &amp;lt;- 
    ggplot(mtcars,aes(mpg, wt)) +
    geom_line(aes(linetype = factor(gear)))
) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p  +
    scale_linetype_stata()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-6-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;颜色形状和线性调色板&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;颜色,形状和线性&lt;code&gt;调色板&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;提供了非常多的色板,可以看官网.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggthemes)
library(scales)
show_col(few_pal(palette = &amp;quot;Light&amp;quot;)(8))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;show_col(few_pal(palette = &amp;quot;Medium&amp;quot;)(8))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-7-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;show_col(few_pal(palette = &amp;quot;Dark&amp;quot;)(8))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-7-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;几何对象和统计变换函数&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;几何对象和统计变换函数&lt;/h1&gt;
&lt;div id=&#34;range-framesgeom_rangeframe&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Range Frames&lt;code&gt;geom_rangeframe&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;该函数是用来给轴加上直线的.看以下例子.与其他几何对象参数一样,他也可以接受一些常见的参数.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;ggplot2&amp;quot;)
library(ggthemes)
(
p &amp;lt;- 
ggplot(mtcars, aes(wt, mpg)) +
 geom_point() 
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p +
   geom_rangeframe(colour = &amp;quot;red&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-8-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p +
   geom_rangeframe(colour = &amp;quot;red&amp;quot;, linetype = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-8-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p +
   geom_rangeframe(colour = &amp;quot;red&amp;quot;, linetype = 2, sides = &amp;quot;top&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-8-4.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p +
   geom_rangeframe(colour = &amp;quot;red&amp;quot;, linetype = 2, sides = c(&amp;quot;top&amp;quot;)) +
  geom_rangeframe(colour = &amp;quot;red&amp;quot;, linetype = 2, sides = c(&amp;quot;right&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-8-5.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;tuftes-box-plot&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Tufte’s Box Plot&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;ggplot2&amp;quot;)
library(ggthemes)
(
  p &amp;lt;- ggplot(mtcars, aes(factor(cyl), mpg))
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# with a point for the median and lines for whiskers
p + geom_tufteboxplot()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-9-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# with a line for the interquartile range and points for whiskers
p + geom_tufteboxplot(median.type = &amp;quot;line&amp;quot;, whisker.type = &amp;quot;point&amp;quot;, hoffset = 0)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-9-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# with a wide line for the interquartile range and lines for whiskers
p + geom_tufteboxplot(median.type = &amp;quot;line&amp;quot;, hoffset = 0, width = 3)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: position_dodge requires non-overlapping x intervals&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-9-4.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# with an offset line for the interquartile range and lines for whiskers
p + geom_tufteboxplot(median.type = &amp;quot;line&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-9-5.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# combined with theme_tufte
p + geom_tufteboxplot() +
  theme_tufte() +
  theme(axis.ticks.x = element_blank())&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-9-6.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R cookbook</title>
      <link>/post/2019-11-10-r-cookbook/</link>
      <pubDate>Mon, 28 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-11-10-r-cookbook/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#r一些常用小命令&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; R一些常用小命令&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#系统相关&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1&lt;/span&gt; 系统相关&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#重启r-session&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1.1&lt;/span&gt; 重启R session&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#rstudio快捷键总结&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; Rstudio快捷键总结&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#r小技巧&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3&lt;/span&gt; R小技巧&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#从字符串获取其所代表的变量名的对象&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.1&lt;/span&gt; 从字符串获取其所代表的变量名的对象&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#将某个对象赋予某个字符串所代表的变量名&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.2&lt;/span&gt; 将某个对象赋予某个字符串所代表的变量名&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;r一些常用小命令&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; R一些常用小命令&lt;/h1&gt;
&lt;div id=&#34;系统相关&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1&lt;/span&gt; 系统相关&lt;/h2&gt;
&lt;div id=&#34;重启r-session&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.1&lt;/span&gt; 重启R session&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;.rs.restartR()&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;rstudio快捷键总结&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; Rstudio快捷键总结&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;alt + arrow&lt;/code&gt;: 代码整体移动.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;shift + alt + mouse click&lt;/code&gt;:大光标.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;big_cursor.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;r小技巧&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;3&lt;/span&gt; R小技巧&lt;/h1&gt;
&lt;div id=&#34;从字符串获取其所代表的变量名的对象&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.1&lt;/span&gt; 从字符串获取其所代表的变量名的对象&lt;/h2&gt;
&lt;p&gt;使用&lt;code&gt;get()&lt;/code&gt;函数.比如:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;a &amp;lt;- 1:10
b &amp;lt;- &amp;quot;a&amp;quot;
b&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;a&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;get(b)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1]  1  2  3  4  5  6  7  8  9 10&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;将某个对象赋予某个字符串所代表的变量名&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.2&lt;/span&gt; 将某个对象赋予某个字符串所代表的变量名&lt;/h2&gt;
&lt;p&gt;使用&lt;code&gt;assign()&lt;/code&gt;函数.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;b &amp;lt;- &amp;quot;a&amp;quot;
assign(x = b, value = 1:10)
a&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1]  1  2  3  4  5  6  7  8  9 10&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;b&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;a&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这个函数非常有用,尤其是在一个循环中,你想将每个循环获得的对象赋予给一些使用数字编号的变量名中.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rm(list = ls())
for(i in 1:10){
  cat(i, &amp;quot; &amp;quot;)
  temp &amp;lt;- 1:i
  assign(x = paste(&amp;quot;run&amp;quot;, i, sep = &amp;quot;_&amp;quot;), value = temp)
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 1  2  3  4  5  6  7  8  9  10&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;run_1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;run_5&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1 2 3 4 5&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;run_10&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1]  1  2  3  4  5  6  7  8  9 10&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R常见错误总结</title>
      <link>/post/r-error-summary/</link>
      <pubDate>Sat, 26 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/r-error-summary/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#系统&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; 系统&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#保存ggplot2对象时报错.&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1&lt;/span&gt; 保存ggplot2对象时报错.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#安装包时报错&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.2&lt;/span&gt; 安装包时报错&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;这篇博客用来记录R常见的错及其器解决办法.&lt;/p&gt;
&lt;div id=&#34;系统&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; 系统&lt;/h1&gt;
&lt;div id=&#34;保存ggplot2对象时报错.&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1&lt;/span&gt; 保存ggplot2对象时报错.&lt;/h2&gt;
&lt;p&gt;使用&lt;code&gt;ggraph&lt;/code&gt;画图之后,保存报错.&lt;/p&gt;
&lt;p&gt;错误如下:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Error in grid.Call.graphics(C_text, as.graphicsAnnot(x&lt;span class=&#34;math inline&#34;&gt;\(label), x\)&lt;/span&gt;x, x$y, : invalid font type Traceback:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;很明显时字体的错误,但是在&lt;code&gt;set_graph_style&lt;/code&gt;以及&lt;code&gt;theme_graph&lt;/code&gt;设置字体之后,还是不行,仍然报错.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;set_graph_style(family = &amp;quot;Arial&amp;quot;)#默认为&amp;#39;Arial Narrow&amp;#39;
theme_graph(base_family = &amp;#39;Arial&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;使用&lt;code&gt;extrafont&lt;/code&gt;包导入字体:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;extrafont::font_import()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;重启R和Rstuio.然后先load字体.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;extrafont::loadfonts()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后画图再保存.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;安装包时报错&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2&lt;/span&gt; 安装包时报错&lt;/h2&gt;
&lt;p&gt;错误如下:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ERROR: loading failed for ‘i386’&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;原因可能如下:&lt;/p&gt;
&lt;p&gt;the problem, I think, is that if both 32-bit and 64-bit versions of R are installed, devtools tries to build for both of them. During the build process, it checks if the newly built package can be loaded under both 32-bit and 64-bit R versions. When it tries running the 32-bit version, the reticulate package causes an error if the version of Python it has access to is 64-bit, so the install process fails. I think the key part of the update which spared me this problem was not installing the 32-bit version of R, as now devtools only builds for 64-bit.&lt;/p&gt;
&lt;p&gt;解决办法:&lt;/p&gt;
&lt;p&gt;add &lt;code&gt;INSTALL_opts=c(&#34;--no-multiarch&#34;)&lt;/code&gt; to your &lt;code&gt;install_github()&lt;/code&gt; or &lt;code&gt;BiocManager::install()&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>下载KEGG数据库</title>
      <link>/post/download-kegg-database/</link>
      <pubDate>Sat, 26 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/download-kegg-database/</guid>
      <description>


&lt;p&gt;记录使用一些R语言包下载KEGG数据库.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#get the ID of all hsa pathways
KEGGREST::listDatabases()
path_ID &amp;lt;- 
KEGGREST::keggList(organism = &amp;quot;hsa&amp;quot;, database = &amp;quot;pathway&amp;quot;) %&amp;gt;% 
  names() %&amp;gt;% 
  unique() %&amp;gt;% 
  stringr::str_replace_all(., &amp;quot;path:&amp;quot;, &amp;quot;&amp;quot;)

dir.create(path = &amp;quot;kegg_pathway&amp;quot;)
setwd(&amp;quot;kegg_pathway/&amp;quot;)


node_info &amp;lt;- vector(mode = &amp;quot;list&amp;quot;, length = length(path_ID))
edge_info &amp;lt;- vector(mode = &amp;quot;list&amp;quot;, length = length(path_ID))

for(i in i:length(path_ID)){
  cat(i, &amp;quot; &amp;quot;)
  temp_kgml &amp;lt;- 
    get_KGML(pathwayid = path_ID[i])
  if(is.na(temp_kgml)){
    next()
  }
  # slot(object = temp_kgml, name = &amp;quot;pathwayInfo&amp;quot;)
  #Download a static pathway image (png file) to working directory:
  temp_image_link &amp;lt;- slot(slot(temp_kgml, &amp;quot;pathwayInfo&amp;quot;), &amp;quot;image&amp;quot;)
  download.file(temp_image_link, basename(temp_image_link), mode = &amp;quot;wb&amp;quot;)
  temp_kegg_mappings &amp;lt;- expand_KEGG_mappings(KGML_file = temp_kgml)
  temp_kegg_edges &amp;lt;- expand_KEGG_edges(temp_kgml, temp_kegg_mappings)
  #Modify existing data sets; specify as nodes and edges
  temp_node_mapping_info &amp;lt;- node_mapping_info(temp_kegg_mappings)
  temp_edge_mapping_info &amp;lt;- edge_mapping_info(temp_kegg_edges)
  #Create an igraph object
  # kegg_graph &amp;lt;- get_graph_object(temp_node_mapping_info, temp_edge_mapping_info)
  
  edge_info[[i]] &amp;lt;- 
    temp_kegg_edges
  node_info[[i]] &amp;lt;- temp_node_mapping_info

  temp_kegg_nodes &amp;lt;- temp_node_mapping_info

}


save(node_info, file = &amp;quot;node_info&amp;quot;)
save(edge_info, file = &amp;quot;edge_info&amp;quot;)



path_name &amp;lt;- KEGGREST::keggList(organism = &amp;quot;hsa&amp;quot;, database = &amp;quot;pathway&amp;quot;) %&amp;gt;% 
  unname()

path_name_id &amp;lt;- 
  paste(path_ID, path_name, sep = &amp;quot;;&amp;quot;)


for(i in 1:length(path_name_id)){
  cat(i, &amp;quot; &amp;quot;)
  if(!is.null(node_info[[i]])){
    temp &amp;lt;- node_info[[i]]
    temp[,3] &amp;lt;- lapply(temp[,3], function(x) paste(x, collapse = &amp;quot;;&amp;quot;)) %&amp;gt;% unlist()
    temp[,4] &amp;lt;- lapply(temp[,4], function(x) paste(x, collapse = &amp;quot;;&amp;quot;)) %&amp;gt;% unlist()
    temp[,13] &amp;lt;- lapply(temp[,13], function(x) paste(x, collapse = &amp;quot;;&amp;quot;)) %&amp;gt;% unlist()
    temp[,14] &amp;lt;- lapply(temp[,14], function(x) paste(x, collapse = &amp;quot;;&amp;quot;)) %&amp;gt;% unlist()
    readr::write_csv(temp[,-c(6,7,8,9,10,11,12,13,17,18)], paste(path_ID[i], &amp;quot;_node_info.csv&amp;quot;, sep = &amp;quot;&amp;quot;))
  }
  
  if(!is.null(edge_info[[i]])){
    temp &amp;lt;- edge_info[[i]]
    # temp[,3] &amp;lt;- lapply(temp[,3], function(x) paste(x, collapse = &amp;quot;;&amp;quot;)) %&amp;gt;% unlist()
    # temp[,4] &amp;lt;- lapply(temp[,4], function(x) paste(x, collapse = &amp;quot;;&amp;quot;)) %&amp;gt;% unlist()
    # temp[,13] &amp;lt;- lapply(temp[,13], function(x) paste(x, collapse = &amp;quot;;&amp;quot;)) %&amp;gt;% unlist()
    # temp[,14] &amp;lt;- lapply(temp[,14], function(x) paste(x, collapse = &amp;quot;;&amp;quot;)) %&amp;gt;% unlist()
    readr::write_csv(temp, paste(path_ID[i], &amp;quot;_edge_info.csv&amp;quot;, sep = &amp;quot;&amp;quot;))
  }
  
}

for(i in 1:length(path_ID)){
  cat(i, &amp;quot; &amp;quot;)
  file &amp;lt;- grep(path_ID[i], dir(), value = TRUE)
  dir.create(path_ID[i])
  file.copy(from = file, to = path_ID[i]) 
}

unlink(grep(&amp;quot;csv&amp;quot;, dir(), value = TRUE))

library(igraph)

as_edgelist(GO)

vertex_attr(GO)&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>ggplot2 cookbook</title>
      <link>/post/ggplot2-cookbook/</link>
      <pubDate>Fri, 25 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/ggplot2-cookbook/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#绘图基础plot-basics&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; 绘图基础(plot basics)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#ggplot-创建一个新的ggplot图片&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1&lt;/span&gt; &lt;code&gt;ggplot()&lt;/code&gt; 创建一个新的ggplot图片&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#参数&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1.1&lt;/span&gt; 参数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#细节&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1.2&lt;/span&gt; 细节&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#例子&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1.3&lt;/span&gt; 例子&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#aes-创建美学映射&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.2&lt;/span&gt; &lt;code&gt;aes()&lt;/code&gt; 创建美学映射&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#参数-1&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.2.1&lt;/span&gt; 参数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#细节-1&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.2.2&lt;/span&gt; 细节&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#例子-1&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.2.3&lt;/span&gt; 例子&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ggsave保存ggplot2图片对象&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.3&lt;/span&gt; &lt;code&gt;ggsave()&lt;/code&gt;保存&lt;code&gt;ggplot2&lt;/code&gt;图片对象&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#参数-2&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.3.1&lt;/span&gt; 参数&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#图层layer几何对象geoms&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; 图层(Layer):几何对象(geoms)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#直线geom_ablinegeom_hline和geom_vline&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.1&lt;/span&gt; 直线&lt;code&gt;geom_abline&lt;/code&gt;,&lt;code&gt;geom_hline&lt;/code&gt;和&lt;code&gt;geom_vline&lt;/code&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#参数-3&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.1.1&lt;/span&gt; 参数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#细节-2&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.1.2&lt;/span&gt; 细节&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#美学映射aesthetics&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.1.3&lt;/span&gt; 美学映射(Aesthetics)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#例子-2&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.1.4&lt;/span&gt; 例子&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#柱形图bar-chartsgeom_bargeom_col和stat_count&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.2&lt;/span&gt; 柱形图(bar charts)&lt;code&gt;geom_bar()&lt;/code&gt;,&lt;code&gt;geom_col()&lt;/code&gt;和&lt;code&gt;stat_count&lt;/code&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#参数-4&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.2.1&lt;/span&gt; 参数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#细节-3&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.2.2&lt;/span&gt; 细节&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#美学参数aesthetics&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.2.3&lt;/span&gt; 美学参数(Aesthetics)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#计算变量-computed-variables&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.2.4&lt;/span&gt; 计算变量 (Computed variables)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#例子-3&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.2.5&lt;/span&gt; 例子&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#二维方格计数热图heatmap-of-2d-bin-countsgeom_bin2d和stat_bin_2d&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.3&lt;/span&gt; 二维方格计数热图(Heatmap of 2d bin counts)&lt;code&gt;geom_bin2d()&lt;/code&gt;和&lt;code&gt;stat_bin_2d()&lt;/code&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#参数-5&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.3.1&lt;/span&gt; 参数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#美学参数asethetics&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.3.2&lt;/span&gt; 美学参数(Asethetics)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#计算变量computed-variables&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.3.3&lt;/span&gt; 计算变量(Computed variables)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#例子-4&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.3.4&lt;/span&gt; 例子&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#空白图geom_blank&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.4&lt;/span&gt; 空白图&lt;code&gt;geom_blank()&lt;/code&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#参数-6&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.4.1&lt;/span&gt; 参数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#例子-5&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.4.2&lt;/span&gt; 例子&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#箱型图boxplot或者whiskers-plotgeom_boxplot和stat_boxplot&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.5&lt;/span&gt; 箱型图(boxplot或者whiskers plot)&lt;code&gt;geom_boxplot()&lt;/code&gt;和&lt;code&gt;stat_boxplot()&lt;/code&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#参数-7&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.5.1&lt;/span&gt; 参数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#统计总结&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.5.2&lt;/span&gt; 统计总结&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#美学参数&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.5.3&lt;/span&gt; 美学参数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#计算变量&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.5.4&lt;/span&gt; 计算变量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#例子-6&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.5.5&lt;/span&gt; 例子&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#d表面的2d等高线contoursgeom_contour和stat_contour&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.6&lt;/span&gt; 3D表面的2D等高线(contours)&lt;code&gt;geom_contour()&lt;/code&gt;和&lt;code&gt;stat_contour()&lt;/code&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#参数-8&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.6.1&lt;/span&gt; 参数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#美学参数-1&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.6.2&lt;/span&gt; 美学参数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#计算变量-1&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.6.3&lt;/span&gt; 计算变量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#例子-7&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.6.4&lt;/span&gt; 例子&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#常见问题总结&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3&lt;/span&gt; 常见问题总结&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#如何保证不同图中legend的scale一致&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.1&lt;/span&gt; 如何保证不同图中legend的scale一致&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;绘图基础plot-basics&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; 绘图基础(plot basics)&lt;/h1&gt;
&lt;p&gt;所有的ggplot2图形都开始于&lt;code&gt;ggplot()&lt;/code&gt;函数的调用.给其提供数据,以及美学映射(aesthethic mappings)(使用&lt;code&gt;aes()&lt;/code&gt;函数).然后添加图层(layers), 度量系统(scales), 坐标系(coords)以及分面(facets).添加的每个对象,都是在前一行末尾使用符号&lt;code&gt;+&lt;/code&gt;.如果需要将一个ggplot2图像保存在本地,使用&lt;code&gt;ggsave()&lt;/code&gt;函数.&lt;/p&gt;
&lt;div id=&#34;ggplot-创建一个新的ggplot图片&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1&lt;/span&gt; &lt;code&gt;ggplot()&lt;/code&gt; 创建一个新的ggplot图片&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;ggplot()&lt;/code&gt;函数是用来启动初始化一个ggplot2对象的.It can be used to declare the input data frame for a graphic and to specify the set of plot aesthetics intended to be common throughout all subsequent layers unless specifically overridden.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggplot(data = NULL, mapping = aes(), ...,
  environment = parent.frame())
Arguments&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;参数&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.1&lt;/span&gt; 参数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;data&lt;/strong&gt; 用于绘图的数据.如果数据格式不是&lt;code&gt;data.frame&lt;/code&gt;,会默认使用&lt;code&gt;fortity()&lt;/code&gt;函数转换为&lt;code&gt;data.frame&lt;/code&gt;格式.如果在该函数中不提供data,则在后面添加的每一个图层,都需要提供data.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;mapping&lt;/strong&gt; 用于美学图层映射的参数.如果在这里不提供,则后面添加的每个图层,都需要提供.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;…&lt;/strong&gt; 其他可用于该函数的参数.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;environment&lt;/strong&gt; 该参数已经淘汰了.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;细节&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.2&lt;/span&gt; 细节&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ggplot()&lt;/code&gt;用来初始化ggplot2图形对象.经常后面需要通过&lt;code&gt;+&lt;/code&gt;来添加其他的对象.一般有三种方法调用该函数:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ggplot(df, aes(x, y, other aesthetics))&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ggplot(df)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ggplot2&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果后面的所有图层使用的都是同一套数据以及美学映射,则推荐使用第一种用法.如果后面图层使用数据一致,但是美学映射不同,则推荐使用第二种方法.如果每一个图层使用的数据和美学映射都不相同,则使用第三种方法,一般用来构建比较复杂的图形.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;例子&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.3&lt;/span&gt; 例子&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggplot2&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 产生随机数据,然后计算平均值和标准差
df &amp;lt;- data.frame(
  gp = factor(rep(letters[1:3], each = 10)),
  y = rnorm(30)
)
ds &amp;lt;- do.call(rbind, lapply(split(df, df$gp), function(d) {
  data.frame(mean = mean(d$y), sd = sd(d$y), gp = d$gp)
}))

ggplot(df, aes(gp, y)) +
  geom_point() +
  geom_point(data = ds, aes(y = mean), colour = &amp;#39;red&amp;#39;, size = 3)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#注意,第一个geom_point图层使用的是ggplot中的数据和美学映射.而第二个geom_point
#图层中使用的则是不同的数据和美学映射.

# 而下面这幅图,第一个geonm_point图层因为没有提供data,因此使用的是ggplot()中的data,
#而美学映射则是自己定义的.

ggplot(df) +
  geom_point(aes(gp, y)) +
  geom_point(data = ds, aes(gp, mean), colour = &amp;#39;red&amp;#39;, size = 3)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-1-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 另外一个选择则是完全不在ggplot中定义数据和美学映射,而是在每一个图层中分别定义.
# 当你要画复杂图形的时候,这种方法就会显示的非常清晰和明了.
ggplot() +
  geom_point(data = df, aes(gp, y)) +
  geom_point(data = ds, aes(gp, mean), colour = &amp;#39;red&amp;#39;, size = 3) +
  geom_errorbar(
    data = ds,
    aes(gp, mean, ymin = mean - sd, ymax = mean + sd),
    colour = &amp;#39;red&amp;#39;,
    width = 0.4
  )&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Ignoring unknown aesthetics: y&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-1-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;aes-创建美学映射&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2&lt;/span&gt; &lt;code&gt;aes()&lt;/code&gt; 创建美学映射&lt;/h2&gt;
&lt;p&gt;美学映射指的是数据中的变量如何映射到图形的视觉特性上(也就是美学aesthetics).美学映射可以在&lt;code&gt;ggplot()&lt;/code&gt;函数以及每一个单独的图层中进行设置.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;aes(x, y, ...)&lt;/code&gt;&lt;/p&gt;
&lt;div id=&#34;参数-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2.1&lt;/span&gt; 参数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;x, y, …&lt;/strong&gt; 将变量映射到图形的视觉特性的名字.x和y分别指x轴和y轴.通常他们可以省略不写.但是其他的,如颜色(colour/color),填充颜色(fill),大小(size)等则必须写明参数名字.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;细节-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2.2&lt;/span&gt; 细节&lt;/h3&gt;
&lt;p&gt;注意的是,在ggplot2种,对于视觉特征的名字进行了规范化,因此和R base绘图函数种的并不相同,比如从&lt;code&gt;pch&lt;/code&gt;改为&lt;code&gt;shape&lt;/code&gt;,从&lt;code&gt;cex&lt;/code&gt;改为&lt;code&gt;size&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;例子-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2.3&lt;/span&gt; 例子&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;aes(x = mpg, y = wt)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Aesthetic mapping: 
## * `x` -&amp;gt; `mpg`
## * `y` -&amp;gt; `wt`&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#&amp;gt; Aesthetic mapping: 
#&amp;gt; * `x` -&amp;gt; `mpg`
#&amp;gt; * `y` -&amp;gt; `wt`
aes(mpg, wt)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Aesthetic mapping: 
## * `x` -&amp;gt; `mpg`
## * `y` -&amp;gt; `wt`&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#&amp;gt; Aesthetic mapping: 
#&amp;gt; * `x` -&amp;gt; `mpg`
#&amp;gt; * `y` -&amp;gt; `wt`

# You can also map aesthetics to functions of variables
aes(x = mpg ^ 2, y = wt / cyl)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Aesthetic mapping: 
## * `x` -&amp;gt; `mpg^2`
## * `y` -&amp;gt; `wt/cyl`&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#&amp;gt; Aesthetic mapping: 
#&amp;gt; * `x` -&amp;gt; `mpg^2`
#&amp;gt; * `y` -&amp;gt; `wt/cyl`

# Or to constants
aes(x = 1, colour = &amp;quot;smooth&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Aesthetic mapping: 
## * `x`      -&amp;gt; 1
## * `colour` -&amp;gt; &amp;quot;smooth&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#&amp;gt; Aesthetic mapping: 
#&amp;gt; * `x`      -&amp;gt; 1
#&amp;gt; * `colour` -&amp;gt; &amp;quot;smooth&amp;quot;

# Aesthetic names are automatically standardised
aes(col = x)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Aesthetic mapping: 
## * `colour` -&amp;gt; `x`&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#&amp;gt; Aesthetic mapping: 
#&amp;gt; * `colour` -&amp;gt; `x`
aes(fg = x)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Aesthetic mapping: 
## * `colour` -&amp;gt; `x`&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#&amp;gt; Aesthetic mapping: 
#&amp;gt; * `colour` -&amp;gt; `x`
aes(color = x)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Aesthetic mapping: 
## * `colour` -&amp;gt; `x`&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#&amp;gt; Aesthetic mapping: 
#&amp;gt; * `colour` -&amp;gt; `x`
aes(colour = x)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Aesthetic mapping: 
## * `colour` -&amp;gt; `x`&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#&amp;gt; Aesthetic mapping: 
#&amp;gt; * `colour` -&amp;gt; `x`

# aes() is passed to either ggplot() or specific layer. Aesthetics supplied
# to ggplot() are used as defaults for every layer.
ggplot(mpg, aes(displ, hwy)) + geom_point()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mpg) + geom_point(aes(displ, hwy))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-2-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Tidy evaluation ----------------------------------------------------
# aes() automatically quotes all its arguments, so you need to use tidy
# evaluation to create wrappers around ggplot2 pipelines. The
# simplest case occurs when your wrapper takes dots:
scatter_by &amp;lt;- function(data, ...) {
  ggplot(data) + geom_point(aes(...))
}
scatter_by(mtcars, disp, drat)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-2-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# If your wrapper has a more specific interface with named arguments,
# you need &amp;quot;enquote and unquote&amp;quot;:
scatter_by &amp;lt;- function(data, x, y) {
  x &amp;lt;- enquo(x)
  y &amp;lt;- enquo(y)

  ggplot(data) + geom_point(aes(!!x, !!y))
}
scatter_by(mtcars, disp, drat)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-2-4.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Note that users of your wrapper can use their own functions in the
# quoted expressions and all will resolve as it should!
cut3 &amp;lt;- function(x) cut_number(x, 3)
scatter_by(mtcars, cut3(disp), drat)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-2-5.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;ggsave保存ggplot2图片对象&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.3&lt;/span&gt; &lt;code&gt;ggsave()&lt;/code&gt;保存&lt;code&gt;ggplot2&lt;/code&gt;图片对象&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;ggsave()&lt;/code&gt;默认会保存当前最后一幅&lt;code&gt;ggplot2&lt;/code&gt;图片.如果不设置尺寸,则使用当前设备尺寸.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggsave(filename, plot = last_plot(), device = NULL, path = NULL,
  scale = 1, width = NA, height = NA, units = c(&amp;quot;in&amp;quot;, &amp;quot;cm&amp;quot;, &amp;quot;mm&amp;quot;),
  dpi = 300, limitsize = TRUE, ...)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;参数-2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.3.1&lt;/span&gt; 参数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;filename&lt;/strong&gt; 要保存的图片的名字,注意不包括后缀名.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;plot&lt;/strong&gt; 要保存的&lt;code&gt;ggplot2&lt;/code&gt;图片.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;device&lt;/strong&gt; 要保存的图片的类型.包括以下:“eps”, “ps”, “tex” (pictex), “pdf”, “jpeg”, “tiff”, “png”, “bmp”, “svg” or “wmf” (windows only).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;path&lt;/strong&gt; 图片所要保存的路径.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;scale&lt;/strong&gt; Multiplicative scaling factor.暂时不知道什么意思?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;width, height, units&lt;/strong&gt; 要保存图片的宽和高,以及其单位.单位包括:“in”(英寸), “cm”, or “mm”.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;dpi&lt;/strong&gt; 图片分辨率.一般是数字.也可以使用文字符:“retina” (320), “print” (300), or “screen” (72).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;limitsize&lt;/strong&gt; 如果设置为TRUE,则&lt;code&gt;ggsave&lt;/code&gt;不会保存尺寸大于50×50 inch的图片.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;…&lt;/strong&gt; 其他可以用于图形设备(graphics device function)的参数.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;图层layer几何对象geoms&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; 图层(Layer):几何对象(geoms)&lt;/h1&gt;
&lt;p&gt;一个图层包括了数据(data),美学映射(aesthetic mapping),几何对象(geometric object),统计转换(statistical transformation),以及位置调整(position adjustment).一般来说,应该使用&lt;code&gt;geom_xxx()&lt;/code&gt;函数来创建图层.必要情况下,需要手动设置去覆盖默认的位置和统计转换.&lt;/p&gt;
&lt;div id=&#34;直线geom_ablinegeom_hline和geom_vline&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.1&lt;/span&gt; 直线&lt;code&gt;geom_abline&lt;/code&gt;,&lt;code&gt;geom_hline&lt;/code&gt;和&lt;code&gt;geom_vline&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;这三个函数(几何对象)分别用来画对角线,水平和垂直直线.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;geom_abline(mapping = NULL, data = NULL, ..., slope, intercept,
  na.rm = FALSE, show.legend = NA)

geom_hline(mapping = NULL, data = NULL, ..., yintercept,
  na.rm = FALSE, show.legend = NA)

geom_vline(mapping = NULL, data = NULL, ..., xintercept,
  na.rm = FALSE, show.legend = NA)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;参数-3&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.1.1&lt;/span&gt; 参数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;mapping&lt;/strong&gt; 美学映射,使用&lt;code&gt;aes()&lt;/code&gt;函数设置.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;data&lt;/strong&gt; 用于创建该图层的数据.有三种选择: 1)如果设置为&lt;code&gt;NULL&lt;/code&gt;,也是默认设置.则该数据继承自&lt;code&gt;ggplot()&lt;/code&gt;函数中的数据.2)一个&lt;code&gt;data.frame&lt;/code&gt;,或者其他的对象,如&lt;code&gt;tibble&lt;/code&gt;,这将会覆盖&lt;code&gt;ggplot()&lt;/code&gt;中的数据.3)也可以是一个&lt;code&gt;function()&lt;/code&gt;,但是该function最后返回的对象应该是&lt;code&gt;data.frame&lt;/code&gt;.&lt;code&gt;function&lt;/code&gt;可以使用&lt;code&gt;formula&lt;/code&gt;格式进行创建,如:&lt;code&gt;head(.x, 10)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;…&lt;/strong&gt; 其他的可以传入&lt;code&gt;layer()&lt;/code&gt;的参数.一般是美学对象,如&lt;code&gt;colour = &#34;red&#34;&lt;/code&gt;或者&lt;code&gt;size = 3&lt;/code&gt;.也可以是一些一些能够传入到和&lt;code&gt;geom_&lt;/code&gt;配对的geom/stat的参数.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;na.rm&lt;/strong&gt; 默认为&lt;code&gt;FALSE&lt;/code&gt;, missing value会被去除掉,但是会给出&lt;code&gt;warning&lt;/code&gt;,如果设置为&lt;code&gt;TRUE&lt;/code&gt;,missing value也会被去除掉,但是不会给&lt;code&gt;warning&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;show.legend&lt;/strong&gt; 该图层是否要显示在legend上.默认为&lt;code&gt;NA&lt;/code&gt;,则该图层中所有的映射到图形属性的变量都会显示在legend中.&lt;code&gt;FALSE&lt;/code&gt;则永远不显示,&lt;code&gt;TRUE&lt;/code&gt;则永远显示.如果该图形有多个变量映射到不同的图形属性,则可以将其设置为一个vector,分别控制不同的变量是否显示.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;xintercept/yintercept/slope/intercept&lt;/strong&gt; 控制直线的位置参数.如果这些设置了,则&lt;code&gt;data&lt;/code&gt;,&lt;code&gt;mapping&lt;/code&gt;和&lt;code&gt;show.legend&lt;/code&gt;则会被覆盖掉.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;细节-2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.1.2&lt;/span&gt; 细节&lt;/h3&gt;
&lt;p&gt;这些几何对象和其他的几何对象稍微有些不同.可以通过两种方法提供参数:1)给layer函数提供参数,或者2)通过美学对象提供参数.如果你使用参数,例如&lt;code&gt;geom_abline(intercept = 0, slope = 1)&lt;/code&gt;,然后几何对象(&lt;code&gt;geom_&lt;/code&gt;)会创建一个新的data frame,这个data rame只包括了你所提供的数据.这意味着在所有的分面中,直线都是相同的.如果你想在不同的分面中,直线不相同,你需要自己创建一个data frame,然后再美学映射(aesthetics)中设置.&lt;/p&gt;
&lt;p&gt;与其他的几何对象不同,这些几何对象不会从&lt;code&gt;ggplot&lt;/code&gt;中继承data.他们也不会影响到x和y的scale.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;美学映射aesthetics&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.1.3&lt;/span&gt; 美学映射(Aesthetics)&lt;/h3&gt;
&lt;p&gt;这三个几何对象(geom)其实都是使用&lt;code&gt;geom_line()&lt;/code&gt;函数来画直线的,因此他们都支持&lt;code&gt;geom_line()&lt;/code&gt;的美学参数,如&lt;code&gt;alpha&lt;/code&gt;,&lt;code&gt;colour&lt;/code&gt;,&lt;code&gt;linetype&lt;/code&gt;和&lt;code&gt;size&lt;/code&gt;.对于每个几何对象都有,都有单独的参数用来控制直线的位置:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;geom_vline&lt;/code&gt;:&lt;code&gt;xintercept&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;geom_hline&lt;/code&gt;:&lt;code&gt;yintercept&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;geom_vline&lt;/code&gt;:&lt;code&gt;slope&lt;/code&gt;(斜率)和&lt;code&gt;intercept&lt;/code&gt;(截距).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;例子-2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.1.4&lt;/span&gt; 例子&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
p &amp;lt;- 
  ggplot(mtcars, aes(wt, mpg)) + 
  geom_point()

# 添加垂直直线
p + 
  geom_vline(xintercept = 5)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p + 
  geom_vline(xintercept = 1:5)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-3-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 添加水平直线
p + 
  geom_hline(yintercept = 20)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-3-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 添加对角线,默认斜率为1
p + 
  geom_abline(intercept = 20)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-3-4.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 计算直线回归的斜率和截距
coef(lm(mpg ~ wt, data = mtcars))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## (Intercept)          wt 
##   37.285126   -5.344472&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p + 
  geom_abline(intercept = 37, slope = -5)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-3-5.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 但是使用geom_smooth更加简单h:
p + 
  geom_smooth(method = &amp;quot;lm&amp;quot;, se = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-3-6.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 如果想要再不同分面显示不同的直线,则使用美学对象,也就是需要自己创建
p &amp;lt;- ggplot(mtcars, aes(mpg, wt)) +
  geom_point() +
  facet_wrap(~ cyl)

mean_wt &amp;lt;- 
  data.frame(cyl = c(4, 6, 8), wt = c(2.28, 3.11, 4.00))
mean_wt&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   cyl   wt
## 1   4 2.28
## 2   6 3.11
## 3   8 4.00&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p + 
  geom_hline(mapping = aes(x = cyl, yintercept = wt), 
             data = mean_wt)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Ignoring unknown aesthetics: x&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-3-7.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##如果不使用美学对象,则在每一个分面上都是一样的
p +
  geom_hline(yintercept = mean_wt$wt)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-3-8.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 控制其他美学对象
ggplot(mtcars, aes(mpg, wt, colour = wt)) +
  geom_point() +
  geom_hline(aes(yintercept = wt, colour = wt), mean_wt) +
  facet_wrap(~ cyl)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-3-9.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;柱形图bar-chartsgeom_bargeom_col和stat_count&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.2&lt;/span&gt; 柱形图(bar charts)&lt;code&gt;geom_bar()&lt;/code&gt;,&lt;code&gt;geom_col()&lt;/code&gt;和&lt;code&gt;stat_count&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;一共有两种类型的函数用来绘制柱形图:&lt;code&gt;geom_bar()&lt;/code&gt;和&lt;code&gt;geom_col()&lt;/code&gt;函数.&lt;code&gt;geom_bar()&lt;/code&gt;配对的统计转换函数为&lt;code&gt;stat_count()&lt;/code&gt;函数,所以他会自动将每个group的case个数计算出来,然后转为新的data frame,也就是group和数目,然后映射到x和y轴上.而&lt;code&gt;geom_bar()&lt;/code&gt;则和R base的bar plot函数相似(默认配对统计转换函数为&lt;code&gt;stat_identify()&lt;/code&gt;函数),需要指定x和y轴变量,然后直接将指定的y轴变量映射为bar的高度.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;geom_bar(mapping = NULL, data = NULL, stat = &amp;quot;count&amp;quot;,
  position = &amp;quot;stack&amp;quot;, ..., width = NULL, binwidth = NULL,
  na.rm = FALSE, show.legend = NA, inherit.aes = TRUE)

geom_col(mapping = NULL, data = NULL, position = &amp;quot;stack&amp;quot;, ...,
  width = NULL, na.rm = FALSE, show.legend = NA,
  inherit.aes = TRUE)

stat_count(mapping = NULL, data = NULL, geom = &amp;quot;bar&amp;quot;,
  position = &amp;quot;stack&amp;quot;, ..., width = NULL, na.rm = FALSE,
  show.legend = NA, inherit.aes = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;参数-4&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.2.1&lt;/span&gt; 参数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;mapping&lt;/strong&gt; 美学映射,使用&lt;code&gt;aes()&lt;/code&gt;函数设置.如果设置参数&lt;code&gt;inherit.aes = TRUE&lt;/code&gt;(默认),则该图层会从&lt;code&gt;ggplot()&lt;/code&gt;函数继承美学映射的参数.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;data&lt;/strong&gt; 用于创建该图层的数据.有三种选择: 1)如果设置为&lt;code&gt;NULL&lt;/code&gt;,也是默认设置.则该数据继承自&lt;code&gt;ggplot()&lt;/code&gt;函数中的数据.2)一个&lt;code&gt;data.frame&lt;/code&gt;,或者其他的对象,如&lt;code&gt;tibble&lt;/code&gt;,这将会覆盖&lt;code&gt;ggplot()&lt;/code&gt;中的数据.3)也可以是一个&lt;code&gt;function()&lt;/code&gt;,但是该function最后返回的对象应该是&lt;code&gt;data.frame&lt;/code&gt;.&lt;code&gt;function&lt;/code&gt;可以使用&lt;code&gt;formula&lt;/code&gt;格式进行创建,如:&lt;code&gt;head(.x, 10)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;position&lt;/strong&gt; 位置调整(position adjustment).可以是字符,也可以是使用位置调整参数返回的对象.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;…&lt;/strong&gt; 其他的可以传入&lt;code&gt;layer()&lt;/code&gt;的参数.一般是美学对象,如&lt;code&gt;colour = &#34;red&#34;&lt;/code&gt;或者&lt;code&gt;size = 3&lt;/code&gt;.也可以是一些一些能够传入到和&lt;code&gt;geom_&lt;/code&gt;配对的geom/stat的参数.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;width&lt;/strong&gt; 柱形图的宽度. 默认设置为数据“分辨率”的90%(0.9).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;na.rm&lt;/strong&gt; 默认为&lt;code&gt;FALSE&lt;/code&gt;, missing value会被去除掉,但是会给出&lt;code&gt;warning&lt;/code&gt;,如果设置为&lt;code&gt;TRUE&lt;/code&gt;,missing value也会被去除掉,但是不会给&lt;code&gt;warning&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;show.legend&lt;/strong&gt; 该图层是否要显示在legend上.默认为&lt;code&gt;NA&lt;/code&gt;,则该图层中所有的映射到图形属性的变量都会显示在legend中.&lt;code&gt;FALSE&lt;/code&gt;则永远不显示,&lt;code&gt;TRUE&lt;/code&gt;则永远显示.如果该图形有多个变量映射到不同的图形属性,则可以将其设置为一个vector,分别控制不同的变量是否显示.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;inherit.aes&lt;/strong&gt; 如果设置为&lt;code&gt;FALSE&lt;/code&gt;,覆盖掉而不是结合默认美学参数. This is most useful for helper functions that define both data and aesthetics and shouldn’t inherit behaviour from the default plot specification, e.g. borders().不太明白这个意思?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;geom, stat&lt;/strong&gt; 覆盖掉默认的&lt;code&gt;geom_()&lt;/code&gt;和&lt;code&gt;stat_()&lt;/code&gt;函数.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;细节-3&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.2.2&lt;/span&gt; 细节&lt;/h3&gt;
&lt;p&gt;柱形图使用高度来表示数值.所以一般柱形图是用来进行对比展示的.这也是为什么如果你将数据log之后,使用柱形图就不太合适.&lt;/p&gt;
&lt;p&gt;默认,对于同个x轴位置有着多个柱子,则他们会堆积在一起.也就输堆积柱形图,这是由默认的位置调整函数&lt;code&gt;position_stack()&lt;/code&gt;实现的.如果你想要让他们并排排列,则需要使用&lt;code&gt;position_dodge()&lt;/code&gt;或者&lt;code&gt;position_dodge2()&lt;/code&gt;函数.当然,如果你想要堆叠柱形图,而显示的是比例而不是真实数值,则需要使用&lt;code&gt;position_fill()&lt;/code&gt;函数.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;美学参数aesthetics&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.2.3&lt;/span&gt; 美学参数(Aesthetics)&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;geom_bar()&lt;/code&gt;可以接受以下美学参数(粗体为必须参数).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;x&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;y&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;alpha&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;colour&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;fill&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;group&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;linetype&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;size&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;geom_col()&lt;/code&gt;可以接受以下美学参数(粗体为必须参数).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;x&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;y&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;alpha&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;colour&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;fill&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;group&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;linetype&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;size&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;stat_count()&lt;/code&gt;可以接受以下美学参数(粗体为必须参数).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;x&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;y&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;group&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;weight&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;计算变量-computed-variables&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.2.4&lt;/span&gt; 计算变量 (Computed variables)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;count&lt;/strong&gt; 每一个grou中的数目&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;prop&lt;/strong&gt; 每组的比例&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;例子-3&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.2.5&lt;/span&gt; 例子&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
## 首先创建一个ggplot2对象
g &amp;lt;- ggplot(mpg, aes(class))
# 然后使用geom_bar来展示每个class的case的数目
g + geom_bar()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 可以通过设置weight参数,将每个柱子的高度改为该变量的和
g + geom_bar(aes(weight = displ))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-4-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 当每一个柱子又可以分为不同的group时,默认是堆积在一起的.
g + geom_bar(aes(fill = drv))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-4-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 如果想要翻转类别的顺序,可以在position参数中设置
g +
 geom_bar(aes(fill = drv), 
          position = position_stack(reverse = TRUE)) +
 coord_flip() +
 theme(legend.position = &amp;quot;top&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-4-4.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 如果只是想要柱子高度显示某个变量的值,使用geom_col函数
df &amp;lt;- data.frame(trt = c(&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot;), outcome = c(2.3, 1.9, 3.2))
ggplot(df, aes(trt, outcome)) +
  geom_col()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-4-5.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 当然,geom_bar函数也可以用来显示连续性的变量
df &amp;lt;- data.frame(x = rep(c(2.9, 3.1, 4.5), c(5, 10, 4)))
ggplot(df, aes(x)) + geom_bar()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-4-6.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# cf. a histogram of the same data
ggplot(df, aes(x)) + geom_histogram(binwidth = 0.5)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-4-7.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;二维方格计数热图heatmap-of-2d-bin-countsgeom_bin2d和stat_bin_2d&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.3&lt;/span&gt; 二维方格计数热图(Heatmap of 2d bin counts)&lt;code&gt;geom_bin2d()&lt;/code&gt;和&lt;code&gt;stat_bin_2d()&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;将平面划分为放个,然后计算每个方格中case的数目,然后将小方格内的case的数目映射到小方格的填充颜色上(默认).这种作图方法与&lt;code&gt;geom_point()&lt;/code&gt;相比,好处是可以有效的避免重叠.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;geom_bin2d(mapping = NULL, data = NULL, stat = &amp;quot;bin2d&amp;quot;,
  position = &amp;quot;identity&amp;quot;, ..., na.rm = FALSE, show.legend = NA,
  inherit.aes = TRUE)

stat_bin_2d(mapping = NULL, data = NULL, geom = &amp;quot;tile&amp;quot;,
  position = &amp;quot;identity&amp;quot;, ..., bins = 30, binwidth = NULL,
  drop = TRUE, na.rm = FALSE, show.legend = NA, inherit.aes = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;参数-5&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.3.1&lt;/span&gt; 参数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;mapping&lt;/strong&gt; 美学映射参数,使用&lt;code&gt;aes()&lt;/code&gt;建立.如果在该图层进行设置,并且&lt;code&gt;inherit.aes = TRUE&lt;/code&gt;(默认), it is combined with the default mapping at the top level of the plot. You must supply mapping if there is no plot mapping?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;data&lt;/strong&gt; 用于创建该图层的数据.有三种选择: 1)如果设置为&lt;code&gt;NULL&lt;/code&gt;,也是默认设置.则该数据继承自&lt;code&gt;ggplot()&lt;/code&gt;函数中的数据.2)一个&lt;code&gt;data.frame&lt;/code&gt;,或者其他的对象,如&lt;code&gt;tibble&lt;/code&gt;,这将会覆盖&lt;code&gt;ggplot()&lt;/code&gt;中的数据.3)也可以是一个&lt;code&gt;function()&lt;/code&gt;,但是该function最后返回的对象应该是&lt;code&gt;data.frame&lt;/code&gt;.&lt;code&gt;function&lt;/code&gt;可以使用&lt;code&gt;formula&lt;/code&gt;格式进行创建,如:&lt;code&gt;head(.x, 10)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;position&lt;/strong&gt; 位置调整(position adjustment).可以是字符,也可以是使用位置调整参数返回的对象.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;…&lt;/strong&gt; 其他的可以传入&lt;code&gt;layer()&lt;/code&gt;的参数.一般是美学对象,如&lt;code&gt;colour = &#34;red&#34;&lt;/code&gt;或者&lt;code&gt;size = 3&lt;/code&gt;.也可以是一些一些能够传入到和&lt;code&gt;geom_&lt;/code&gt;配对的geom/stat的参数.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;na.rm&lt;/strong&gt; 默认为&lt;code&gt;FALSE&lt;/code&gt;, missing value会被去除掉,但是会给出&lt;code&gt;warning&lt;/code&gt;,如果设置为&lt;code&gt;TRUE&lt;/code&gt;,missing value也会被去除掉,但是不会给&lt;code&gt;warning&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;show.legend&lt;/strong&gt; 该图层是否要显示在legend上.默认为&lt;code&gt;NA&lt;/code&gt;,则该图层中所有的映射到图形属性的变量都会显示在legend中.&lt;code&gt;FALSE&lt;/code&gt;则永远不显示,&lt;code&gt;TRUE&lt;/code&gt;则永远显示.如果该图形有多个变量映射到不同的图形属性,则可以将其设置为一个vector,分别控制不同的变量是否显示.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;inherit.aes&lt;/strong&gt; 如果设置为&lt;code&gt;FALSE&lt;/code&gt;,覆盖掉而不是结合默认美学参数. This is most useful for helper functions that define both data and aesthetics and shouldn’t inherit behaviour from the default plot specification, e.g. borders().不太明白这个意思?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;geom, stat&lt;/strong&gt; 覆盖掉默认的&lt;code&gt;geom_()&lt;/code&gt;和&lt;code&gt;stat_()&lt;/code&gt;函数.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;bins&lt;/strong&gt; 数值型的向量,用来分别设置垂直和水平方向上的bin的数目,默认都是30.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;binwidth&lt;/strong&gt; 数值型向量,用于设置在垂直和水平方向上的bin的宽度.如果该参数设置,则会覆盖掉bins参数.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;drop&lt;/strong&gt; 如果设置为&lt;code&gt;TRUE&lt;/code&gt;,则会去除掉count为0的方格.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;美学参数asethetics&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.3.2&lt;/span&gt; 美学参数(Asethetics)&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;stat_bind2d()&lt;/code&gt;接受以下美学参数(黑体为必须参数):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;x&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;y&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;fill&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;*group&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;计算变量computed-variables&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.3.3&lt;/span&gt; 计算变量(Computed variables)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;count&lt;/strong&gt; bin中的数据点的个数.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;density&lt;/strong&gt; bin中数据点的密度(density),整体数据点数目为1,所有其他bin内数据点数目与之scale.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ncount&lt;/strong&gt; count, scaled to maximum of 1?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ndensity&lt;/strong&gt; density, scaled to maximum of 1&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;例子-4&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.3.4&lt;/span&gt; 例子&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
d &amp;lt;- ggplot(diamonds, aes(x, y)) + 
  xlim(4, 10) + 
  ylim(4, 10)
d + geom_bin2d()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Removed 478 rows containing non-finite values (stat_bin2d).&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;空白图geom_blank&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.4&lt;/span&gt; 空白图&lt;code&gt;geom_blank()&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;geom_blank()&lt;/code&gt;函数不绘制任何东西,但是可以用来绘制一个空的plot来保持一定的刻度.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;geom_blank(mapping = NULL, data = NULL, stat = &amp;quot;identity&amp;quot;,
  position = &amp;quot;identity&amp;quot;, ..., show.legend = NA, inherit.aes = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;参数-6&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.4.1&lt;/span&gt; 参数&lt;/h3&gt;
&lt;p&gt;所有参数可以参考上面所有的函数.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;例子-5&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.4.2&lt;/span&gt; 例子&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p &amp;lt;- 
  ggplot(mtcars, aes(wt, mpg))
p&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p + 
  geom_blank()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-6-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;箱型图boxplot或者whiskers-plotgeom_boxplot和stat_boxplot&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.5&lt;/span&gt; 箱型图(boxplot或者whiskers plot)&lt;code&gt;geom_boxplot()&lt;/code&gt;和&lt;code&gt;stat_boxplot()&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;箱型图用来展示连续性变量的分布.它可以展示5个统计量(中位值,two hinges and two whiskers), 以及所有的outlier值.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;geom_boxplot(mapping = NULL, data = NULL, stat = &amp;quot;boxplot&amp;quot;,
  position = &amp;quot;dodge2&amp;quot;, ..., outlier.colour = NULL,
  outlier.color = NULL, outlier.fill = NULL, outlier.shape = 19,
  outlier.size = 1.5, outlier.stroke = 0.5, outlier.alpha = NULL,
  notch = FALSE, notchwidth = 0.5, varwidth = FALSE, na.rm = FALSE,
  show.legend = NA, inherit.aes = TRUE)

stat_boxplot(mapping = NULL, data = NULL, geom = &amp;quot;boxplot&amp;quot;,
  position = &amp;quot;dodge2&amp;quot;, ..., coef = 1.5, na.rm = FALSE,
  show.legend = NA, inherit.aes = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;参数-7&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.5.1&lt;/span&gt; 参数&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;mapping&lt;/strong&gt;,&lt;strong&gt;data&lt;/strong&gt;,&lt;strong&gt;position&lt;/strong&gt;和&lt;strong&gt;…&lt;/strong&gt;参数可以参考前面的参数.都是一致的.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;outlier.colour&lt;/strong&gt;,&lt;strong&gt;outlier.fill&lt;/strong&gt;,&lt;strong&gt;outlier.shape&lt;/strong&gt;,&lt;strong&gt;outlier.size&lt;/strong&gt;,&lt;strong&gt;outlier.stroke&lt;/strong&gt;,&lt;strong&gt;outlier.alpha&lt;/strong&gt;:离群点的美学参数.如果想要隐藏outlier,则可以将&lt;strong&gt;outlier.shape&lt;/strong&gt;设置为NA.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;notch&lt;/strong&gt;:默认为&lt;code&gt;FALSE&lt;/code&gt;,一个标准的box plot,如果设置为&lt;code&gt;TRUE&lt;/code&gt;,则是一个有缺口的box plot.有缺口的box plot可以方便多组数据进行比较.因为缺口处就是中位值所在位置.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;notchwidth&lt;/strong&gt;:缺口box plot的缺口处的宽度和整体宽度的比值,默认为0.5.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;varwidth&lt;/strong&gt;:默认为&lt;code&gt;FALSE&lt;/code&gt;,一个标准的box plot.如果设置为&lt;code&gt;TRUE&lt;/code&gt;,则每组的box的宽度和该组的变量的个数的平方根成正比.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;coef&lt;/strong&gt;:默认为1.5.也就是上下边框扩展出的上下晶须的距离为1.5倍的IQR.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;统计总结&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.5.2&lt;/span&gt; 统计总结&lt;/h3&gt;
&lt;p&gt;box plot框的上下边界(hinge)分别代表第一和第三分位数.&lt;/p&gt;
&lt;p&gt;从框上边界扩展出的上晶须(whisker)的距离为1.5倍的IQR(IQR为inter quartile range,也就是第三分位数和第一份位数之差).从框下边界扩展出的下晶须(whisker)的距离为1.5倍的IQR.在上下晶须范围以外的,就是outlier.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;美学参数&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.5.3&lt;/span&gt; 美学参数&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;geom_boxplot()&lt;/code&gt;接收以下美学参数(黑体为必须参数):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;x&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;lower&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;upper&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;umiddle&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ymin&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;yax&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;alpha&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;colour&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;fill&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;group&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;linetype&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;shape&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;size&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;weight&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;计算变量&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.5.4&lt;/span&gt; 计算变量&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;width box plot宽度.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ymin:下晶须==下框边界-1.5*IQR&lt;/p&gt;
&lt;p&gt;lower:下框边界.默认为25% quantile.&lt;/p&gt;
&lt;p&gt;notchlower:对于有缺口box plot的下框边界.默认为median - 1.58 * IQR / sqrt(n)&lt;/p&gt;
&lt;p&gt;middle:中位值,默认为50%分位数.&lt;/p&gt;
&lt;p&gt;notchupper:对于有缺口box plot的上框边界.默认为median + 1.58 * IQR / sqrt(n)&lt;/p&gt;
&lt;p&gt;upper:上框边界,默认为75%分位数.&lt;/p&gt;
&lt;p&gt;ymax上晶须==上框边界+1.5*IQR&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;例子-6&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.5.5&lt;/span&gt; 例子&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
p &amp;lt;- ggplot(mpg, aes(class, hwy))

p +
    geom_boxplot()  &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 交换x轴和y轴
p + geom_boxplot() + 
  coord_flip()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-7-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 有缺口的box plot,注意此时上下晶须距离是有变化的.
p +
  geom_boxplot(notch = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## notch went outside hinges. Try setting notch=FALSE.
## notch went outside hinges. Try setting notch=FALSE.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-7-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# box宽度和每组数目n的平方根成正比
p + geom_boxplot(varwidth = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-7-4.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p + geom_boxplot(fill = &amp;quot;white&amp;quot;, colour = &amp;quot;#3366FF&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-7-5.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 设置outlier的美学参数
p + geom_boxplot(outlier.colour = &amp;quot;red&amp;quot;, outlier.shape = 1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-7-6.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 将点和boxplot画在一起,这时候需要把outlier去除掉,因为和原始点会有重叠
p + geom_boxplot(outlier.shape = NA) + 
  geom_jitter(width = 0.2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-7-7.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 如果每组的box plot再分类,则默认是并列排在一起的
p + geom_boxplot(aes(colour = drv))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-7-8.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# x轴不是分类数据,而是连续数据也是可以的.但是需要提供如何对x轴进行分类,比如通过
#cut_width函数将连续性变量进行分类
ggplot(diamonds, aes(x = carat, y = price)) +
  geom_boxplot()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Continuous x aesthetic -- did you forget aes(group=...)?&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-7-9.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(diamonds, aes(carat, price)) +
  geom_boxplot(aes(colour = cut_width(carat, 0.25)), show.legend = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-7-10.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(diamonds, aes(carat, price)) +
  geom_boxplot(aes(group = cut_width(carat, 0.25)), show.legend = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-7-11.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 如果你自己定义了boxplot的各个元素,也可以通过设置stat=`identify`来画boxplot
y &amp;lt;- rnorm(100)
df &amp;lt;- data.frame(
  x = 1,
  y0 = min(y),
  y25 = quantile(y, 0.25),
  y50 = median(y),
  y75 = quantile(y, 0.75),
  y100 = max(y)
)
ggplot(df, aes(x)) +
  geom_boxplot(
   aes(ymin = y0, lower = y25, middle = y50, upper = y75, ymax = y100),
   stat = &amp;quot;identity&amp;quot;
 )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-7-12.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;d表面的2d等高线contoursgeom_contour和stat_contour&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.6&lt;/span&gt; 3D表面的2D等高线(contours)&lt;code&gt;geom_contour()&lt;/code&gt;和&lt;code&gt;stat_contour()&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;ggplot2&lt;/code&gt;并不能画3D图形,但是可以使用&lt;code&gt;geom_contour()&lt;/code&gt;和&lt;code&gt;geom_tile()&lt;/code&gt;(tile是瓷砖的意思)画等高线. To be a valid surface, the data must contain only a single row for each unique combination of the variables mapped to the x and y aesthetics. Contouring tends to work best when x and y form a (roughly) evenly spaced grid. If your data is not evenly spaced, you may want to interpolate to a grid before visualising.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;geom_contour(mapping = NULL, data = NULL, stat = &amp;quot;contour&amp;quot;,
  position = &amp;quot;identity&amp;quot;, ..., lineend = &amp;quot;butt&amp;quot;, linejoin = &amp;quot;round&amp;quot;,
  linemitre = 10, na.rm = FALSE, show.legend = NA,
  inherit.aes = TRUE)

stat_contour(mapping = NULL, data = NULL, geom = &amp;quot;contour&amp;quot;,
  position = &amp;quot;identity&amp;quot;, ..., na.rm = FALSE, show.legend = NA,
  inherit.aes = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;参数-8&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.6.1&lt;/span&gt; 参数&lt;/h3&gt;
&lt;p&gt;很多参数跟前面是一样的.其他不同的见下:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;lineend&lt;/strong&gt; 线条末端的形式(round, butt, square)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;linejoin&lt;/strong&gt; 线条交界处的形式(round, butt, square)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;linemitre&lt;/strong&gt; Line mitre limit (number greater than 1).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;美学参数-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.6.2&lt;/span&gt; 美学参数&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;geom_contour()&lt;/code&gt;接受以下参数(黑体为必须参数):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;x&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;y&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;alpha&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;colour&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;group&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;linetype&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;size&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;weight&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;stat_contour()&lt;/code&gt;接受以下参数(黑体为必须参数):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;x&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;y&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;z&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;group&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;order&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;计算变量-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.6.3&lt;/span&gt; 计算变量&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;level:等高线的高度&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;nlevel:等高线的高度,最大值scale到1.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;piece:contour piece (整数).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;例子-7&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.6.4&lt;/span&gt; 例子&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 基础图形
library(ggplot2)
## 先看看数据
head(faithfuld)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 3
##   eruptions waiting density
##       &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;
## 1      1.6       43 0.00322
## 2      1.65      43 0.00384
## 3      1.69      43 0.00444
## 4      1.74      43 0.00498
## 5      1.79      43 0.00542
## 6      1.84      43 0.00574&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;v &amp;lt;- ggplot(faithfuld, aes(waiting, eruptions, z = density))
v + geom_contour()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 也可以通过设置参数bins,来确定有几个等高线.
v + geom_contour(bins = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-8-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;v + geom_contour(bins = 10)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-8-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 当然,也可以设置等高线之间的距离
v + geom_contour(binwidth = 0.01)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-8-4.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;v + geom_contour(binwidth = 0.001)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-8-5.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 其他的参数
##level就是stat_contour的其中一个计算变量,level.
v + geom_contour(aes(colour = ..level..))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-8-6.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##下面与上面相同.
v + geom_contour(aes(colour = stat(level)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-8-7.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;v + geom_contour(colour = &amp;quot;red&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-8-8.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# geom_rect用来画矩形

v + geom_raster(aes(fill = density)) +
  geom_contour(colour = &amp;quot;white&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-8-9.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;v + geom_raster(aes(fill = density)) +
  scale_fill_gradient(low = &amp;quot;white&amp;quot;, high = &amp;quot;red&amp;quot;) +
  geom_contour(colour = &amp;quot;white&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-8-10.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;常见问题总结&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;3&lt;/span&gt; 常见问题总结&lt;/h1&gt;
&lt;div id=&#34;如何保证不同图中legend的scale一致&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.1&lt;/span&gt; 如何保证不同图中legend的scale一致&lt;/h2&gt;
&lt;p&gt;比如两个图中,我们想保证legend对应的size的粗细是和数据一致的.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tidyverse&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tibble&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tidyr&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;dplyr&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;  data.frame(x = 1:5, y = 1:5) %&amp;gt;% 
  ggplot() +
  geom_point(aes(x = x, y = y, size = x))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;scale_size_...()&lt;/code&gt;函数来进行设置.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;  data.frame(x = 1:5, y = 1:5) %&amp;gt;% 
  ggplot() +
  geom_point(aes(x = x, y = y, size = x)) +
  scale_size_continuous(limits = c(1,5), range = c(1,5))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data.frame(x = 1:5, y = 1:5) %&amp;gt;% 
  ggplot() +
  geom_point(aes(x = x, y = y, size = x)) +
  scale_size_continuous(limits = c(1,5), range = c(5,6))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-10-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;其中参数&lt;code&gt;limits&lt;/code&gt;是一个两个的数值vector,用来设置是指的最小和最大值.而参数&lt;code&gt;range&lt;/code&gt;也是一个两个数值的vector,用来设置point的size的最小值和最大值.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R data visulization cookbook</title>
      <link>/post/r-data-visulization-cookbook/</link>
      <pubDate>Fri, 25 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/r-data-visulization-cookbook/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#ggplot2中如何反转坐标轴&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.1&lt;/span&gt; &lt;code&gt;ggplot2&lt;/code&gt;中如何反转坐标轴?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ggplot2中如何修改绘图区域的边界&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.2&lt;/span&gt; &lt;code&gt;ggplot2&lt;/code&gt;中如何修改绘图区域的边界?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#如何获得合适的配色组合&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.3&lt;/span&gt; 如何获得合适的配色组合?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ggplot2中如何反转坐标轴-1&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.4&lt;/span&gt; &lt;code&gt;ggplot2&lt;/code&gt;中如何反转坐标轴?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;ggplot2中如何反转坐标轴&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1&lt;/span&gt; &lt;code&gt;ggplot2&lt;/code&gt;中如何反转坐标轴?&lt;/h3&gt;
&lt;p&gt;使用&lt;code&gt;scale_x_reverse()/scale_y_reverse()&lt;/code&gt;函数.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggplot2&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(magrittr)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;magrittr&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p &amp;lt;- 
mtcars %&amp;gt;% 
  ggplot(aes(mpg, disp)) +
  geom_point() 
p&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-r-data-visulization-cookbook/index_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##反转X坐标轴
p + 
  scale_x_reverse()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-r-data-visulization-cookbook/index_files/figure-html/unnamed-chunk-1-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 反转y坐标轴
p + 
  scale_y_reverse()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-r-data-visulization-cookbook/index_files/figure-html/unnamed-chunk-1-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ggplot2中如何修改绘图区域的边界&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.2&lt;/span&gt; &lt;code&gt;ggplot2&lt;/code&gt;中如何修改绘图区域的边界?&lt;/h3&gt;
&lt;p&gt;在&lt;code&gt;theme()&lt;/code&gt;函数中设置&lt;code&gt;plot.margin&lt;/code&gt;参数,且该参数应该是一个&lt;code&gt;margin()&lt;/code&gt;函数构建的对象.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
library(magrittr)
p &amp;lt;- 
mtcars %&amp;gt;% 
  ggplot(aes(mpg, disp)) +
  geom_point(size = 2, colour = &amp;quot;skyblue&amp;quot;) +
  theme_bw() +
  theme(plot.margin = margin(t = 0, r = 0, b = 0, l = 0, unit = &amp;quot;pt&amp;quot;))
p&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-r-data-visulization-cookbook/index_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;如何获得合适的配色组合&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.3&lt;/span&gt; 如何获得合适的配色组合?&lt;/h3&gt;
&lt;p&gt;比较常见的配色工具包括&lt;code&gt;ggsci&lt;/code&gt;,&lt;code&gt;RColorBrewer&lt;/code&gt;等.且可以使用&lt;code&gt;scales&lt;/code&gt;包中的&lt;code&gt;show_col()&lt;/code&gt;函数来展示颜色.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggsci)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggsci&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(scales)

test_colour &amp;lt;- 
  ggsci::pal_jama()(7)

show_col(test_colour)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-r-data-visulization-cookbook/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;test_colour &amp;lt;- 
  ggsci::pal_jama(alpha = 0.5)(7)

show_col(test_colour)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-r-data-visulization-cookbook/index_files/figure-html/unnamed-chunk-3-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;另外,&lt;code&gt;RColorBrewer&lt;/code&gt;包也非常方便.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(RColorBrewer)
##显示所有的配色
RColorBrewer::display.brewer.all()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-r-data-visulization-cookbook/index_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##可以扩大弄每一种配色左边都有该配色的名字,因此如果想要单独显示该配色,直接使用下列命令.
RColorBrewer::display.brewer.pal(n = 9, name = &amp;quot;Set1&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-r-data-visulization-cookbook/index_files/figure-html/unnamed-chunk-4-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##两个参数分别用来设置需要显示的颜色的个数以及配色的名字.
#如果需要将该配色名字提出来,使用下面命令
RColorBrewer::brewer.pal(n = 9, name = &amp;quot;Set1&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;#E41A1C&amp;quot; &amp;quot;#377EB8&amp;quot; &amp;quot;#4DAF4A&amp;quot; &amp;quot;#984EA3&amp;quot; &amp;quot;#FF7F00&amp;quot; &amp;quot;#FFFF33&amp;quot; &amp;quot;#A65628&amp;quot;
## [8] &amp;quot;#F781BF&amp;quot; &amp;quot;#999999&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;ggplot2中如何反转坐标轴-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.4&lt;/span&gt; &lt;code&gt;ggplot2&lt;/code&gt;中如何反转坐标轴?&lt;/h3&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>快速回到R project所在的工作目录</title>
      <link>/post/r-project-work-directory/</link>
      <pubDate>Fri, 25 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/r-project-work-directory/</guid>
      <description>


&lt;p&gt;&lt;code&gt;Rstudio&lt;/code&gt;的&lt;code&gt;Rproject&lt;/code&gt;可以用来方便的管理自己的某个项目的所有代码,文件等等.另外的一个好处是打开该项目文件之后,路径自动设置为该project所在的工作目录,因此在该项目下可以通过相对路径来设置后续分析文件所在的工作目录.从未方便代码的移植和分享.&lt;/p&gt;
&lt;p&gt;但是如何快速回到自己&lt;code&gt;Rproject&lt;/code&gt;所在的目录呢?比如在某个项目中,我的&lt;code&gt;Rproject&lt;/code&gt;所在目录为&lt;code&gt;A&lt;/code&gt;,而我的某个数据分析的文件在路径&lt;code&gt;A/B/C&lt;/code&gt;,当我通过相对路径设置在该目录下,另外一个分析所在的目录为&lt;code&gt;A/E/F&lt;/code&gt;,这时候我就需要先将路径设置到&lt;code&gt;A&lt;/code&gt;,然后才可以再通过设置相对路径将目录修改为&lt;code&gt;A/E/F&lt;/code&gt;.所以可以看到,需要经常将目录设置为&lt;code&gt;Rproject&lt;/code&gt;所在的根目录.因此,写了一个小的函数,可以用来快速的目录切换为&lt;code&gt;Rproject&lt;/code&gt;所在目录.&lt;/p&gt;
&lt;p&gt;代码如下:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;setwd_project &amp;lt;- function() {
  currect_wd &amp;lt;-
    getwd()

  candidate_wd &amp;lt;-
    currect_wd %&amp;gt;%
    stringr::str_split(&amp;quot;/&amp;quot;) %&amp;gt;%
    unlist()

  if (length(candidate_wd) == 1) {
    candidate_wd &amp;lt;- currect_wd
  } else{
    candidate_wd &amp;lt;-
      lapply(2:length(candidate_wd), function(i) {
        paste(candidate_wd[1:i], collapse = &amp;quot;/&amp;quot;)
      })
  }

  candidate_wd &amp;lt;-
    rev(candidate_wd)

  for (i in 1:length(candidate_wd)) {
    wd &amp;lt;- candidate_wd[[i]]
    file_name &amp;lt;-
      list.files(wd,
                 recursive = ifelse(wd == currect_wd, TRUE, FALSE),
                 full.names = TRUE)
    project_index &amp;lt;-
      grep(&amp;quot;.Rproj&amp;quot;, file_name)

    if (length(project_index) != 0) {
      project_wd &amp;lt;-
        file_name[project_index[1]] %&amp;gt;%
        stringr::str_split(&amp;quot;/&amp;quot;) %&amp;gt;%
        unlist() %&amp;gt;%
        head(-1) %&amp;gt;%
        paste(collapse = &amp;quot;/&amp;quot;)
      cat(
        &amp;quot;The project name is:&amp;quot;,
        file_name[project_index[1]] %&amp;gt;%
          stringr::str_split(&amp;quot;/&amp;quot;) %&amp;gt;%
          unlist() %&amp;gt;%
          tail(1),
        &amp;quot;\n&amp;quot;
      )
      cat(&amp;quot;The project wd is:&amp;quot;,
          project_wd, &amp;quot;\n&amp;quot;)

      setwd(project_wd)
      break()
    }
  }
  if (length(project_index) == 0) {
    cat(&amp;quot;There are no .Rproj in your file. No change for wd.\n&amp;quot;)
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;思路和代码都很简单,这个函数也在我自己常用的小工具集合&lt;code&gt;sxtTools&lt;/code&gt;包中,所过想要直接使用,可以考虑安装这个包.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;devtools::install_github(&amp;quot;jaspershen/sxtTools&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>R语言常见统计预测模型</title>
      <link>/post/r-ml-model/</link>
      <pubDate>Wed, 16 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/r-ml-model/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#lasso模型&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.1&lt;/span&gt; lasso模型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#references&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.2&lt;/span&gt; References&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;lasso模型&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1&lt;/span&gt; lasso模型&lt;/h3&gt;
&lt;p&gt;LASSO回归的特点是在拟合广义线性模型的同时进行变量筛选(variable selection)和复杂度调整(regularization).因此,不论因变量(dependent/response varaible)是连续的(continuous),还是二元或者多元离散的（discrete）,都可以用LASSO回归建模然后预测.这里的变量筛选是指不把所有的变量都放入模型中进行拟合,而是有选择的把变量放入模型从而得到更好的性能参数. 复杂度调整是指通过一系列参数控制模型的复杂度,从而避免过拟合(overfitting). 对于线性模型来说,复杂度与模型的变量数有直接关系,变量数越多,模型复杂度就越高. 更多的变量在拟合时往往可以给出一个看似更好的模型,但是同时也面临过度拟合的危险.此时如果用全新的数据去验证模型(validation),通常效果很差. 一般来说,变量数大于数据点数量很多,或者某一个离散变量有太多独特值时,都有可能过度拟合.&lt;/p&gt;
&lt;p&gt;LASSO回归的复杂度主要由参数&lt;span class=&#34;math inline&#34;&gt;\(\lambda\)&lt;/span&gt;(lambda)来控制.lambda越大,对变量较多的线性模型的惩罚力度就越大.最终获得一个变量较少的模型.&lt;/p&gt;
&lt;p&gt;另外还有一个参数&lt;span class=&#34;math inline&#34;&gt;\(\alpha\)&lt;/span&gt;(alpha)用来控制高度相关性模型的性状.LASSO回归时,alpha设置为1.&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;glmnet&lt;/code&gt;包可以进行LASSO回归.它可以对一系列不同的lambda值进行拟合,每次拟合都用到上一个lambda拟合的结果,从而大大提高了运行效率.&lt;/p&gt;
&lt;div id=&#34;常用参数如下&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1.1&lt;/span&gt; 常用参数如下:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;x&lt;/code&gt;: 自变量数据集,需要为matrix格式,行为观测列为变量.&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;y&lt;/code&gt;: 因变量数据集,需要为matrix格式,只有一列.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;family&lt;/code&gt;: 应变量类型.如果时连续性变量(也就是要做回归分析),&lt;code&gt;family&lt;/code&gt;应该为&lt;code&gt;gussian&lt;/code&gt;(高斯分布/正态分布)或者&lt;code&gt;poisson&lt;/code&gt;(泊松分布).如果为两分类不连续变量(factor类型,且只有两个levels),应设置为&lt;code&gt;binomial&lt;/code&gt;.如果时多分类不连续变量(factor类型,且多个levels),则应设置为&lt;code&gt;multinomial&lt;/code&gt;.如果设置为&lt;code&gt;cox&lt;/code&gt;,则y应当为一个两列的matrix,列名分别为&lt;code&gt;time&lt;/code&gt;和&lt;code&gt;status&lt;/code&gt;,&lt;code&gt;tiem&lt;/code&gt;为存活时间,&lt;code&gt;status&lt;/code&gt;为结局状态(1代表死亡,0代表还未死亡).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;alpha&lt;/code&gt;: 在LASSO回归中,将其设置为1.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nlambda&lt;/code&gt;: 选取多少个lambda进行优化,默认为100.也就是使用100个lambda值拟合出100个系数不同的模型.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lambda&lt;/code&gt;: 提供lambda值,如果设置该值(一个或者多个),则会覆盖掉自动选择的lambda值.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;standardize&lt;/code&gt;: 是否对数据进行标准化(scale),默认为TRUE.推荐自己对数据进行标准化,如果自己做过sca了,这里需要设置为FALSE.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;构建模型&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1.2&lt;/span&gt; 构建模型&lt;/h4&gt;
&lt;p&gt;构建模型之后,可以将其打印出来观察具体信息.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.2&lt;/span&gt; References&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cosx.org/2016/10/data-mining-1-lasso/&#34; class=&#34;uri&#34;&gt;https://cosx.org/2016/10/data-mining-1-lasso/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>网络分析之igraph</title>
      <link>/post/igraph/</link>
      <pubDate>Tue, 15 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/igraph/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#安装&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.1&lt;/span&gt; 安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#常用功能总结&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.2&lt;/span&gt; 常用功能总结&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#从data-frame转变为igraph对象&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.3&lt;/span&gt; 从data frame转变为``igraph对象&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code&gt;igraph&lt;/code&gt;是一些列网络分析工具的集合.开源且免费,拥有R, Python以及C/C++等语言接口.我们主要介绍R语言中的&lt;code&gt;igraph&lt;/code&gt;包.其官网如下:
&lt;a href=&#34;https://igraph.org/r/doc/plot.common.html&#34; class=&#34;uri&#34;&gt;https://igraph.org/r/doc/plot.common.html&lt;/a&gt;&lt;/p&gt;
&lt;div id=&#34;安装&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1&lt;/span&gt; 安装&lt;/h3&gt;
&lt;/div&gt;
&lt;div id=&#34;常用功能总结&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.2&lt;/span&gt; 常用功能总结&lt;/h3&gt;
&lt;/div&gt;
&lt;div id=&#34;从data-frame转变为igraph对象&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.3&lt;/span&gt; 从data frame转变为``igraph对象&lt;/h3&gt;
&lt;p&gt;使用&lt;code&gt;graph_from_data_frame()&lt;/code&gt;函数.一共三个参数:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;d&lt;/code&gt;:&lt;code&gt;data.frame&lt;/code&gt;,前两列必须是一条边的两个顶点,比如第一列为&lt;code&gt;from&lt;/code&gt;,第二列为&lt;code&gt;to&lt;/code&gt;.其余的列会作为edge的属性.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;directed&lt;/code&gt;:是否为有向图,默认为TRUE.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;vertices&lt;/code&gt;:需要是一个data.frame.第一列是vertex的名字,然后其他列是vertex的属性.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(igraph)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;igraph&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:stats&amp;#39;:
## 
##     decompose, spectrum&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following object is masked from &amp;#39;package:base&amp;#39;:
## 
##     union&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;actors &amp;lt;- data.frame(name=c(&amp;quot;Alice&amp;quot;, &amp;quot;Bob&amp;quot;, &amp;quot;Cecil&amp;quot;, &amp;quot;David&amp;quot;,
                            &amp;quot;Esmeralda&amp;quot;),
                     age=c(48,33,45,34,21),
                     gender=c(&amp;quot;F&amp;quot;,&amp;quot;M&amp;quot;,&amp;quot;F&amp;quot;,&amp;quot;M&amp;quot;,&amp;quot;F&amp;quot;))

relations &amp;lt;- data.frame(from=c(&amp;quot;Bob&amp;quot;, &amp;quot;Cecil&amp;quot;, &amp;quot;Cecil&amp;quot;, &amp;quot;David&amp;quot;,
                               &amp;quot;David&amp;quot;, &amp;quot;Esmeralda&amp;quot;),
                        to=c(&amp;quot;Alice&amp;quot;, &amp;quot;Bob&amp;quot;, &amp;quot;Alice&amp;quot;, &amp;quot;Alice&amp;quot;, &amp;quot;Bob&amp;quot;, &amp;quot;Alice&amp;quot;),
                        same.dept=c(FALSE,FALSE,TRUE,FALSE,FALSE,TRUE),
                        friendship=c(4,5,5,2,1,1), advice=c(4,5,5,4,2,3))
g &amp;lt;- graph_from_data_frame(relations, directed = TRUE, vertices = actors)
g&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## IGRAPH 9e0c0ea DN-- 5 6 -- 
## + attr: name (v/c), age (v/n), gender (v/c), same.dept (e/l),
## | friendship (e/n), advice (e/n)
## + edges from 9e0c0ea (vertex names):
## [1] Bob      -&amp;gt;Alice Cecil    -&amp;gt;Bob   Cecil    -&amp;gt;Alice David    -&amp;gt;Alice
## [5] David    -&amp;gt;Bob   Esmeralda-&amp;gt;Alice&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(g)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-10-15-igraph/index_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;div id=&#34;寻找某个vertex的neighbor&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.3.1&lt;/span&gt; 寻找某个vertex的neighbor&lt;/h4&gt;
&lt;p&gt;使用&lt;code&gt;neighbors()&lt;/code&gt;函数.一共两个参数:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;graph&lt;/code&gt;:&lt;code&gt;igraph&lt;/code&gt;类对象.&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;V&lt;/code&gt;:某vertex的名字(name).&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mode&lt;/code&gt;: 对于有向图来说,是寻找从该vertex出发的neighbors(‘out’),还是指向该vertex的neighbors(‘in’),还是两种都寻找(‘both’).&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;设置graph中vertex的属性&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.3.2&lt;/span&gt; 设置graph中vertex的属性&lt;/h4&gt;
&lt;p&gt;如果需要给graph中的vertex增加或者修改属性,可以使用&lt;code&gt;ste_vertex_attr()&lt;/code&gt;函数.一共四个参数:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;graph&lt;/code&gt;:&lt;code&gt;igraph&lt;/code&gt;类对象.&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;name&lt;/code&gt;:设置的新的属性的名字.&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;index&lt;/code&gt;:设置vertex属性时的vertex的index.默认按照graph中vertex的默认index(V(graph))来设置.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;value&lt;/code&gt;:设置的属性的值.需要和vertex的长度一致.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;将igraph对象转变为data.frame格式&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.3.3&lt;/span&gt; 将&lt;code&gt;igraph&lt;/code&gt;对象转变为data.frame格式&lt;/h4&gt;
&lt;p&gt;使用&lt;code&gt;as_long_data_frame()&lt;/code&gt;函数可以将&lt;code&gt;igraph&lt;/code&gt;转换为data.frame格式.只有一个参数,就是&lt;code&gt;graph&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;从一个graph提取子graphsubgraph&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.3.4&lt;/span&gt; 从一个graph提取子graph(subgraph)&lt;/h4&gt;
&lt;p&gt;使用&lt;code&gt;subgraph()&lt;/code&gt;函数.一共两个参数:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;graph&lt;/code&gt;:&lt;code&gt;igraph&lt;/code&gt;类对象.&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;V&lt;/code&gt;:要提取的subgraph的所有的vertex的名字(name).&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;获取vertex属性&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.3.5&lt;/span&gt; 获取vertex属性&lt;/h4&gt;
&lt;p&gt;使用&lt;code&gt;vertex_attr()&lt;/code&gt;函数.一共4个参数.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;graph&lt;/code&gt;:&lt;code&gt;igraph&lt;/code&gt;类对象.&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;name&lt;/code&gt;:需要获取的属性的名字,默认提取所有属性.&lt;/li&gt;
&lt;li&gt;index:需要获取那些vertex的属性,默认提取所有的vertex.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>blogdown创建博客总结</title>
      <link>/post/blogdown/</link>
      <pubDate>Sun, 13 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/blogdown/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#如何修改网站icon&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; 如何修改网站icon?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#如何将个人网站作为图床使用&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; 如何将个人网站作为图床使用?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#如何将某个部分如博客blog不显示在主页home上而是点击之后打开一个单独的page&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3&lt;/span&gt; 如何将某个部分(如博客blog)不显示在主页(home)上,而是点击之后,打开一个单独的page?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#如何添加新的页面&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4&lt;/span&gt; 如何添加新的页面?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#如何在post中添加本地图片&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;5&lt;/span&gt; 如何在post中添加本地图片?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#如何在rmarkdown中添加table-of-contents&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;6&lt;/span&gt; 如何在Rmarkdown中添加table of contents?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#netlify自动部署deployfailed的问题&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;7&lt;/span&gt; netlify自动部署(deploy)failed的问题&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#打开netlify网站&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;7.1&lt;/span&gt; 打开netlify网站:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#点击site-settings&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;7.2&lt;/span&gt; 点击&lt;code&gt;Site settings&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#点击build-deploy&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;7.3&lt;/span&gt; 点击&lt;code&gt;Build &amp;amp; deploy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#修改hugo-version&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;7.4&lt;/span&gt; 修改&lt;code&gt;Hugo version&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#将网站改为中英双文之后新建post报错&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;8&lt;/span&gt; 将网站改为中英双文之后,新建&lt;code&gt;post&lt;/code&gt;报错&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#新建blog的yaml如下&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;8.1&lt;/span&gt; 新建blog的&lt;code&gt;YAML&lt;/code&gt;如下:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#常用的categories&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;8.2&lt;/span&gt; 常用的categories:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#常用的tags&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;8.3&lt;/span&gt; 常用的tags:&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#如何在postmarkdown中插入emojis&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;9&lt;/span&gt; 如何在post(markdown)中插入Emojis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#如何在post中插入视频&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;10&lt;/span&gt; 如何在post中插入视频?&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#如何插入b站视频&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;10.1&lt;/span&gt; 如何插入B站视频?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#在markdown中&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;10.2&lt;/span&gt; 在markdown中&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#a-video-from-your-staticimg-media-library&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;10.2.1&lt;/span&gt; A video from your static/img/ media library:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#a-video-within-a-pages-folder-e.g.contentposthello&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;10.2.2&lt;/span&gt; A video within a page’s folder (e.g. content/post/hello/):&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#youtube&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;10.2.3&lt;/span&gt; Youtube:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#vimeo&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;10.2.4&lt;/span&gt; Vimeo:&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#在rmarkdown中&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;10.3&lt;/span&gt; 在Rmarkdown中&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#本地视频&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;10.3.1&lt;/span&gt; 本地视频&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#youtube视频&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;10.3.2&lt;/span&gt; Youtube视频&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#如何在post中插入icon&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;11&lt;/span&gt; 如何在post中插入icon?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#如何使用jupyter编辑post&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;12&lt;/span&gt; 如何使用jupyter编辑post?&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#打开cmd修改路径到当前post路径下.&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;12.1&lt;/span&gt; 打开CMD,修改路径到当前post路径下.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#打开jupyter-notebook&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;12.2&lt;/span&gt; 打开jupyter notebook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#开始对jupyter进行编辑.&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;12.3&lt;/span&gt; 开始对jupyter进行编辑.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#另存为markdown文件.&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;12.4&lt;/span&gt; 另存为&lt;code&gt;markdown&lt;/code&gt;文件.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#编辑yaml&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;12.5&lt;/span&gt; 编辑YAML&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#如何修改页面宽度&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;13&lt;/span&gt; 如何修改页面宽度?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;如何修改网站icon&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; 如何修改网站icon?&lt;/h1&gt;
&lt;p&gt;将自己的logo图片截取为192x192像素(长款分别为0.21cm).然后将其命名为’icon-192.png’放置于&lt;code&gt;static/img&lt;/code&gt;文件夹中即可.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;如何将个人网站作为图床使用&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; 如何将个人网站作为图床使用?&lt;/h1&gt;
&lt;p&gt;将图片放置于&lt;code&gt;static/files&lt;/code&gt;文件夹中即可.使用如下路径访问:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shenxt.info/files/figure.name&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如: &lt;a href=&#34;https://www.shenxt.info/files/wechat_QR.jpg&#34; class=&#34;uri&#34;&gt;https://www.shenxt.info/files/wechat_QR.jpg&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;如何将某个部分如博客blog不显示在主页home上而是点击之后打开一个单独的page&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;3&lt;/span&gt; 如何将某个部分(如博客blog)不显示在主页(home)上,而是点击之后,打开一个单独的page?&lt;/h1&gt;
&lt;p&gt;以blog为例(posts).&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;首先需要将 &lt;code&gt;content/home&lt;/code&gt;中的&lt;code&gt;posts.md&lt;/code&gt;中的active设置为false.这样,这一部分就不会在home主页显示.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;change-active.png&#34; /&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;然后将&lt;code&gt;content/home&lt;/code&gt;中的&lt;code&gt;posts.md&lt;/code&gt;拷贝到&lt;code&gt;content/post&lt;/code&gt;中,并改名为&lt;code&gt;index.md&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;打开&lt;code&gt;config/_default/menus.toml&lt;/code&gt;,然后将Blog的url修改为文件夹的名称.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;change-url.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;如何添加新的页面&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;4&lt;/span&gt; 如何添加新的页面?&lt;/h1&gt;
&lt;p&gt;以在我的网页添加新的中文入口为例.&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;conternt&lt;/code&gt;文件夹下面创建新的&lt;code&gt;chinese&lt;/code&gt;文件夹.在该文件夹下面创建&lt;code&gt;_index.md&lt;/code&gt;文件.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;如何在post中添加本地图片&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;5&lt;/span&gt; 如何在post中添加本地图片?&lt;/h1&gt;
&lt;p&gt;首先在&lt;code&gt;content/post/&lt;/code&gt;建立和post名z字去除掉数字之后的的文件夹(比如post名字为&lt;code&gt;2019-10-25-test&lt;/code&gt;,则文件夹命名为&lt;code&gt;test&lt;/code&gt;),然后再在该文件夹下建立和post同名的文件夹(&lt;code&gt;2019-10-25-test&lt;/code&gt;),然后将图片(如&lt;code&gt;test.png&lt;/code&gt;)放入该文件夹下.在post中,使用:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;![](test/2019-10-25-test/test.png)&lt;/code&gt;语句插入图片.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;如何在rmarkdown中添加table-of-contents&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;6&lt;/span&gt; 如何在Rmarkdown中添加table of contents?&lt;/h1&gt;
&lt;p&gt;在每篇&lt;code&gt;Rmarkdown&lt;/code&gt;的&lt;code&gt;YAML&lt;/code&gt;添加如下内容:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;output:
  blogdown::html_page:
    toc: true
    number_sections: true&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;netlify自动部署deployfailed的问题&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;7&lt;/span&gt; netlify自动部署(deploy)failed的问题&lt;/h1&gt;
&lt;p&gt;发现自动部署总是失败.查了一下,应该是本地的&lt;code&gt;Hugo&lt;/code&gt;和netlify上的版本不一致,解决方法如下:&lt;/p&gt;
&lt;p&gt;首先,在R console输入下列语句,查看本地&lt;code&gt;Hugo&lt;/code&gt;版本:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;blogdown::hugo_version()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;#39;0.66.0&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后修改netlify上的&lt;code&gt;Hugo&lt;/code&gt;的版本.&lt;/p&gt;
&lt;div id=&#34;打开netlify网站&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;7.1&lt;/span&gt; 打开netlify网站:&lt;/h2&gt;
&lt;p&gt;点击下面网站:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://app.netlify.com/teams/jaspershen/sites&#34; class=&#34;uri&#34;&gt;https://app.netlify.com/teams/jaspershen/sites&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;然后点击托管的自己的网站.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;netlify.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;点击site-settings&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;7.2&lt;/span&gt; 点击&lt;code&gt;Site settings&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;site_setting.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;点击build-deploy&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;7.3&lt;/span&gt; 点击&lt;code&gt;Build &amp;amp; deploy&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;build_deploy.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;修改hugo-version&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;7.4&lt;/span&gt; 修改&lt;code&gt;Hugo version&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;然后点击&lt;code&gt;Environment&lt;/code&gt;,将HUGO_VERSION版本修改为和本地一致的版本.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;hugo_version.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;将网站改为中英双文之后新建post报错&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;8&lt;/span&gt; 将网站改为中英双文之后,新建&lt;code&gt;post&lt;/code&gt;报错&lt;/h1&gt;
&lt;p&gt;暂时没有找到好的解决办法.现在的问题是,使用&lt;code&gt;new_post()&lt;/code&gt;创建新的博客,默认的根路径就在&lt;code&gt;content\en&lt;/code&gt;中,但是默认的打开路径又在&lt;code&gt;content\zh&lt;/code&gt;中.所以无法解决.现在只能使用copy其他博客新建来解决了.&lt;/p&gt;
&lt;div id=&#34;新建blog的yaml如下&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;8.1&lt;/span&gt; 新建blog的&lt;code&gt;YAML&lt;/code&gt;如下:&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;---
title: test
author: Xiaotao Shen
date: &amp;#39;2019-10-13&amp;#39;
slug: &amp;#39;&amp;#39;
categories:
  - R
tags:
  - Blog
image:
  caption: &amp;#39;&amp;#39;
  focal_point: &amp;#39;&amp;#39;
output:
  blogdown::html_page:
    toc: true
    number_sections: true
---&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;常用的categories&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;8.2&lt;/span&gt; 常用的categories:&lt;/h2&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;docker&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;life&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;literature&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;Mass Spectrometry&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;omics&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;R&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;Study&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;常用的tags&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;8.3&lt;/span&gt; 常用的tags:&lt;/h2&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Academic&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;Biomarker discovery&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;Blog&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;Chinese&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;Data cleaning&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;Data processing&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;Github&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;life&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;Lipidomics&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;Metabolomics&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;Software&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;Source Thermes&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;Statistical analysis&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;如何在postmarkdown中插入emojis&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;9&lt;/span&gt; 如何在post(markdown)中插入Emojis&lt;/h1&gt;
&lt;p&gt;完整的emoji名单在这:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.webfx.com/tools/emoji-cheat-sheet/&#34; class=&#34;uri&#34;&gt;https://www.webfx.com/tools/emoji-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;输入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;I : heart : Academic : smile :&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;注意需要把emoji文字和两边的冒号之间的空格去除掉.&lt;/p&gt;
&lt;p&gt;显示:&lt;/p&gt;
&lt;p&gt;I ❤ Academic 😄&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;如何在post中插入视频&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;10&lt;/span&gt; 如何在post中插入视频?&lt;/h1&gt;
&lt;div id=&#34;如何插入b站视频&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;10.1&lt;/span&gt; 如何插入B站视频?&lt;/h2&gt;
&lt;p&gt;参考下面帖子.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://fengxiao.ml/2018/12/27/133.html&#34; class=&#34;uri&#34;&gt;https://fengxiao.ml/2018/12/27/133.html&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;点开想要插入的视频,点击分享.然后点击&lt;code&gt;嵌入代码&lt;/code&gt;,复制代码,插入到markdown文件中即可.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;bilibili.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;但是直接嵌入的视频长宽不太好,所以需要手动调整.&lt;/p&gt;
&lt;p&gt;首先需要设置宽度位100%.并给其设置一个id.如下面我就设置ID位&lt;code&gt;test&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;iframe id=&amp;quot;test&amp;quot; src=&amp;quot;//player.bilibili.com/player.html?aid=23877090&amp;amp;cid=39940519&amp;amp;page=1&amp;quot; scrolling=&amp;quot;no&amp;quot; border=&amp;quot;0&amp;quot; frameborder=&amp;quot;no&amp;quot; framespacing=&amp;quot;0&amp;quot; allowfullscreen=&amp;quot;true&amp;quot; width=100%&amp;gt; &amp;lt;/iframe&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后需要在markdown中插入下面的JS代码:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
document.getElementById(&amp;quot;test&amp;quot;).style.height=document.getElementById(&amp;quot;test&amp;quot;).scrollWidth*0.76+&amp;quot;px&amp;quot;;
&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;iframe id=&#34;test&#34; src=&#34;//player.bilibili.com/player.html?aid=23877090&amp;amp;cid=39940519&amp;amp;page=1&#34; scrolling=&#34;no&#34; border=&#34;0&#34; frameborder=&#34;no&#34; framespacing=&#34;0&#34; allowfullscreen=&#34;true&#34; width=&#34;100%&#34;&gt;
&lt;/iframe&gt;
&lt;script type=&#34;text/javascript&#34;&gt;
document.getElementById(&#34;test&#34;).style.height=document.getElementById(&#34;test&#34;).scrollWidth*0.76+&#34;px&#34;;
&lt;/script&gt;
&lt;/div&gt;
&lt;div id=&#34;在markdown中&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;10.2&lt;/span&gt; 在markdown中&lt;/h2&gt;
&lt;p&gt;直接使用下面语句,插入到markdown中即可.&lt;/p&gt;
&lt;div id=&#34;a-video-from-your-staticimg-media-library&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;10.2.1&lt;/span&gt; A video from your static/img/ media library:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;{{&amp;lt; video library=&amp;quot;1&amp;quot; src=&amp;quot;my_video.mp4&amp;quot; controls=&amp;quot;yes&amp;quot; &amp;gt;}}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;a-video-within-a-pages-folder-e.g.contentposthello&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;10.2.2&lt;/span&gt; A video within a page’s folder (e.g. content/post/hello/):&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;{{&amp;lt; video src=&amp;quot;my_video.mp4&amp;quot; controls=&amp;quot;yes&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;youtube&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;10.2.3&lt;/span&gt; Youtube:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;{{&amp;lt; youtube w7Ft2ymGmfc &amp;gt;}}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;vimeo&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;10.2.4&lt;/span&gt; Vimeo:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;{{&amp;lt; vimeo 146022717 &amp;gt;}}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;在rmarkdown中&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;10.3&lt;/span&gt; 在Rmarkdown中&lt;/h2&gt;
&lt;p&gt;使用&lt;code&gt;shortcode()&lt;/code&gt;函数.&lt;/p&gt;
&lt;div id=&#34;本地视频&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;10.3.1&lt;/span&gt; 本地视频&lt;/h3&gt;
&lt;p&gt;将视频放入在与post相同的文件夹中.&lt;/p&gt;
&lt;p&gt;然后插入下面语句(注意是要放在r代码框中):&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;blogdown::shortcode(&amp;quot;video&amp;quot;, src = &amp;quot;./test.mp4&amp;quot;)&lt;/code&gt;&lt;/pre&gt;












  


&lt;video autoplay loop &gt;
  &lt;source src=&#34;./test.mp4&#34; type=&#34;video/mp4&#34;&gt;
&lt;/video&gt;
&lt;/div&gt;
&lt;div id=&#34;youtube视频&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;10.3.2&lt;/span&gt; Youtube视频&lt;/h3&gt;
&lt;p&gt;使用下面语句可以插入视频.第二个是youtube视频ID.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;blogdown::shortcode(&amp;quot;youtube&amp;quot;, &amp;quot;p4liifrbK8w&amp;quot;)&lt;/code&gt;&lt;/pre&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/p4liifrbK8w&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;如何在post中插入icon&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;11&lt;/span&gt; 如何在post中插入icon?&lt;/h1&gt;
&lt;p&gt;直接使用HTML语句即可.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;i class=&amp;quot;fab fa-weixin&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示:&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-weixin&#34;&gt;&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;其中fab是这个网站:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://fontawesome.com/icons?d=gallery&#34; class=&#34;uri&#34;&gt;https://fontawesome.com/icons?d=gallery&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;找到你想要的icon之后,复制名字,替换掉即可.&lt;/p&gt;
&lt;p&gt;如果该网站没有,还可以使用下面的网站:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://getbootstrap.com/docs/3.3/components/&#34; class=&#34;uri&#34;&gt;https://getbootstrap.com/docs/3.3/components/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;输入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;i class=&amp;quot;fas fa-adobe&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示:&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-hourglass&#34;&gt;&lt;/i&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;如何使用jupyter编辑post&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;12&lt;/span&gt; 如何使用jupyter编辑post?&lt;/h1&gt;
&lt;p&gt;如果是写关于python的博客,那么使用jupyter就要比使用Rmarkdown方便太多了.以windowns系统为例.&lt;/p&gt;
&lt;div id=&#34;打开cmd修改路径到当前post路径下.&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;12.1&lt;/span&gt; 打开CMD,修改路径到当前post路径下.&lt;/h2&gt;
&lt;p&gt;可以参考本博文的内容.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;打开jupyter-notebook&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;12.2&lt;/span&gt; 打开jupyter notebook&lt;/h2&gt;
&lt;p&gt;输入&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;jupyter notebook&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;打开jupyter notebook.然后新建一个jupyter文件,命名为&lt;code&gt;index&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;开始对jupyter进行编辑.&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;12.3&lt;/span&gt; 开始对jupyter进行编辑.&lt;/h2&gt;
&lt;p&gt;开始在jupyter上进行编辑.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;另存为markdown文件.&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;12.4&lt;/span&gt; 另存为&lt;code&gt;markdown&lt;/code&gt;文件.&lt;/h2&gt;
&lt;p&gt;如下图操作.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;save_as_markdown.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;编辑yaml&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;12.5&lt;/span&gt; 编辑YAML&lt;/h2&gt;
&lt;p&gt;将index.md打开,然后添加YAML信息.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;---
authors:
- admin
categories: [Python]
date: &amp;quot;2019-02-05T00:00:00Z&amp;quot;
draft: false
featured: true
image:
  caption: &amp;quot;&amp;quot;
  focal_point: &amp;quot;&amp;quot;
projects: []
subtitle: Learn how to blog in Academic using Jupyter notebooks
summary: Learn how to blog in Academic using Jupyter notebooks
tags: []
title: Display Jupyter Notebooks with Academic
---
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果要使用featured figure,需要将&lt;code&gt;featurd&lt;/code&gt;设置为true,且在该post目录下添加名字为&lt;code&gt;featured.png&lt;/code&gt;的图片.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;如何修改页面宽度&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;13&lt;/span&gt; 如何修改页面宽度?&lt;/h1&gt;
&lt;p&gt;参考下面方法:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/gcushen/hugo-academic/issues/147&#34; class=&#34;uri&#34;&gt;https://github.com/gcushen/hugo-academic/issues/147&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R可视化之小提琴图</title>
      <link>/post/r-violin/</link>
      <pubDate>Sat, 12 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/r-violin/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#基础小提琴图绘制&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1&lt;/span&gt; 基础小提琴图绘制&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#使用ggplot2包中的geom_violin函数.&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1.1&lt;/span&gt; 使用&lt;code&gt;ggplot2&lt;/code&gt;包中的&lt;code&gt;geom_violin()&lt;/code&gt;函数.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#将小提琴图水平展示&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.2&lt;/span&gt; 将小提琴图水平展示&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#小提琴图与箱型图同时展示&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.3&lt;/span&gt; 小提琴图与箱型图同时展示&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;本文翻译自“The graph gallery”网站,原帖文地址链接:&lt;a href=&#34;https://www.r-graph-gallery.com/95-violin-plot-with-ggplot2.html&#34; class=&#34;uri&#34;&gt;https://www.r-graph-gallery.com/95-violin-plot-with-ggplot2.html&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div id=&#34;基础小提琴图绘制&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1&lt;/span&gt; 基础小提琴图绘制&lt;/h2&gt;
&lt;div id=&#34;使用ggplot2包中的geom_violin函数.&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.1&lt;/span&gt; 使用&lt;code&gt;ggplot2&lt;/code&gt;包中的&lt;code&gt;geom_violin()&lt;/code&gt;函数.&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggplot2&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#构建数据
data &amp;lt;- data.frame(
  name = c( rep(&amp;quot;A&amp;quot;,500), rep(&amp;quot;B&amp;quot;,500), rep(&amp;quot;B&amp;quot;,500), rep(&amp;quot;C&amp;quot;,20), rep(&amp;#39;D&amp;#39;, 100)),
  value = c( rnorm(500, 10, 5), rnorm(500, 13, 1), rnorm(500, 18, 1), rnorm(20, 25, 4), rnorm(100, 12, 1) )
)

head(data)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   name     value
## 1    A 14.586213
## 2    A  8.547782
## 3    A 17.655333
## 4    A  5.494113
## 5    A 15.576023
## 6    A 12.404492&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Most basic violin chart
p &amp;lt;- 
  ggplot(data, aes(x = name, y = value, fill = name)) + 
  geom_violin() +
  theme_bw()

p&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-12-R-violin-plot/index_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;div id=&#34;数据格式&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.1.1&lt;/span&gt; 数据格式&lt;/h4&gt;
&lt;p&gt;注意在使用&lt;code&gt;geom_violin()&lt;/code&gt;函数构建小提琴图时,数据格式为长数据(long format).每一行时一个观测.一共需要两列:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一个分类变量,用于X轴.需要为&lt;code&gt;factor&lt;/code&gt;格式.&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;数值型变量,用于Y轴.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;数据转换&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.1.2&lt;/span&gt; 数据转换&lt;/h4&gt;
&lt;p&gt;如果数据为宽数据格式,需要对其进行转变.可以使用&lt;code&gt;tidyr&lt;/code&gt;中的&lt;code&gt;pivot_longer()&lt;/code&gt;函数将其转变为长数据格式.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data_wide &amp;lt;- 
  iris[ , 1:4]
library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tidyverse&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Attaching packages ---------------------------------------------------------------------------------- tidyverse 1.2.1 --&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## v tibble  2.1.3     v purrr   0.3.2
## v tidyr   1.0.0     v dplyr   0.8.3
## v readr   1.3.1     v stringr 1.4.0
## v tibble  2.1.3     v forcats 0.4.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tibble&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tidyr&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;dplyr&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Conflicts ------------------------------------------------------------------------------------- tidyverse_conflicts() --
## x dplyr::filter() masks stats::filter()
## x dplyr::lag()    masks stats::lag()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data_long &amp;lt;- 
  data_wide %&amp;gt;% 
  tidyr::pivot_longer(cols = everything(), 
                      names_to = &amp;quot;variable&amp;quot;, values_to = &amp;quot;value&amp;quot;)
head(data_long)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 2
##   variable     value
##   &amp;lt;chr&amp;gt;        &amp;lt;dbl&amp;gt;
## 1 Sepal.Length   5.1
## 2 Sepal.Width    3.5
## 3 Petal.Length   1.4
## 4 Petal.Width    0.2
## 5 Sepal.Length   4.9
## 6 Sepal.Width    3&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)

data_long %&amp;gt;% 
  ggplot(., aes(variable, value)) +
  geom_violin(aes(fill = variable)) +
  theme_bw()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-12-R-violin-plot/index_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;将小提琴图水平展示&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.2&lt;/span&gt; 将小提琴图水平展示&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
library(tidyverse)
  iris[ , 1:4] %&amp;gt;% 
  tidyr::pivot_longer(cols = everything(), 
                      names_to = &amp;quot;variable&amp;quot;,
                      values_to = &amp;quot;value&amp;quot;) %&amp;gt;% 
  ggplot(., aes(variable, value)) +
  geom_violin(aes(fill = variable, colour = variable)) +
  theme_bw() +
    theme(legend.position = &amp;quot;none&amp;quot;) +
    coord_flip()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-12-R-violin-plot/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;小提琴图与箱型图同时展示&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.3&lt;/span&gt; 小提琴图与箱型图同时展示&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
library(tidyverse)
  iris[ , 1:4] %&amp;gt;% 
  tidyr::pivot_longer(cols = everything(), 
                      names_to = &amp;quot;variable&amp;quot;,
                      values_to = &amp;quot;value&amp;quot;) %&amp;gt;% 
  ggplot(., aes(variable, value)) +
  geom_violin(aes(fill = variable, colour = variable), width = 1.4) +
    geom_boxplot(fill = NA, width = 0.1, colour = &amp;quot;grey&amp;quot;) +
  theme_bw() +
    theme(legend.position = &amp;quot;none&amp;quot;) +
    coord_flip()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: position_dodge requires non-overlapping x intervals&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-12-R-violin-plot/index_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R可视化之桑吉图</title>
      <link>/post/r-sankey/</link>
      <pubDate>Sat, 12 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/r-sankey/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/d3/d3.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/sankey/sankey.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/sankeyNetwork-binding/sankeyNetwork.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#使用networkd3包构建桑吉图&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1&lt;/span&gt; 使用&lt;code&gt;networkD3&lt;/code&gt;包构建桑吉图&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#基础桑吉图绘制&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1.1&lt;/span&gt; 基础桑吉图绘制&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#另外一个例子&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1.2&lt;/span&gt; 另外一个例子&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#使用ggalluvial包绘制桑吉图&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1.3&lt;/span&gt; 使用&lt;code&gt;ggalluvial&lt;/code&gt;包绘制桑吉图&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;本文翻译自“The graph gallery”网站,原帖文地址链接:&lt;a href=&#34;https://www.r-graph-gallery.com/sankey-diagram.html&#34; class=&#34;uri&#34;&gt;https://www.r-graph-gallery.com/sankey-diagram.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;桑吉图(sankey diagram)使用来研究同一个变量在其不同分类中的比例或者说是流动的.实体(或者说是节点,node)一般使用长方形或者文字来表示.箭头和弧线用来表示在他们之间的流动.&lt;/p&gt;
&lt;div id=&#34;使用networkd3包构建桑吉图&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1&lt;/span&gt; 使用&lt;code&gt;networkD3&lt;/code&gt;包构建桑吉图&lt;/h2&gt;
&lt;div id=&#34;基础桑吉图绘制&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.1&lt;/span&gt; 基础桑吉图绘制&lt;/h3&gt;
&lt;p&gt;可以使用两种格式的数据进行桑吉图绘制:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;connection data frame(一共三列),可以理解为长数据.&lt;/li&gt;
&lt;li&gt;关联矩阵(incidence matrix),可以理解为宽数据.&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;使用connection-data-frame&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.1.1&lt;/span&gt; 使用connection data frame&lt;/h4&gt;
&lt;p&gt;connection data frame至少需要两列,分别为source和target.第三列可以用来说明该connection的数值.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(networkD3)
library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tidyverse&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Attaching packages ------------------------------------------------------------------------ tidyverse 1.2.1 --&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## v ggplot2 3.2.1     v purrr   0.3.2
## v tibble  2.1.3     v dplyr   0.8.3
## v tidyr   1.0.0     v stringr 1.4.0
## v readr   1.3.1     v forcats 0.4.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggplot2&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tibble&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tidyr&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;dplyr&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Conflicts --------------------------------------------------------------------------- tidyverse_conflicts() --
## x dplyr::filter() masks stats::filter()
## x dplyr::lag()    masks stats::lag()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;links &amp;lt;- data.frame(
  source = c(&amp;quot;group_A&amp;quot;,&amp;quot;group_A&amp;quot;, &amp;quot;group_B&amp;quot;, &amp;quot;group_C&amp;quot;, &amp;quot;group_C&amp;quot;, &amp;quot;group_E&amp;quot;), 
  target = c(&amp;quot;group_C&amp;quot;,&amp;quot;group_D&amp;quot;, &amp;quot;group_E&amp;quot;, &amp;quot;group_F&amp;quot;, &amp;quot;group_G&amp;quot;, &amp;quot;group_H&amp;quot;), 
  value = c(2,3, 2, 3, 1, 3)
  )
head(links)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    source  target value
## 1 group_A group_C     2
## 2 group_A group_D     3
## 3 group_B group_E     2
## 4 group_C group_F     3
## 5 group_C group_G     1
## 6 group_E group_H     3&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##构建connection data frame中所有nodes的data frame
nodes &amp;lt;- data.frame(
  name = c(as.character(links$source), 
  as.character(links$target)) %&amp;gt;% unique()
)

#然后我们需要将每个node的名字代替为其在node data frame中的位置index,注意是要从哦开始计算.
links$IDsource &amp;lt;- match(links$source, nodes$name) - 1 
links$IDtarget &amp;lt;- match(links$target, nodes$name) - 1

#开始创建桑吉图
p &amp;lt;- networkD3::sankeyNetwork(
  Links = links,
  Nodes = nodes,
  Source = &amp;quot;IDsource&amp;quot;,
  Target = &amp;quot;IDtarget&amp;quot;,
  Value = &amp;quot;value&amp;quot;,
  NodeID = &amp;quot;name&amp;quot;,
  sinksRight = FALSE
)
p&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;sankeyNetwork html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;links&#34;:{&#34;source&#34;:[0,0,1,2,2,3],&#34;target&#34;:[2,4,3,5,6,7],&#34;value&#34;:[2,3,2,3,1,3]},&#34;nodes&#34;:{&#34;name&#34;:[&#34;group_A&#34;,&#34;group_B&#34;,&#34;group_C&#34;,&#34;group_E&#34;,&#34;group_D&#34;,&#34;group_F&#34;,&#34;group_G&#34;,&#34;group_H&#34;],&#34;group&#34;:[&#34;group_A&#34;,&#34;group_B&#34;,&#34;group_C&#34;,&#34;group_E&#34;,&#34;group_D&#34;,&#34;group_F&#34;,&#34;group_G&#34;,&#34;group_H&#34;]},&#34;options&#34;:{&#34;NodeID&#34;:&#34;name&#34;,&#34;NodeGroup&#34;:&#34;name&#34;,&#34;LinkGroup&#34;:null,&#34;colourScale&#34;:&#34;d3.scaleOrdinal(d3.schemeCategory20);&#34;,&#34;fontSize&#34;:7,&#34;fontFamily&#34;:null,&#34;nodeWidth&#34;:15,&#34;nodePadding&#34;:10,&#34;units&#34;:&#34;&#34;,&#34;margin&#34;:{&#34;top&#34;:null,&#34;right&#34;:null,&#34;bottom&#34;:null,&#34;left&#34;:null},&#34;iterations&#34;:32,&#34;sinksRight&#34;:false}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
图片时交互性的.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;使用关联矩阵&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.1.2&lt;/span&gt; 使用关联矩阵&lt;/h4&gt;
&lt;p&gt;关联矩阵时正方形或者长方形的.行名和列名分别为node的名称.每一个cell代表着两个node之间flow的数值.但是因为在&lt;code&gt;network3D&lt;/code&gt;中,只能使用长数据,因此其实就是将宽数据转换为长数据.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;另外一个例子&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.2&lt;/span&gt; 另外一个例子&lt;/h3&gt;
&lt;p&gt;我们使用桑吉图来展示科学家的移民或者说是流动情况.左边代表科学家的移出国,右边代表科学家的移进国.数据来自scientific publication(&lt;a href=&#34;https://onlinelibrary.wiley.com/doi/abs/10.1111/imre.12327&#34; class=&#34;uri&#34;&gt;https://onlinelibrary.wiley.com/doi/abs/10.1111/imre.12327&lt;/a&gt;).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#加载包
library(tidyverse)
library(networkD3)

# 读取数据
data &amp;lt;- 
  read.table(&amp;quot;https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/13_AdjacencyDirectedWeighted.csv&amp;quot;, header = TRUE)

# 讲数据转换为长数据
data_long &amp;lt;- data %&amp;gt;%
  rownames_to_column(var = &amp;quot;name&amp;quot;) %&amp;gt;%
  pivot_longer(cols = -name, names_to = &amp;quot;key&amp;quot;, values_to = &amp;quot;value&amp;quot;) %&amp;gt;% 
  filter(value &amp;gt; 0) %&amp;gt;% 
  as.data.frame()

colnames(data_long) &amp;lt;- 
  c(&amp;quot;source&amp;quot;, &amp;quot;target&amp;quot;, &amp;quot;value&amp;quot;)

data_long$target &amp;lt;- 
  paste(data_long$target, &amp;quot; &amp;quot;, sep = &amp;quot;&amp;quot;)

# 创建node data frame
nodes &amp;lt;- 
  data.frame(name = c(as.character(data_long$source),  
                      as.character(data_long$target)) %&amp;gt;% unique()
             ) %&amp;gt;% 
  arrange(name) %&amp;gt;% 
  as.data.frame()
 
data_long$IDsource = match(data_long$source, nodes$name) - 1 
data_long$IDtarget = match(data_long$target, nodes$name) - 1

# prepare colour scale
ColourScal &amp;lt;- &amp;#39;d3.scaleOrdinal() .range([&amp;quot;#FDE725FF&amp;quot;,&amp;quot;#B4DE2CFF&amp;quot;,&amp;quot;#6DCD59FF&amp;quot;,&amp;quot;#35B779FF&amp;quot;,&amp;quot;#1F9E89FF&amp;quot;,
&amp;quot;#26828EFF&amp;quot;,&amp;quot;#31688EFF&amp;quot;,&amp;quot;#3E4A89FF&amp;quot;,&amp;quot;#482878FF&amp;quot;,&amp;quot;#440154FF&amp;quot;])&amp;#39;

# Make the Network
sankeyNetwork(
  Links = data_long,
  Nodes = nodes,
  Source = &amp;quot;IDsource&amp;quot;,
  Target = &amp;quot;IDtarget&amp;quot;,
  Value = &amp;quot;value&amp;quot;,
  NodeID = &amp;quot;name&amp;quot;,
  sinksRight = FALSE,
  colourScale = ColourScal,
  nodeWidth = 40,
  fontSize = 13,
  nodePadding = 20
)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-2&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;sankeyNetwork html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-2&#34;&gt;{&#34;x&#34;:{&#34;links&#34;:{&#34;source&#34;:[0,0,0,0,0,2,2,2,2,2,2,4,6,6,6,8,8,10,10,12,12,12,12,12,12,13,13,13,13,13,16,16,18,18,18],&#34;target&#34;:[1,5,9,11,19,3,5,9,11,15,19,5,5,7,9,5,7,5,11,3,5,9,11,14,19,3,5,9,11,15,5,17,5,9,19],&#34;value&#34;:[3.142471,2.107883,0.540887,0.155988,0.673004,1.630997,0.601265,0.97306,0.333608,0.380388,0.869311,2.401476,1.762587,0.879198,3.627847,1.215929,0.276908,0.17037,0.190706,0.525881,1.390272,1.508008,0.34742,1.307907,4.902081,0.145264,0.468762,1.057904,0.278746,0.781316,0.60923,1.870501,0.449623,0.169274,0.927243]},&#34;nodes&#34;:{&#34;name&#34;:[&#34;Africa&#34;,&#34;Africa &#34;,&#34;East Asia&#34;,&#34;East.Asia &#34;,&#34;Europe&#34;,&#34;Europe &#34;,&#34;Latin America&#34;,&#34;Latin.America &#34;,&#34;North America&#34;,&#34;North.America &#34;,&#34;Oceania&#34;,&#34;Oceania &#34;,&#34;South Asia&#34;,&#34;South East Asia&#34;,&#34;South.Asia &#34;,&#34;South.East.Asia &#34;,&#34;Soviet Union&#34;,&#34;Soviet.Union &#34;,&#34;West Asia&#34;,&#34;West.Asia &#34;],&#34;group&#34;:[&#34;Africa&#34;,&#34;Africa &#34;,&#34;East Asia&#34;,&#34;East.Asia &#34;,&#34;Europe&#34;,&#34;Europe &#34;,&#34;Latin America&#34;,&#34;Latin.America &#34;,&#34;North America&#34;,&#34;North.America &#34;,&#34;Oceania&#34;,&#34;Oceania &#34;,&#34;South Asia&#34;,&#34;South East Asia&#34;,&#34;South.Asia &#34;,&#34;South.East.Asia &#34;,&#34;Soviet Union&#34;,&#34;Soviet.Union &#34;,&#34;West Asia&#34;,&#34;West.Asia &#34;]},&#34;options&#34;:{&#34;NodeID&#34;:&#34;name&#34;,&#34;NodeGroup&#34;:&#34;name&#34;,&#34;LinkGroup&#34;:null,&#34;colourScale&#34;:&#34;d3.scaleOrdinal() .range([\&#34;#FDE725FF\&#34;,\&#34;#B4DE2CFF\&#34;,\&#34;#6DCD59FF\&#34;,\&#34;#35B779FF\&#34;,\&#34;#1F9E89FF\&#34;,\n\&#34;#26828EFF\&#34;,\&#34;#31688EFF\&#34;,\&#34;#3E4A89FF\&#34;,\&#34;#482878FF\&#34;,\&#34;#440154FF\&#34;])&#34;,&#34;fontSize&#34;:13,&#34;fontFamily&#34;:null,&#34;nodeWidth&#34;:40,&#34;nodePadding&#34;:20,&#34;units&#34;:&#34;&#34;,&#34;margin&#34;:{&#34;top&#34;:null,&#34;right&#34;:null,&#34;bottom&#34;:null,&#34;left&#34;:null},&#34;iterations&#34;:32,&#34;sinksRight&#34;:false}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;/div&gt;
&lt;div id=&#34;使用ggalluvial包绘制桑吉图&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.3&lt;/span&gt; 使用&lt;code&gt;ggalluvial&lt;/code&gt;包绘制桑吉图&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ggalluvial&lt;/code&gt;包是&lt;code&gt;ggplot2&lt;/code&gt;的一个扩展包.可以用来绘制桑吉图.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##加载包
library(ggalluvial)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggalluvial&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## 使用示例数据
data(vaccinations)
head(vaccinations)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   freq           a subject    survey response
## 1   48 0.050367261       1 ms153_NSA   Always
## 2    9 0.009443861       2 ms153_NSA   Always
## 3   66 0.069254984       3 ms153_NSA   Always
## 4    1 0.001049318       4 ms153_NSA   Always
## 5   11 0.011542497       5 ms153_NSA   Always
## 6    1 0.001049318       6 ms153_NSA   Always&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;levels(vaccinations$response) &amp;lt;- rev(levels(vaccinations$response))
ggplot(vaccinations,
       aes(x = survey, 
           y = freq,
           stratum = response, 
           alluvium = subject,
           fill = response, 
           label = response)) +
  scale_x_discrete(expand = c(.1, .1)) +
  ggalluvial::geom_flow() +
  labs(x = &amp;quot;&amp;quot;, y = &amp;quot;&amp;quot;) +
  ggalluvial::geom_stratum(alpha = .5) +
  geom_text(stat = &amp;quot;stratum&amp;quot;, size = 3) +
  theme_bw() +
  theme(legend.position = &amp;quot;none&amp;quot;, 
        plot.background = element_blank(), 
        panel.border = element_blank(), 
        panel.grid = element_blank(), 
        axis.ticks = element_blank(), 
        axis.text.y = element_blank()) +
  ggtitle(&amp;quot;vaccination survey responses at three points in time&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-12-r-sankey/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;我们在对该包做一个详细的讲解.&lt;/p&gt;
&lt;div id=&#34;冲积图alluvial-diagrams的结构&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.3.1&lt;/span&gt; 冲积图(Alluvial diagrams)的结构&lt;/h4&gt;
&lt;p&gt;使用&lt;code&gt;ggalluvial&lt;/code&gt;包绘制的图称之为冲积图(Alluvial diagrams).我们以上面的例子图为例,来进行解释.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;X轴代表着数据流动的分类.比如上图中,一共有三类,也就是ms153_NSA,ms432_NSA和ms460_NSA.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;而X轴的每一类又会分为不同的分组,称之为地层(strata).在我们这个例子中,每一类都分成了四组,Missing,Never,Sometimes和Always.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;然后我们再看每一列,每一列的每一个分组都会被图形分割,这称之为冲积(alluvia).在这个例子中,每个冲积的宽度(也就是在Y轴上range)代表着分类的该组分到下一个分类某个分组的数据的多少.当然,冲积的颜色用来代表不同的分类.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;两个相邻的分类之间的连接的冲积称之为flow.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们对这个图的结构进行详细的理解之后,我们在来看如何使用&lt;code&gt;galluvial&lt;/code&gt;包绘制冲积图.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;所需要的数据类型&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.3.2&lt;/span&gt; 所需要的数据类型&lt;/h4&gt;
&lt;p&gt;跟&lt;code&gt;network3D&lt;/code&gt;包一样,&lt;code&gt;ggalluvial&lt;/code&gt;包也可以使用宽数据和长数据.我们使用&lt;code&gt;UCBAdmissions&lt;/code&gt;数据为例进行说明.&lt;/p&gt;
&lt;div id=&#34;宽数据&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.3.2.1&lt;/span&gt; 宽数据&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;UCBAdmissions&lt;/code&gt;数据一共有4列.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Modern Statistics for Modern Biology:第一章</title>
      <link>/post/2019-10-10-modern-statistics-for-modern-biology/</link>
      <pubDate>Thu, 10 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-10-10-modern-statistics-for-modern-biology/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#离散变量discrete-data的生成模型&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.1&lt;/span&gt; 离散变量(discrete data)的生成模型&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;是斯坦福大学统计系教授&lt;a href=&#34;&#34;&gt;Susan Holmes&lt;/a&gt;&lt;/p&gt;
&lt;div id=&#34;离散变量discrete-data的生成模型&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1&lt;/span&gt; 离散变量(discrete data)的生成模型&lt;/h3&gt;
&lt;p&gt;在分子生物学中,在很多情况下都会产生离散变量.&lt;/p&gt;
&lt;div id=&#34;本章目标&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1.1&lt;/span&gt; 1.1 本章目标&lt;/h4&gt;
&lt;p&gt;在本章中,我们将会:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;学会对于一个给定模型如何获取其所有可能结果的概率(probabilities),并且将理论的频率(frequencies)和实际数据观测到的进行比较.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;探索一个完整的例子,如何使用泊松分布来分析表位(epitope)检测.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如何使用几种常见的非常有用的离散变量生成模型:泊松,二项式和多项式.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;学会使用R函数来计算概率和计数罕见实例.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;从指定的分布生成随机数.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;一个真实例子&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1.2&lt;/span&gt; 1.2 一个真实例子&lt;/h4&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>组学数据分析常见方法总结</title>
      <link>/post/2019-10-10-data-analysis-omics/</link>
      <pubDate>Thu, 10 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-10-10-data-analysis-omics/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#correlation-analysis&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.1&lt;/span&gt; Correlation analysis&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;correlation-analysis&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1&lt;/span&gt; Correlation analysis&lt;/h3&gt;
&lt;p&gt;将组学变量(gene,protein,metabolite,clinical factor)进行相关性分析,得到他们之间的相关性,注意需要选择合适的相关性计算方法,并进行多重比较矫正(FDR,BH等).&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>purrr教程1:Overview</title>
      <link>/post/2019-10-08-purrr-1-overview/</link>
      <pubDate>Tue, 08 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-10-08-purrr-1-overview/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#安装&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.1&lt;/span&gt; 安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#使用&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.2&lt;/span&gt; 使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#map-family&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.3&lt;/span&gt; Map family&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code&gt;purrr&lt;/code&gt;是一个提供函数编程的工具箱.&lt;/p&gt;
&lt;div id=&#34;安装&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1&lt;/span&gt; 安装&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;purrr&lt;/code&gt;包含在&lt;code&gt;tidyverse&lt;/code&gt;种,因此如果你已经安装了他,不需要再安装.当然也可以单独安装&lt;code&gt;purrr&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;### 安装tidyverse
install.packages(&amp;quot;tidyverse&amp;quot;)
### 单独安装purrr
install.packages(&amp;quot;purrr&amp;quot;)

### 安装开发板
devtools::install_github(&amp;quot;tidyverse/purrr&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;使用&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.2&lt;/span&gt; 使用&lt;/h3&gt;
&lt;p&gt;使用一个简单的例子来展示&lt;code&gt;purrr&lt;/code&gt;的作用.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(purrr)

mtcars %&amp;gt;%
  split(x = ., f = .$cyl) %&amp;gt;% # 按照cyl将mtcars数据分割为数个list
  map(.x = ., .f = ~ lm(mpg ~ wt, data = .)) %&amp;gt;%#对每一个list数据,简历mpg和wt的线性模型
  map(.x = ., .f = summary) %&amp;gt;%##对每一个线性模型进行summary
  map_dbl(.x = , .f = &amp;quot;r.squared&amp;quot;)##提取出来R2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##         4         6         8 
## 0.5086326 0.4645102 0.4229655&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这个例子显示了和R中相同功能的base函数的优点.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;map-family&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.3&lt;/span&gt; Map family&lt;/h3&gt;
&lt;p&gt;map函数对输入的vector的每一个元素进行&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>tidyverse select使用总结</title>
      <link>/post/tidyverse-select/</link>
      <pubDate>Tue, 08 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/tidyverse-select/</guid>
      <description>


&lt;p&gt;test&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ggplot2拼图工具:patchwork</title>
      <link>/post/2019-09-09-ggplot2-patchwork/</link>
      <pubDate>Mon, 09 Sep 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-09-09-ggplot2-patchwork/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#安装&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; 安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#使用&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; 使用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;推荐一个用来拼图的包:&lt;code&gt;patchwork&lt;/code&gt;.作者是&lt;a href=&#34;https://github.com/thomasp85&#34;&gt;Thomas Lin Pedersen&lt;/a&gt;.使用方法非常简洁,具体使用方法可以查看其帮助文档.他的思想跟&lt;code&gt;tidyverse&lt;/code&gt;非常像,直接使用&lt;code&gt;+&lt;/code&gt;,&lt;code&gt;-&lt;/code&gt;等符号来进行图的拼接.举个例子说明.&lt;/p&gt;
&lt;div id=&#34;安装&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; 安装&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;patchwork&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;devtools::install_github(&amp;quot;thomasp85/patchwork&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;使用&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; 使用&lt;/h1&gt;
&lt;p&gt;拼图有两种不同的含义:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;像一幅图中不同的panel一样,他们分别是独立的;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;反映同样的数据信息,将几个图拼成一个panel.比如对于一个散点图,在其右侧和左侧分别添加其对应的变量的密度分布图等.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(patchwork)
library(tidyverse)

plot1 &amp;lt;- 
  ggplot(mtcars, aes(x = mpg, y = disp)) +
  geom_point() +
  theme_bw() +
  scale_x_continuous(limits = c(10, 35)) +
  scale_y_continuous(limits = c(50, 500))
  
plot2 &amp;lt;- 
  ggplot(mtcars, aes(x = mpg)) +
  geom_histogram() +
  theme_bw() +
  scale_x_continuous(limits = c(10, 35), 
                     name = NULL, labels = NULL, breaks = NULL) +
  scale_y_continuous(expand = expand_scale(mult = c(0, .05))) +
  theme(panel.border = element_blank(),
        axis.line = element_line(colour = &amp;quot;black&amp;quot;),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank())&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: `expand_scale()` is deprecated; use `expansion()` instead.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot3 &amp;lt;- 
  ggplot(mtcars, aes(x = disp)) +
  geom_histogram() +
  theme_bw() +
  coord_flip() +
    scale_x_continuous(limits = c(150, 500), 
                     name = NULL, labels = NULL, breaks = NULL) +
  scale_y_continuous(expand = expand_scale(mult = c(0, .05))) +
  theme(panel.border = element_blank(),
        axis.line = element_line(colour = &amp;quot;black&amp;quot;),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank())&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: `expand_scale()` is deprecated; use `expansion()` instead.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我们画出了汽车&lt;code&gt;mpg&lt;/code&gt;和&lt;code&gt;disp&lt;/code&gt;的关系,然后想在这个散点图上方和右方分别画上&lt;code&gt;disp&lt;/code&gt;和&lt;code&gt;mpg&lt;/code&gt;的分布图.这时候需要注意的是,需要确定&lt;code&gt;xlim&lt;/code&gt;和&lt;code&gt;ylim&lt;/code&gt;的发明,从而使其坐标轴能够精确对上.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot &amp;lt;- 
{plot2 + plot_spacer() + plot_layout(ncol = 2, widths = c(3, 1))} -
  {plot1 + plot3 + plot_layout(ncol = 2, widths = c(3, 1))} +
  plot_layout(ncol = 1, heights = c(1,3))
plot&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Removed 2 rows containing missing values (geom_bar).&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Removed 12 rows containing non-finite values (stat_bin).

## Warning: Removed 2 rows containing missing values (geom_bar).&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-09-09-ggplot2-patchwork/index_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;plot_spacer()&lt;/code&gt;函数用来生成一个空白图片.&lt;code&gt;plot_layout()&lt;/code&gt;函数用来设置拼接图片的一些具体参数,如列数,行数,宽度或者高度比等.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;{}&lt;/code&gt;括起来的几个plot组成一个完整的新的plot.&lt;/p&gt;
&lt;p&gt;这里面需要注意的是&lt;code&gt;-&lt;/code&gt;.它是指该符号左右两侧当成两个新的图层进行拼接.&lt;/p&gt;
&lt;p&gt;具体使用方法可以参考作者github(&lt;a href=&#34;https://github.com/thomasp85/patchwork&#34; class=&#34;uri&#34;&gt;https://github.com/thomasp85/patchwork&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>如何修改ggplot2垂直square legend之间的距离</title>
      <link>/post/ggplot2-square-legend/</link>
      <pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate>
      <guid>/post/ggplot2-square-legend/</guid>
      <description>


&lt;p&gt;今天看到有人在讨论如何修改&lt;code&gt;ggplot2&lt;/code&gt;中垂直square legend之间的距离.原来想着&lt;code&gt;ggplot2&lt;/code&gt;中的&lt;code&gt;theme&lt;/code&gt;函数的&lt;code&gt;legend.key.height&lt;/code&gt;参数不就是来控制这个距离的吗?后来试了一下,还真的不行.&lt;/p&gt;
&lt;p&gt;先画出图来:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
ggplot(mtcars, aes(x = factor(cyl))) +
  geom_bar(aes(fill = factor(cyl)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-09-04-ggplot2-square-legend/index_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;legend.key.height&lt;/code&gt;参数来设置:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars, aes(x = factor(cyl))) +
  geom_bar(aes(fill = factor(cyl))) +
  theme(legend.key.height = unit(4, &amp;quot;line&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-09-04-ggplot2-square-legend/index_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以看到每个key变高了,但是距离并没有变化.我们试试其他类型的legend,比如point.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars, aes(x = factor(cyl))) +
  geom_point(aes(colour = factor(cyl)), stat = &amp;quot;count&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-09-04-ggplot2-square-legend/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars, aes(x = factor(cyl))) +
  geom_point(aes(colour = factor(cyl)), stat = &amp;quot;count&amp;quot;) +
  theme(legend.key.height = unit(10, &amp;quot;mm&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-09-04-ggplot2-square-legend/index_files/figure-html/unnamed-chunk-3-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;从这幅图看的就非常的清楚了,每个legend的图像元素是由&lt;code&gt;key&lt;/code&gt;(背景)和指示元素组成的.&lt;code&gt;legend.key.height&lt;/code&gt;参数可以改变&lt;code&gt;key&lt;/code&gt;的高度,而指示元素则处在key的中间,对于square legend来说,他们其实是和&lt;code&gt;key&lt;/code&gt;背景重合的,所以&lt;code&gt;legend.key.height&lt;/code&gt;没有办法改变他们之间的距离.&lt;/p&gt;
&lt;p&gt;那如果确实有需要更改这个距离,怎么做呢?想到一个办法只能更改square指示元素的line的宽度(line颜色为白色),从而间接修改他们之间的距离.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars, aes(x = factor(cyl))) +
  geom_bar(aes(fill = factor(cyl)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-09-04-ggplot2-square-legend/index_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars, aes(x = factor(cyl))) +
  geom_bar(aes(fill = factor(cyl))) +
  theme(legend.key.size = unit(2, &amp;quot;line&amp;quot;)) +
  guides(fill = guide_legend(override.aes = list(size = 3, colour = &amp;quot;white&amp;quot;)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-09-04-ggplot2-square-legend/index_files/figure-html/unnamed-chunk-4-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;欢迎大家由其他办法的留言讨论.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>生物统计学学习:逻辑回归</title>
      <link>/post/2019-08-31-logistic-regression/</link>
      <pubDate>Sat, 31 Aug 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-08-31-logistic-regression/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#sigmoid函数logistic-function&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.1&lt;/span&gt; Sigmoid函数(logistic function)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;逻辑回归(logistic regression)其实就是线性回归的一种.只是对于逻辑回归的因变量,是非连续变量的0和1,通过Sigmoid函数将其映射为连续性变量.逻辑回归虽然叫回归,但是预测给出的值只是0和1,因此其实是属于分类.&lt;/p&gt;
&lt;div id=&#34;sigmoid函数logistic-function&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1&lt;/span&gt; Sigmoid函数(logistic function)&lt;/h3&gt;
&lt;p&gt;sigmoid函数的方程如下:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[f(x) = \frac{1}{1+e^{-x}}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其函数曲线我们可以通过模拟给出:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
x &amp;lt;- seq(-10, 10, by = 0.1)
y &amp;lt;- 1/(1+exp(-x))

ggplot(data.frame(x,y), aes(x, y)) +
  geom_line(colour = &amp;quot;red&amp;quot;) +
  geom_vline(xintercept = 0) +
  theme_bw()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-08-31-logistic-regression/index_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以看出来sigmoid函数是一个S型曲线.他的取值在[0,1]之间.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>生物统计学习:简单线性回归模型</title>
      <link>/post/2019-08-26-liner-regression/</link>
      <pubDate>Mon, 26 Aug 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-08-26-liner-regression/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#线性回归&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1&lt;/span&gt; 线性回归&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#简单线性回归&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1.1&lt;/span&gt; 简单线性回归&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#r2&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1.2&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#r2的假设检验&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1.3&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;的假设检验&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#矫正r2adjusted-r2&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1.4&lt;/span&gt; 矫正&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;(&lt;span class=&#34;math inline&#34;&gt;\(adjusted R^2\)&lt;/span&gt;)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#系数的假设检验&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1.5&lt;/span&gt; 系数的假设检验&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#r语言进行线性回归&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1.6&lt;/span&gt; R语言进行线性回归&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;线性回归&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1&lt;/span&gt; 线性回归&lt;/h2&gt;
&lt;p&gt;使用直线拟合的方法得到拟合直线称之为线性回归(linear regression).如果只有一个自变量,则称之为简单线性回归(simple),有多个自变量,则称之为多元线性回归(multiple regression).这两个模型都必须满足变量是连续性变量,如果变量为分类变量,也可以进行线性回归,称之为逻辑回归(logistic regression).&lt;/p&gt;
&lt;div id=&#34;简单线性回归&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.1&lt;/span&gt; 简单线性回归&lt;/h3&gt;
&lt;p&gt;我们举个例子,年龄和身高是否有线性关系,是否可以使用年龄来预测身高呢?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;age &amp;lt;- 18:29
height &amp;lt;- 
  c(76.1,77,78.1,78.2,78.8,79.7,79.9,81.1,81.2,81.8,82.8,83.5)
data &amp;lt;- 
  data.frame(age, height, 
             stringsAsFactors = FALSE)
library(ggplot2)

(
plot &amp;lt;- 
ggplot(data, aes(age, height)) +
  geom_point() +
  theme_bw()
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-08-26-liner-regression/index_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;我们画出散点图之后,可以看出age和height呈比较明显的线性关系.&lt;/p&gt;
&lt;p&gt;那我们怎么用一条直线去拟合(fit)数据呢?我们使用的就是最小平方差法(least square).&lt;/p&gt;
&lt;p&gt;那么最简单的拟合办法是什么呢?也就是直接使用所有人的height的平均值去拟合.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot +
  geom_hline(yintercept = mean(data$height))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-08-26-liner-regression/index_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;那么怎么评价一条直线对数据拟合的好坏呢?这时候就需要引入另外一个概念,残差(residuls).残差也就是真实值和拟合值之间差值:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[residual = y_i - y_i^{&amp;#39;}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其中&lt;span class=&#34;math inline&#34;&gt;\(y_i\)&lt;/span&gt;是真实值,而&lt;span class=&#34;math inline&#34;&gt;\(y_i{&amp;#39;}\)&lt;/span&gt;是模型预测值.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot +
  geom_hline(yintercept = mean(data$height)) +
  geom_segment(aes(x = data$age[1], y = data$height[1], xend = data$age[1], yend = mean(data$height)), colour = &amp;quot;red&amp;quot;, arrow = arrow()) &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Use of `data$age` is discouraged. Use `age` instead.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Use of `data$height` is discouraged. Use `height` instead.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Use of `data$age` is discouraged. Use `age` instead.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Use of `data$height` is discouraged. Use `height` instead.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-08-26-liner-regression/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;从定义可以看到,残差有正有负.为了表示一条拟合直线对数据拟合的程度的好坏,我们将残差平方然后加和,从而得到&lt;strong&gt;残差平方和(sum of squared residuals)&lt;/strong&gt;,该值就可以用来表示一条直线对数据的拟合的好坏.拟合的越好,该值越小,拟合的越差,该值越大.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;其实使用残差平方和作为损失函数得到的最后的方程或者说模型并不一定是最优解,但是好处是方便后面求解(求导)并且解是唯一的.另外还有使用残差绝对值之和作为损失函数进行求解.以后再慢慢介绍.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[sum \quad of \quad squared \quad residuals = \sum_{i=1}^n(y_i-y_i^{&amp;#39;})^2\]&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意,该值是有量纲的,只能比较同一组数据不同拟合直线的好坏,而不能比较不同数据之间的拟合的好坏.后面会介绍&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;那么怎样找到一个最好的拟合直线呢?我们可以将这条线(平均值)进行旋转,每条直线都会有截距(intersect)和斜率(slope)两个参数,对于每一条直线,我们都会计算其残差平方和.&lt;/p&gt;
&lt;p&gt;最后,我们会得到一系列的截距和斜率组合以及他们所对应的残差平方和.我们可以简单的理解,直接选取残差平方和最小的参数组合即可(实际情况更为复杂一些).从而得到最佳的参数组合.这也是为什么这种方法称之为’least square’的原因.&lt;/p&gt;
&lt;p&gt;那么如何估量一个拟合直线的好坏呢?这时候就需要引入&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;的概念.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;r2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.2&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;首先,我们计算使用身高平均值拟合直线的残差平方和,称之为&lt;span class=&#34;math inline&#34;&gt;\(SS(mean)\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[SS(mean) = (data - mean)^2\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;同时,我们知道方差(Var(mean))等于残差平方和除以样本个数:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[Var(mean) = \frac{SS(mean)}{n}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;然后,按照同样的方法,我们计算拟合直线的残差平方和,称之为&lt;span class=&#34;math inline&#34;&gt;\(SS(fit)\)&lt;/span&gt;.同时,我们也可以计算出来拟合直线的方差(Var(fit)).&lt;/p&gt;
&lt;p&gt;可以看到,拟合直线得到的残差平方和要比平均值得到的要小,也就是说,将年龄因素考虑进去之后,身高的方差有一部分能够被年龄所解释.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;告诉我们年龄可以解释多少比例的身高的方差.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[R^2 = \frac{Var(mean) - Var(fit)}{Var(mean)} = \frac{SS(mean) - SS(fit)}{SS(mean)} = 1 - \frac{ SS(fit)}{SS(mean)}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;从公式可以看出,如果一条直线正好穿过所有的数据点,那么&lt;span class=&#34;math inline&#34;&gt;\(SS(fit)=0\)&lt;/span&gt;,这时候&lt;span class=&#34;math inline&#34;&gt;\(R^2=1\)&lt;/span&gt;.而如果身高和年龄完全没有关系,则&lt;span class=&#34;math inline&#34;&gt;\(R^2 = 0\)&lt;/span&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;需要注意的是,&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;的大小并不具有统计学意义,我们可以想象,如果只有两个点,那么必定有一条直线通过他们,因此&lt;span class=&#34;math inline&#34;&gt;\(SS(fit)\)&lt;/span&gt;为0,但是很明显这样的fit是没有意义的,得到的&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;也并不能说明两个变量之间真是的关系.这说明了样本的数量也同样重要,因此,我们需要对&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;进行统计学假设检验,得到其统计学显著性,也就是p value.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;r2的假设检验&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.3&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;的假设检验&lt;/h3&gt;
&lt;p&gt;首先,我们需要明白&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;的含义,我们上面已经讨论过了,&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;指的是变量x能够解释变量y的方差的比例.比如上面的例子,&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;为0.99,说明年龄可以解释99%的身高的方差.&lt;/p&gt;
&lt;p&gt;这时候,需要引入一个统计量,F:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[F = \frac{(Var(mean) - Var(fit))/(p_{fit}-p_{mean})}{Var(fit)/(n-p_{fit})} = \frac{(SS(mean) - SS(fit))/(p_{fit}-p_{mean})}{SS(fit)/(n-p_{fit})} = \frac{\frac{(SS(mean) - SS(fit))}{p_{fit}-p_{mean}}} {\frac{SS(fit)}{n-p_{fit}}}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;也就是说,F等于变量x能够解释变量y的方差除以变量x不能够解释变量y的方差.&lt;/p&gt;
&lt;p&gt;而&lt;span class=&#34;math inline&#34;&gt;\((n-p_{fit})/(p_{fit}-p_{mean})\)&lt;/span&gt;则称之为自由度(degrees of freedoms).自由度的定义以后再详细解释.&lt;/p&gt;
&lt;p&gt;其中&lt;span class=&#34;math inline&#34;&gt;\(p_{fit}\)&lt;/span&gt;代表回归方程中参数的数目,比如一元线性方程中,只有两个参数(intercept和slop),所以&lt;span class=&#34;math inline&#34;&gt;\(p_{fit}=2\)&lt;/span&gt;.&lt;span class=&#34;math inline&#34;&gt;\(p_{mean}\)&lt;/span&gt;代表平均值直线的参数个数,在一元线性方程中,为1.n是数据集的样本个数.&lt;/p&gt;
&lt;p&gt;因此,&lt;span class=&#34;math inline&#34;&gt;\(p_{fit}-p_{mean}\)&lt;/span&gt;代表的含义是该拟合模型与平均值模型相比,多出来的参数的个数.在简单线性回归中,多出来的就是slope.对于多元线性回归,比如,两个自变量预测一个因变量,则这时候&lt;span class=&#34;math inline&#34;&gt;\(p_{fit}=3\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;我们再来看分母,为什么需要使用&lt;span class=&#34;math inline&#34;&gt;\(SS(fit)\)&lt;/span&gt;除以&lt;span class=&#34;math inline&#34;&gt;\(n-p_{fit}\)&lt;/span&gt;呢?因为我们知道模型越复杂(参数越多),你就需要更多的点去拟合.比如,对于两个点的一元一次方程,只需要两个点即可(两点确定一条直线).而对于二元一次方程,则需要三个点去拟合.&lt;/p&gt;
&lt;p&gt;这时候我们再来看分子分母分别代表什么意义.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;分子:拟合模型多出来的参数能够解释的方差(变异).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;分母:拟合模型多出来的参数不能够解释的方差(变异).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这样我们拿到F值以后,怎么计算p value呢?其实就是使用permutation test的方法.&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;随机产生与数据集样本数相同数目的数据集.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对其进行拟合并计算每一组随机数据的F值.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;产生大量的随机F值,并得到随机F值的分布.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;拿到随机F值的分布,p value就等于大于真实F值的数目除以随机F值的总数目.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;当然,所有随机F值的分布其实是符合F分布的,拿到了F分布,就可以计算p value.F分布以后再详细介绍.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;矫正r2adjusted-r2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.4&lt;/span&gt; 矫正&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;(&lt;span class=&#34;math inline&#34;&gt;\(adjusted R^2\)&lt;/span&gt;)&lt;/h3&gt;
&lt;p&gt;什么是矫正&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;呢?我们从&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;定义可以看到,如果我们增加了拟合模型的变量个数,因为&lt;span class=&#34;math inline&#34;&gt;\(SS(mean)\)&lt;/span&gt;是固定的,因此&lt;span class=&#34;math inline&#34;&gt;\(SS(fit)\)&lt;/span&gt;都会减小,所以导致&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;变大,从而造成过拟合(over fitting).因此,我们需要对模型选入的变量个数做一个惩罚,这就是&lt;span class=&#34;math inline&#34;&gt;\(adjusted \quad R^2\)&lt;/span&gt;.以后再详细解释.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;系数的假设检验&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.5&lt;/span&gt; 系数的假设检验&lt;/h3&gt;
&lt;p&gt;同样的,我们可以看到,上面是对&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;做假设检验,当然我们也需要对每个变量的系数(包括intersect)进行假设验证,在多元回归中尤其重要,我们会在以后进行详细解释.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;r语言进行线性回归&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.6&lt;/span&gt; R语言进行线性回归&lt;/h3&gt;
&lt;p&gt;R语言中的&lt;code&gt;lm()&lt;/code&gt;函数可以用来进行线性回归.使用方法如下:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;lm_fit &amp;lt;- 
  lm(height ~ age, data)
summary(lm_fit)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = height ~ age, data = data)
## 
## Residuals:
##      Min       1Q   Median       3Q      Max 
## -0.27238 -0.24248 -0.02762  0.16014  0.47238 
## 
## Coefficients:
##             Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept)  64.9283     0.5084  127.71  &amp;lt; 2e-16 ***
## age           0.6350     0.0214   29.66 4.43e-11 ***
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## Residual standard error: 0.256 on 10 degrees of freedom
## Multiple R-squared:  0.9888, Adjusted R-squared:  0.9876 
## F-statistic:   880 on 1 and 10 DF,  p-value: 4.428e-11&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;summary中提供了该线性回归的大部分内容.其中&lt;code&gt;Multiple R-squared&lt;/code&gt;其实就是&lt;code&gt;R-squared&lt;/code&gt;&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;,而&lt;code&gt;Adjusted R-Squred&lt;/code&gt;主要是对多元线性回归时对多个变量进行矫正,因为当变量数目增加的时候,&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;总会变小,因此需要对其进行矫正.对于简单线性回归来说.直接使用&lt;code&gt;Multiple R-squared&lt;/code&gt;即可,而对于多元线性回归来说,则需要使用&lt;code&gt;Adjusted R-Squred&lt;/code&gt;来衡量模型拟合的效果.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Markdown中输入数学公式</title>
      <link>/post/2019-08-25-math-markdown/</link>
      <pubDate>Sun, 25 Aug 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-08-25-math-markdown/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#如何插入公式&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.1&lt;/span&gt; 1. 如何插入公式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#上下标&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.2&lt;/span&gt; 2. 上下标&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#括号和分隔符&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.3&lt;/span&gt; 3. 括号和分隔符&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#分数&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.4&lt;/span&gt; 4. 分数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#开方&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.5&lt;/span&gt; 5. 开方&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#省略号&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.6&lt;/span&gt; 6. 省略号&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#矢量&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.7&lt;/span&gt; 7. 矢量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#积分&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.8&lt;/span&gt; 8. 积分&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#极限预算&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.9&lt;/span&gt; 9. 极限预算&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#累加累乘公式&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.10&lt;/span&gt; 10. 累加,累乘公式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#希腊字母&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.11&lt;/span&gt; 11. 希腊字母&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#运算符&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.12&lt;/span&gt; 12. 运算符&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#字体转换&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.13&lt;/span&gt; 13. 字体转换&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;在Markdown中可以方便的输入数学公式.现在将Markdown中数学公式总结一下.&lt;/p&gt;
&lt;div id=&#34;如何插入公式&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1&lt;/span&gt; 1. 如何插入公式&lt;/h3&gt;
&lt;p&gt;包括两种,一种是在行内插入,一种是独立公式(单独一行).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;行中插入公式(&lt;code&gt;$E = mc^2$&lt;/code&gt;): &lt;span class=&#34;math inline&#34;&gt;\(E = mc^2\)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;独立公式:&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;$$E = mc^2$$&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[E = mc^2\]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;上下标&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.2&lt;/span&gt; 2. 上下标&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;^&lt;/code&gt;上标,&lt;code&gt;_&lt;/code&gt;下标.如果上下标内容多于一个字符,需要使用&lt;code&gt;{}&lt;/code&gt;将其扩大为一个整体.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;例子&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$$ x^{y^z}=(1+{\rm e}^x)^{-2xy^w} $$&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[ x^{y^z}=(1+{\rm e}^x)^{-2xy^w} \]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;括号和分隔符&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.3&lt;/span&gt; 3. 括号和分隔符&lt;/h3&gt;
&lt;p&gt;()、[] 和 | 表示符号本身，使用 {} 来表示{} 。当要显示大号的括号或分隔符时，要用 和 命令。&lt;/p&gt;
&lt;p&gt;一些特殊的例子:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\langle&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\langle\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\rangle&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\rangle\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\lceil&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\rceil\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\lfloor&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\lfloor\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\lbrace&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\lbrace\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;例子&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$$ f(x,y,z) = 3y^2z \left( 3+\frac{7x+5}{1+y^2} \right) $$&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[ f(x,y,z) = 3y^2z \left( 3+\frac{7x+5}{1+y^2}\right) \]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;分数&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.4&lt;/span&gt; 4. 分数&lt;/h3&gt;
&lt;p&gt;通常使用  命令产生一个分数，分数可嵌套。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;例子&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$$\frac{a-1}{b-1} \quad and \quad {a+1\over b+1}$$&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\frac{a-1}{b-1}\]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;开方&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.5&lt;/span&gt; 5. 开方&lt;/h3&gt;
&lt;p&gt;使用  命令输入开方。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;例子&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$$\sqrt{2} \quad and \quad \sqrt[n]{3}$$&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\sqrt{2} \quad and \quad \sqrt[n]{3}\]&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;其中.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;省略号&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.6&lt;/span&gt; 6. 省略号&lt;/h3&gt;
&lt;p&gt;数学公式中常见的省略号有两种，表示与文本底线对齐的省略号，表示与文本中线对齐的省略号。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;例子&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$$f(x_1,x_2,\ldots ,x_n) = x_1^2 + x_2^2 + \cdots + x_n^2$$&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[f(x_1,x_2,\ldots ,x_n) = x_1^2 + x_2^2 + \cdots + x_n^2\]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;矢量&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.7&lt;/span&gt; 7. 矢量&lt;/h3&gt;
&lt;p&gt;使用  来自动产生一个矢量。也可以使用 等命令自定义字母上方的符号。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;例子&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$$\vec{a} \cdot \vec{b}=0$$&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\vec{a} \cdot \vec{b}=0\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其中(&lt;span class=&#34;math inline&#34;&gt;\(\cdot\)&lt;/span&gt;).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;例子&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$$\overleftarrow{xy} \quad and \quad \overleftrightarrow{xy} \quad and \quad \overrightarrow{xy}$$&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\overleftarrow{xy} \quad and \quad \overleftrightarrow{xy} \quad and \quad \overrightarrow{xy}\]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;积分&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.8&lt;/span&gt; 8. 积分&lt;/h3&gt;
&lt;p&gt;使用 _积分下限^积分上限 {被积表达式} 来输入一个积分。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;例子&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$$\int_0^1 {x^2} \,{\rm d}x$$&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\int_0^1 {x^2} dx\]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;极限预算&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.9&lt;/span&gt; 9. 极限预算&lt;/h3&gt;
&lt;p&gt;使用 _{变量 表达式} 表达式 来输入一个极限。如有需求，可以更改 符号至任意符号。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;例子&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$$ \lim_{n \to +\infty} \frac{1}{n(n+1)} \quad and \quad \lim_{x\leftarrow{示例}} \frac{1}{n(n+1)} $$&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[ \lim_{n \to +\infty} \frac{1}{n(n+1)} \quad and \quad \lim_{x\leftarrow{示例}} \frac{1}{n(n+1)} \]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其中,都表示向右的箭头.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;例子&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$$\to \quad and \quad \rightarrow$$&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\to \quad and \quad \rightarrow\]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;累加累乘公式&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.10&lt;/span&gt; 10. 累加,累乘公式&lt;/h3&gt;
&lt;p&gt;使用 _{下标表达式}^{上标表达式} {累加表达式} 来输入一个累加。
与之类似，使用 来分别输入累乘、并集和交集。
此类符号在行内显示时上下标表达式将会移至右上角和右下角。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;例子&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$$\sum_{i=1}^n \frac{1}{i^2} \quad and \quad \prod_{i=1}^n \frac{1}{i^2} \quad and \quad \bigcup_{i=1}^{2} R$$&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\sum_{i=1}^n \frac{1}{i^2} \quad and \quad \prod_{i=1}^n \frac{1}{i^2} \quad and \quad \bigcup_{i=1}^{2} R\]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;希腊字母&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.11&lt;/span&gt; 11. 希腊字母&lt;/h3&gt;
&lt;p&gt;输入&lt;code&gt;\小写希腊字母英文全称&lt;/code&gt;和&lt;code&gt;\首字母大写希腊字母英文全称&lt;/code&gt;来分别输入小写和大写希腊字母。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;对于大写希腊字母与现有字母相同的，直接输入大写字母即可。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\alpha&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\alpha\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;A&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\beta&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;B&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(B\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\gamma&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\gamma\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Gamma&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\Gamma\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\delta&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\delta\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Delta&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\Delta\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\epsilon&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\epsilon\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;E&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(E\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\zeta&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\zeta\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Z&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(Z\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\eta&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\eta\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;H&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(H\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\theta&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\theta\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Theta&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\Theta\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\iota&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\iota\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;I&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(I\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\kappa&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\kappa\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;K&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\lambda&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\lambda\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Lambda&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\Lambda\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\mu&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;M&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(M\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\nu&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\nu\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;N&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\xi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\xi\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Xi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(Xi\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;o&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(o\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;O&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(O\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\pi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\pi\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Pi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\Pi\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\rho&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\rho\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;P&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\sigma&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sigma\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Sigma&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\Sigma\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\tau&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\tau\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;T&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\upsilon&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\upsilon\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Upsilon&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\Upsilon\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\phi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\phi\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Phi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\Phi\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\chi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\chi\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Chi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\Chi\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\psi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\psi\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Psi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\Psi\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\omega&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\omega\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Omega&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\Omega\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;运算符&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.12&lt;/span&gt; 12. 运算符&lt;/h3&gt;
&lt;div id=&#34;关系运算符&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.12.1&lt;/span&gt; (1) 关系运算符&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\pm&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\pm\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\times&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\times\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\div&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\div\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\mid&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\mid\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\nmid&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\nmid\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\cdot&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\cdot\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\circ&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\circ\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\ast&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\ast\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\bigodot&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\bigodot\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\bigotimes&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\bigotimes\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\bigoplus&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\bigoplus\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\leq&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\leq\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\geq&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\geq\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\neq&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\neq\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\approx&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\approx\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\equiv&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\equiv\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\sum&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sum\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\prod&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\prod\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\coprod&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\coprod\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\backslash&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\backslash\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;集合运算符&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.12.2&lt;/span&gt; (2) 集合运算符&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\emptyset&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\emptyset\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\in&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\in\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\notin&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\notin\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\subset&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\subset\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\supset&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\supset\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\subseteq&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\subseteq\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\supseteq&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\supseteq\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\bigcap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\bigcap\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\bigcup&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\bigcup\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\bigvee&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\bigvee\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\bigwedge&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\bigwedge\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\biguplus&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\biguplus\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;对数运算符&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.12.3&lt;/span&gt; (3) 对数运算符&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\log&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\log\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\lg&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\lg\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\ln&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\ln\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;三角运算符&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.12.4&lt;/span&gt; (4) 三角运算符&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;30^\circ&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(30^\circ\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\bot&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\bot\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\angle A&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\angle A\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\sin&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sin\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\cos&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\cos\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\csc&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\csc\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\sec&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sec\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\cot&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\cot\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;字体转换&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.13&lt;/span&gt; 13. 字体转换&lt;/h3&gt;
&lt;p&gt;若要对公式的某一部分字符进行字体转换，可以用&lt;code&gt;{\字体 {需转换的部分字符}}&lt;/code&gt;命令，其中 &lt;code&gt;\字体&lt;/code&gt; 部分可以参照下表选择合适的字体。一般情况下，公式默认为意大利体。&lt;/p&gt;
&lt;p&gt;示例中&lt;code&gt;全部大写&lt;/code&gt;的字体仅大写可用。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\rm&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\rm {Sample}\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;罗马体&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\it&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\it {Sample}\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;意大利斜体&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\bf&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\bf {Sample}\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;粗体&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>使用R爬取HMDB和KEGG数据库</title>
      <link>/post/2016-12-03-keggandhmdb/</link>
      <pubDate>Fri, 25 Nov 2016 00:00:00 +0000</pubDate>
      <guid>/post/2016-12-03-keggandhmdb/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#r语言爬虫&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1&lt;/span&gt; &lt;strong&gt;R语言爬虫&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#爬取kegg通路信息&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.2&lt;/span&gt; &lt;strong&gt;爬取KEGG通路信息&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#爬取hmdb通路信息&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.3&lt;/span&gt; &lt;strong&gt;爬取HMDB通路信息&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#爬取hmdb代谢物信息&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.4&lt;/span&gt; &lt;strong&gt;爬取HMDB代谢物信息&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;r语言爬虫&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1&lt;/span&gt; &lt;strong&gt;R语言爬虫&lt;/strong&gt;&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;虽然相对于python来说，R语言爬虫并不是那么流行，但是对于比较小的数据爬取量，使用R还是很方便的。R的数据爬取比较流行的是利用XML和RCurl包进行爬取，在这篇博客里面，我就利用XML和RCurl包进行KEGG和HMDB的数据爬取。&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;爬取kegg通路信息&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.2&lt;/span&gt; &lt;strong&gt;爬取KEGG通路信息&lt;/strong&gt;&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;因为我需要的信息是KEGG的通路信息，比较简单，也就是每个通路包含哪些代谢物，只要人的metaboloic pathway，因此，我需要先将KEGG中的通路的网页链接拿到。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;library(XML)
library(RCurl)
##从kegg主页上抓取代谢通路的url
URL = getURL(&amp;quot;http://www.genome.jp/kegg/pathway.html#global&amp;quot;)
doc &amp;lt;- htmlParse(URL,encoding=&amp;quot;utf-8&amp;quot;)
xpath.a &amp;lt;- &amp;quot;//a/@href&amp;quot;
node &amp;lt;- getNodeSet(doc, xpath.a)
url1 &amp;lt;- sapply(node, as.character)

xpath.b &amp;lt;- &amp;quot;//a[@href]&amp;quot;
name &amp;lt;- getNodeSet(doc, xpath.b)
name &amp;lt;- sapply(name, xmlValue)

name2 &amp;lt;- name[59:247]
url2 &amp;lt;- url1[59:247]

url3 &amp;lt;- url2[grep(&amp;quot;show&amp;quot;, url2)]

pathwat.name &amp;lt;- NULL
metabolite.id &amp;lt;- list()
metabolite.name &amp;lt;- list()
for (i in 1:length(url3)) {
  cat(paste(i,&amp;quot;/&amp;quot;,length(url3)))
  cat(&amp;quot;\n&amp;quot;)
  URL &amp;lt;- paste(&amp;quot;http://www.genome.jp&amp;quot;, url3[i], sep = &amp;quot;&amp;quot;)
  URL = getURL(URL)
  doc&amp;lt;-htmlParse(URL,encoding=&amp;quot;utf-8&amp;quot;)
  xpath &amp;lt;- &amp;quot;//option[@value=&amp;#39;hsa&amp;#39;]&amp;quot;
  node&amp;lt;-getNodeSet(doc, xpath)
  if (length(node) ==0 ) {
    cat(&amp;quot;No human pathwat.&amp;quot;)
    next()
  }else{
    URL &amp;lt;- paste(&amp;quot;http://www.genome.jp&amp;quot;, url3[i], sep = &amp;quot;&amp;quot;)
    URL &amp;lt;- gsub(pattern = &amp;quot;map=map&amp;quot;, replacement = &amp;quot;map=hsa&amp;quot;, x = URL)
    doc&amp;lt;-htmlParse(URL,encoding=&amp;quot;utf-8&amp;quot;)
    xpath1 &amp;lt;- &amp;quot;//title&amp;quot;
    node&amp;lt;-getNodeSet(doc, xpath1)
    pathway.name[i] &amp;lt;- xmlValue(node[[1]])
    pathway.name[i] &amp;lt;- substr(pathway.name[i], start = 2, stop = nchar(pathway.name[i])-1)

    xpath2 &amp;lt;- &amp;quot;//area[@shape=&amp;#39;circle&amp;#39;]/@title&amp;quot;
    node&amp;lt;-getNodeSet(doc, xpath2)
    metabolite &amp;lt;- lapply(node, function(x) as.character(x))
    metabolite.name[[i]] &amp;lt;- substr(metabolite, start = 9, nchar(metabolite)-1)
    metabolite.id[[i]] &amp;lt;- substr(metabolite, start = 1, stop = 6)
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;下面对爬取到的代谢通路进行筛选。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;idx &amp;lt;- which(!is.na(pathway.name))
pathway.name1 &amp;lt;- pathway.name[idx]
metabolite.id1 &amp;lt;- metabolite.id[idx]
metabolite.name1 &amp;lt;- metabolite.name[idx]

pathway.name2 &amp;lt;- pathway.name1[-c(83,84)]
metabolite.id2 &amp;lt;- metabolite.id1[-c(83,84)]
metabolite.name2 &amp;lt;- metabolite.name1[-c(83,84)]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将爬取到的信息保存输出。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;met.name &amp;lt;- NULL
met.id &amp;lt;- NULL
path.name &amp;lt;- NULL
for(i in 1:length(pathway.name2)) {
  met.name[i] &amp;lt;- paste(metabolite.name2[[i]], collapse = &amp;quot;;&amp;quot;)
  met.id[i] &amp;lt;- paste(metabolite.id2[[i]], collapse = &amp;quot;;&amp;quot;)
  path.name[i] &amp;lt;- gsub(pattern = &amp;quot;KEGG PATHWAY: &amp;quot;, &amp;quot;&amp;quot;, pathway.name2[i])
  path.name[i] &amp;lt;- substr(path.name[i], start = 1, stop = nchar(path.name[i])-23)
}


kegg &amp;lt;- data.frame(path.name, met.name, met.id)
write.csv(kegg, &amp;quot;kegg.csv&amp;quot;, row.names = F)

save(path.name, file = &amp;quot;path.name&amp;quot;)
save(met.name, file = &amp;quot;met.name&amp;quot;)
save(met.id, file = &amp;quot;met.id&amp;quot;)

kegg.met &amp;lt;- list()
kegg.met[[2]] &amp;lt;- sapply(path.name, list)
kegg.met[[1]] &amp;lt;- metabolite.name2
kegg.met[[3]] &amp;lt;- metabolite.id2

names(kegg.met) &amp;lt;- c(&amp;quot;gs&amp;quot;, &amp;quot;pathwaynames&amp;quot;, &amp;quot;metid&amp;quot;)

save(kegg.met, file = &amp;quot;kegg.met&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;爬取hmdb通路信息&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.3&lt;/span&gt; &lt;strong&gt;爬取HMDB通路信息&lt;/strong&gt;&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;首先爬取HMDB的通路信息。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;##抓取HMDB通路信息
library(XML)
library(RCurl)

hmdb.main &amp;lt;- &amp;quot;http://www.hmdb.ca/pathways?page=&amp;quot;
hmdb.main &amp;lt;- paste(hmdb.main, c(2:46), sep = &amp;quot;&amp;quot;)
hmdb.main &amp;lt;- c(&amp;quot;http://www.hmdb.ca/pathways&amp;quot;, hmdb.main)

##从HMDB主页上抓取代谢通路的url
path.name &amp;lt;- list()
metabolite.id &amp;lt;- list()
spec &amp;lt;- list()
path.class &amp;lt;- list()
for (i in 40:length(hmdb.main)) {
  cat(paste(&amp;quot;page&amp;quot;,i))
  cat(&amp;quot;:&amp;quot;)
  URL = getURL(hmdb.main[i])
  doc&amp;lt;-htmlParse(URL,encoding=&amp;quot;utf-8&amp;quot;)
  xpath1 &amp;lt;- &amp;quot;//div[@class=&amp;#39;panel-heading&amp;#39;]&amp;quot;
  node1 &amp;lt;- getNodeSet(doc, xpath1)
  pathway.name &amp;lt;- sapply(node1, xmlValue)

  cat(paste(length(pathway.name), &amp;quot;pathways&amp;quot;))
  cat(&amp;quot;\n&amp;quot;)

  path.name[[i]] &amp;lt;- pathway.name

  xpath2 &amp;lt;- &amp;quot;//div[@class=&amp;#39;panel-body&amp;#39;]&amp;quot;
  node2 &amp;lt;- getNodeSet(doc, xpath2)

  metabolite &amp;lt;- sapply(node2, xmlValue)
  metabolite &amp;lt;- unname(sapply(metabolite, function(x) {gsub(&amp;quot;Show&amp;quot;, &amp;quot; &amp;quot;, x)}))

  idx &amp;lt;- sapply(metabolite, function(x) {gregexpr(&amp;quot;HMDB[0-9]{5}&amp;quot;, x)})

  met.id &amp;lt;- list()
  for (j in 1:length(idx)) {
    id &amp;lt;- NULL
    for (k in 1:length(idx[[j]])) {
      id[k] &amp;lt;- substr(metabolite[j], idx[[j]][k], idx[[j]][k]+8)
    }
    met.id[[j]] &amp;lt;- id
  }

  metabolite.id[[i]] &amp;lt;- met.id

  xpath.a &amp;lt;- &amp;quot;//a[@class=&amp;#39;link-out&amp;#39;]/@href&amp;quot;
  node&amp;lt;-getNodeSet(doc, xpath.a)

  url1 &amp;lt;- sapply(node, as.character)
  url1 &amp;lt;- substr(url1, start = 1, stop = 29)
  url1 &amp;lt;- url1[!duplicated(url1)]


  ###获取通路的人种和类别
  species &amp;lt;- NULL
  metabolic &amp;lt;- NULL
  for (t in 1:length(url1)) {
    cat(paste(&amp;quot;t:&amp;quot;,t));cat(&amp;quot; &amp;quot;)
    URL = getURL(url1[t])
    doc &amp;lt;- htmlParse(URL,encoding=&amp;quot;utf-8&amp;quot;)
    xpath &amp;lt;- &amp;quot;//div[@class=&amp;#39;species&amp;#39;]/text()&amp;quot;
    node &amp;lt;- getNodeSet(doc, xpath)
    species[t] &amp;lt;- xmlValue(node[[1]])

    xpath &amp;lt;- &amp;quot;//div[@id=&amp;#39;des_subject&amp;#39;]/text()&amp;quot;
    node &amp;lt;- getNodeSet(doc, xpath)
    metabolic[t] &amp;lt;- xmlValue(node[[1]])

  }

  spec[[i]] &amp;lt;- species
  path.class[[i]] &amp;lt;- metabolic

}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;对爬取到的代谢通路进行筛选。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;save(path.name, file = &amp;quot;path.name&amp;quot;)
save(metabolite.id, file = &amp;quot;metabolite.id&amp;quot;)
save(spec, file = &amp;quot;spec&amp;quot;)
save(path.class, file = &amp;quot;path.class&amp;quot;)


pathway.name &amp;lt;- NULL
metabolite.ID &amp;lt;- list()
species &amp;lt;- NULL
pathway.class &amp;lt;- NULL
for (i in 1:length(path.name)) {
  pathway.name &amp;lt;- c(pathway.name, path.name[[i]])
  metabolite.ID &amp;lt;- c(metabolite.ID, metabolite.id[[i]])
  species &amp;lt;- c(species, spec[[i]])
  pathway.class &amp;lt;- c(pathway.class, path.class[[i]])
}


pathway.class &amp;lt;- substr(x = pathway.class, 1, regexpr(&amp;quot;\\\n&amp;quot;, pathway.class)-1)

metabolite.name &amp;lt;- list()
for (i in 1:length(metabolite.ID)) {
  id &amp;lt;- metabolite.ID[[i]]
  idx &amp;lt;- match(id, hmdbdatabase[,1])
  name &amp;lt;- hmdbdatabase[idx,2]
  metabolite.name[[i]] &amp;lt;- name
}

a &amp;lt;- unlist(lapply(metabolite.name, function(x) {paste(x, collapse = &amp;quot;;&amp;quot;)}))
b &amp;lt;- unlist(lapply(metabolite.ID, function(x) {paste(x, collapse = &amp;quot;;&amp;quot;)}))

idx &amp;lt;- grep(&amp;quot;Metabolic&amp;quot;, pathway.class)

metabolite.name &amp;lt;- metabolite.name[idx]
metabolite.ID &amp;lt;- metabolite.ID[idx]
pathway.name &amp;lt;- pathway.name[idx]
pathway.class &amp;lt;- pathway.class[idx]
species &amp;lt;- species[idx]

hmdb.pathway &amp;lt;- data.frame(pathway.name, pathway.class,a, b)[idx,]
write.csv(hmdb.pathway, &amp;quot;hmdb.pathway.csv&amp;quot;)

a &amp;lt;- list()
for (i in 1:length(pathway.name)) {
  a[[i]] &amp;lt;- pathway.name[i]
}

pathway.name &amp;lt;- a

hmdb.met &amp;lt;- list(gs = metabolite.name, pathwaynames = pathway.name, id = metabolite.ID)
save(hmdb.met, file = &amp;quot;hmdb.met&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;爬取hmdb代谢物信息&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.4&lt;/span&gt; &lt;strong&gt;爬取HMDB代谢物信息&lt;/strong&gt;&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;首先，获得所有代谢物的页面链接。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;###抓取HMDB代谢物信息
library(XML)
library(RCurl)

hmdb.main &amp;lt;- &amp;quot;http://www.hmdb.ca/metabolites?c=hmdb_id&amp;amp;d=up&amp;amp;page=&amp;quot;
hmdb.main &amp;lt;- paste(hmdb.main, c(2:1681), sep = &amp;quot;&amp;quot;)
hmdb.main &amp;lt;- c(&amp;quot;http://www.hmdb.ca/metabolites&amp;quot;, hmdb.main)

##从HMDB主页上抓取代谢物的url
url &amp;lt;- NULL
for (i in 1:length(hmdb.main)) {
  cat(i)
  cat(&amp;quot; &amp;quot;)
  URL = getURL(hmdb.main[i])
  doc&amp;lt;-htmlParse(URL,encoding=&amp;quot;utf-8&amp;quot;)
  xpath &amp;lt;- &amp;quot;//a[@href]/@href&amp;quot;
  node&amp;lt;-getNodeSet(doc, xpath)
  url1 &amp;lt;- sapply(node, as.character)
  url1 &amp;lt;- url1[grep(&amp;quot;metabolites/HMDB&amp;quot;, url1)]
  url1 &amp;lt;- unique(url1)
  url &amp;lt;- c(url, url1)
}

url1 &amp;lt;- paste(&amp;quot;http://www.hmdb.ca/&amp;quot;,url, sep = &amp;quot;&amp;quot;)
save(url1, file = &amp;quot;url1&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;下面开始进行代谢物信息爬取。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;library(mailR)
for (i in 1:400) {
  cat(paste((i-1)*100+1,&amp;quot;-&amp;quot;,i*100,&amp;quot;/&amp;quot;, length(url1), sep = &amp;quot;&amp;quot;))
  cat(&amp;quot;\n&amp;quot;)
  URL &amp;lt;- getURL(url1[((i-1)*100+1):(i*100)])
  doc &amp;lt;- htmlParse(URL, encoding=&amp;quot;utf-8&amp;quot;)
  xpath1 &amp;lt;- &amp;quot;//tr&amp;quot;
  node1 &amp;lt;- getNodeSet(doc, xpath1)
  node1 &amp;lt;- sapply(node1, xmlValue)

  HMDB_ID[((i-1)*100+1):(i*100)] &amp;lt;-
    gsub(pattern = &amp;quot;HMDB ID&amp;quot;, replacement = &amp;quot;&amp;quot;,node1[grep(&amp;quot;HMDB ID&amp;quot;, node1)])

  Common_Name[((i-1)*100+1):(i*100)] &amp;lt;-
    gsub(&amp;quot;Common Name&amp;quot;, &amp;quot;&amp;quot;,node1[grep(&amp;quot;Common Name&amp;quot;, node1)])

  temp &amp;lt;- gsub(&amp;quot;SynonymsValueSource&amp;quot;, &amp;quot;&amp;quot;,node1[grep(&amp;quot;Synonyms&amp;quot;, node1)])
  temp &amp;lt;- gsub(&amp;quot;Generator&amp;quot;, &amp;quot;;&amp;quot;,temp)
  temp &amp;lt;- gsub(&amp;quot;ChEMBL&amp;quot;, &amp;quot;;&amp;quot;,temp)
  temp &amp;lt;- gsub(&amp;quot;ChEBI&amp;quot;, &amp;quot;;&amp;quot;,temp)
  Synonyms[((i-1)*100+1):(i*100)] &amp;lt;-
    gsub(&amp;quot;HMDB&amp;quot;, &amp;quot;;&amp;quot;,temp)

  Chemical_Formula[((i-1)*100+1):(i*100)] &amp;lt;-
    gsub(&amp;quot;Chemical Formula&amp;quot;, &amp;quot;&amp;quot;,node1[grep(&amp;quot;Chemical Formula&amp;quot;, node1)])

  Monoisotopic_Molecular_Weight[((i-1)*100+1):(i*100)] &amp;lt;-
    gsub(&amp;quot;Monoisotopic Molecular Weight&amp;quot;, &amp;quot;&amp;quot;,node1[grep(&amp;quot;Monoisotopic Molecular Weight&amp;quot;, node1)])

  IUPAC_Name[((i-1)*100+1):(i*100)] &amp;lt;-
    gsub(&amp;quot;IUPAC Name&amp;quot;, &amp;quot;&amp;quot;,node1[grep(&amp;quot;IUPAC Name&amp;quot;, node1)])

  Traditional_Name[((i-1)*100+1):(i*100)] &amp;lt;-
    gsub(&amp;quot;Traditional Name&amp;quot;, &amp;quot;&amp;quot;,node1[grep(&amp;quot;Traditional Name&amp;quot;, node1)])

  CAS_Registry_Number[((i-1)*100+1):(i*100)] &amp;lt;-
    gsub(&amp;quot;CAS Registry Number&amp;quot;, &amp;quot;&amp;quot;,node1[grep(&amp;quot;CAS Registry Number&amp;quot;, node1)])

  Origin[((i-1)*100+1):(i*100)] &amp;lt;-
    gsub(&amp;quot;Origin&amp;quot;, &amp;quot;&amp;quot;,node1[grep(&amp;quot;Origin&amp;quot;, node1)])

  path &amp;lt;- gsub(&amp;quot;PathwaysNameSMPDB LinkKEGG Link&amp;quot;, &amp;quot;&amp;quot;,node1[grep(&amp;quot;Pathways&amp;quot;, node1)])
  Pathways[((i-1)*100+1):(i*100)] &amp;lt;-
    substr(path, 1, stop = regexpr(&amp;quot;SMP&amp;quot;, path)-1)

  ##每100次保存一次
  if (i*100 %in% seq(100, 60000, by = 100)) {
    cat(&amp;quot;save data...\n&amp;quot;)
    save(HMDB_ID,
         Common_Name,
         Synonyms,
         Chemical_Formula,
         Monoisotopic_Molecular_Weight,
         IUPAC_Name,
         Traditional_Name,
         CAS_Registry_Number,
         Origin,
         Pathways,
         file = paste(&amp;quot;hmdb.data&amp;quot;,i*100))

    send.mail(from = &amp;quot;yourmail1@163.com&amp;quot;,
              to = c(&amp;quot;youmail20@163.com&amp;quot;),
              subject = paste(&amp;quot;WZZ GO ON:&amp;quot;, i),
              body = paste(&amp;quot;WZZ still go on&amp;quot;, i),
              smtp = list(host.name = &amp;quot;smtp.163.com&amp;quot;, port = 465, user.name = &amp;quot;yourmail1&amp;quot;, passwd = &amp;quot;passward&amp;quot;, ssl = TRUE),
              authenticate = TRUE,
              send = TRUE)
  }

}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;因为代谢物信息比较大，可能需要一晚上，因此想到了没爬取100个，就给自己发一封邮件，来对程序进行监控。&lt;/p&gt;
&lt;p&gt;写的比较粗糙，有时间再好好修改一下。&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Metabolic health center conference</title>
      <link>/post/2020-02-28-metabolic-health-center/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/post/2020-02-28-metabolic-health-center/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#christopher-newgard&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; Christopher Newgard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;Clinical Metabolomics&lt;/p&gt;
&lt;div id=&#34;christopher-newgard&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; Christopher Newgard&lt;/h1&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
