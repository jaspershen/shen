<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog | Xiaotao Shen</title>
    <link>/post/</link>
      <atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Blog</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>©Xiaotao Shen2019</copyright><lastBuildDate>Fri, 22 Nov 2019 00:00:00 +0000</lastBuildDate>
    <item>
      <title>Python中如何创建函数</title>
      <link>/post/2019-11-22-python-function/</link>
      <pubDate>Fri, 22 Nov 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-11-22-python-function/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#自定义函数&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; 自定义函数&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#给函数编写文档&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1&lt;/span&gt; 给函数编写文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#作用域&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.2&lt;/span&gt; 作用域&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#关键字参数和默认值&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.3&lt;/span&gt; 关键字参数和默认值&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#收集参数&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.4&lt;/span&gt; 收集参数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#分配参数&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.5&lt;/span&gt; 分配参数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#作用域-1&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.6&lt;/span&gt; 作用域&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;自定义函数&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; 自定义函数&lt;/h1&gt;
&lt;p&gt;Python中使用&lt;code&gt;def&lt;/code&gt;语句来创建自定义函数.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;def hello(name):
  print(&amp;quot;hello&amp;quot;, name)
#hello()  
hello(&amp;quot;shenxiaotao&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## hello shenxiaotao&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;和R一样,可以给参数默认值.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;def hello(name = &amp;quot;xiaotao&amp;quot;):
  print(&amp;quot;hello&amp;quot;, name)
#hello()  
hello()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## hello xiaotao&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;给函数编写文档&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1&lt;/span&gt; 给函数编写文档&lt;/h2&gt;
&lt;p&gt;在&lt;code&gt;def&lt;/code&gt;语句后面,就可以添加该函数的文档说明.称之为&lt;strong&gt;文档字符串&lt;/strong&gt;(docstring).&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;def square(x):
  &amp;#39;Calculates the square of the number x.&amp;#39;
  return x * x&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;文档字符串如果只有一行,可以使用引号括起来,如果有多行,需要使用三引号括起来.&lt;/p&gt;
&lt;p&gt;通过下列语句访问文档字符串.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;square.__doc__&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;Calculates the square of the number x.&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;_doc_&lt;/code&gt;其实时函数一个方法.双下划线代表他是函数的一个特殊属性.&lt;/p&gt;
&lt;p&gt;也可以使用&lt;code&gt;help()&lt;/code&gt;函数获得信息.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;help(square)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Help on function square in module __main__:
## 
## square(x)
##     Calculates the square of the number x.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;一个特殊的语句,&lt;code&gt;return&lt;/code&gt;跟R中一样,也是可以提前结束函数的.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;def test():
  print(&amp;quot;test&amp;quot;)
  return
  print(&amp;quot;test2&amp;quot;)
  
test()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## test&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;在def语句中，位于函数名后面的变量通常称为形参，而调用函数时提供的值称为实参，但本书基本不对此做严格的区分。在很重要的情况下，我会将实参称为值，以便将其与类似于变量的形参区分开来。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;作用域&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2&lt;/span&gt; 作用域&lt;/h2&gt;
&lt;p&gt;跟R一样,python中也是存在局部和全局作用域,在函数内部对变量进行操作都是在该函数的局部作用域进行操作的,不会对函数外部的其他局部作用域以及全局作用域造成影响.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;使用切片可以对列表等创建符本,这样可以避免在修改某一个变量时,对该变量关联的列表也发生了变化.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;函数内的局部名称（包括参数）会与函数外的名称（即全局名称）冲突吗？答案是不会。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;关键字参数和默认值&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.3&lt;/span&gt; 关键字参数和默认值&lt;/h2&gt;
&lt;p&gt;使用名称指定的参数称为关键字参数，主要优点是有助于澄清各个参数的作用。关键字参数最大的优点在于，可以指定默认值。&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;收集参数&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.4&lt;/span&gt; 收集参数&lt;/h2&gt;
&lt;p&gt;在R中,我们知道,有时候需要用户提供长度不同的参数,这在R中,是通过使用&lt;code&gt;...&lt;/code&gt;来实现的,那再python中呢?是通过在参数名字前加一个&lt;code&gt;*&lt;/code&gt;实现的.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;def print_params(*params):
  print(params)

print_params(&amp;quot;shen&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## (&amp;#39;shen&amp;#39;,)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print_params(&amp;quot;shen&amp;quot;, &amp;quot;wang&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## (&amp;#39;shen&amp;#39;, &amp;#39;wang&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print_params(1, 2, 3)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## (1, 2, 3)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果某个参数前面加了星号,那么该参数下的所有实参,会被放在一个元组中.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;def print_params_2(title, *params):
  print(title)
  print(params)
  
print_params_2(&amp;#39;Params:&amp;#39;, 1, 2, 3)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Params:
## (1, 2, 3)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;带星号的参数将会收集之后的所有输入的参数.&lt;/p&gt;
&lt;p&gt;如果需要将带星号参数放在中间,那么其后面的参数在调用时,必须指明形参.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;def in_the_middle(x, *y, z):
  print(x, y, z)

in_the_middle(1,2,3, z = 4)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 1 (2, 3) 4&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;型号时不会收集关键字参数的,如果要收集,可以使用两个星号.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;def print_params_3(**params):
  print(params)
  
print_params_3(x = 1, y = 2, z = 3)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## {&amp;#39;x&amp;#39;: 1, &amp;#39;y&amp;#39;: 2, &amp;#39;z&amp;#39;: 3}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以看到,这时候将其作为字典使用.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;分配参数&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.5&lt;/span&gt; 分配参数&lt;/h2&gt;
&lt;p&gt;前面介绍了如何将参数收集到元组和字典中，但用同样的两个运算符（&lt;code&gt;*和**&lt;/code&gt;）也可执行相反的操作。&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;def add(x, y):
  return x + y
  
params = (1, 2)

add(*params)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 3&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;作用域-1&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.6&lt;/span&gt; 作用域&lt;/h2&gt;
&lt;p&gt;变量到底是什么呢？可将其视为指向值的名称。因此，执行赋值语句x=1后，名称x指向值1。这几乎与使用字典时一样（字典中的键指向值），只是你使用的是“看不见”的字典。&lt;/p&gt;
&lt;p&gt;这种“看不见的字典”称为命名空间或作用域。那么有多少个命名空间呢？除全局作用域外，每个函数调用都将创建一个。&lt;/p&gt;
&lt;p&gt;在函数内使用的变量称为局部变量（与之相对的是全局变量）。参数类似于局部变量，因此参数与全局变量同名不会有任何问题。&lt;/p&gt;
&lt;p&gt;到目前为止一切顺利。但如果要在函数中访问全局变量呢？如果只是想读取这种变量的值（不重新关联它），通常不会有任何问题。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;但是,在函数中访问全局变量是众多bug的根源。务必慎用全局变量。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;读取全局变量的值通常不会有问题，但还是存在出现问题的可能性。如果有一个局部变量或参数与你要访问的全局变量同名，就无法直接访问全局变量，因为它被局部变量遮住了。&lt;/p&gt;
&lt;p&gt;如果需要，可使用函数&lt;code&gt;globals&lt;/code&gt;来访问全局变量。这个函数类似于&lt;code&gt;vars&lt;/code&gt;，返回一个包含全局变量的字典。（&lt;code&gt;locals&lt;/code&gt;返回一个包含局部变量的字典。）&lt;/p&gt;
&lt;p&gt;重新关联全局变量（使其指向新值）是另一码事。在函数内部给变量赋值时，该变量默认为局部变量，除非你明确地告诉Python它是全局变量。那么如何将这一点告知Python呢？&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;x = 1
def change_global():
  global x
  x = x + 1

change_global()
x&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以看到,需要使用&lt;code&gt;global&lt;/code&gt;语句来申明,从而改变全局变量.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Python for genomics class day04</title>
      <link>/post/2019-11-21-python-for-genomics-class-day04/</link>
      <pubDate>Thu, 21 Nov 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-11-21-python-for-genomics-class-day04/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#条件循环及其他语句&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; 条件,循环及其他语句&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#print和import函数&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1&lt;/span&gt; &lt;code&gt;print&lt;/code&gt;和&lt;code&gt;import&lt;/code&gt;函数&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#打印多个字符串&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1.1&lt;/span&gt; 打印多个字符串&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#使用import导入模块&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1.2&lt;/span&gt; 使用&lt;code&gt;import&lt;/code&gt;导入模块&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#python中的赋值&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.2&lt;/span&gt; Python中的赋值&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#序列解包&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.2.1&lt;/span&gt; 序列解包&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#链式赋值&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.2.2&lt;/span&gt; 链式赋值&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#增强赋值&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.2.3&lt;/span&gt; 增强赋值&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#条件和条件语句&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.3&lt;/span&gt; 条件和条件语句&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#if语句&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.3.1&lt;/span&gt; If语句&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#else子句&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.3.2&lt;/span&gt; else子句&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#elif子句&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.3.3&lt;/span&gt; elif子句&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#更复杂的条件&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.3.4&lt;/span&gt; 更复杂的条件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#断点用于debug&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.3.5&lt;/span&gt; 断点用于debug&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#循环&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.4&lt;/span&gt; 循环&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#while循环&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.4.1&lt;/span&gt; &lt;code&gt;while&lt;/code&gt;循环&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#for循环&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.4.2&lt;/span&gt; &lt;code&gt;for&lt;/code&gt;循环&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#迭代字典&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.4.3&lt;/span&gt; 迭代字典&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#一些迭代工具&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.4.4&lt;/span&gt; 一些迭代工具&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#简单推导&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.5&lt;/span&gt; 简单推导&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#三条有用的语句&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.5.1&lt;/span&gt; 三条有用的语句&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#总结&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; 总结&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#新的函数&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.1&lt;/span&gt; 新的函数&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#课堂的示例代码&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3&lt;/span&gt; 课堂的示例代码&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#zip函数的例子&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.1&lt;/span&gt; &lt;code&gt;zip()&lt;/code&gt;函数的例子&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#给本地写文件的例子&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.2&lt;/span&gt; 给本地写文件的例子&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#循环语句例子&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.3&lt;/span&gt; 循环语句例子&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;条件循环及其他语句&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; 条件,循环及其他语句&lt;/h1&gt;
&lt;div id=&#34;print和import函数&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1&lt;/span&gt; &lt;code&gt;print&lt;/code&gt;和&lt;code&gt;import&lt;/code&gt;函数&lt;/h2&gt;
&lt;div id=&#34;打印多个字符串&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.1&lt;/span&gt; 打印多个字符串&lt;/h3&gt;
&lt;p&gt;需要将多个要打印的字符串用逗号隔开.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print(&amp;#39;Age:&amp;#39;, 42)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Age: 42&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;默认字符串之间的分隔符为空格.可以使用&lt;code&gt;sep&lt;/code&gt;参数自定义.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print(&amp;quot;I&amp;quot;, &amp;quot;am&amp;quot;, &amp;quot;Xiaotao Shen&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## I am Xiaotao Shen&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print(&amp;quot;I&amp;quot;, &amp;quot;am&amp;quot;, &amp;quot;Xiaotao Shen&amp;quot;, sep = &amp;quot;,&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## I,am,Xiaotao Shen&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;使用import导入模块&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.2&lt;/span&gt; 使用&lt;code&gt;import&lt;/code&gt;导入模块&lt;/h3&gt;
&lt;p&gt;导入模块一般使用如下语句:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import somemodule
from somemodule import somefunction
from somemodule import somefunction, anotherfunction, yetanotherfunction
from somemodule import *&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;最后一种是导入该模块的所有函数.&lt;/p&gt;
&lt;p&gt;如果某个函数名在两个模块种都有,那么使用第一种方式导入模块之后,使用下面方法进行调用:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;module1.function(...)
module2.function(...)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;另外一种方法就是在句尾添加as并指定别名.可以将模块或者函数命名为其他名字.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;import math as foobar
foobar.sqrt(4)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 2.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;from math import sqrt as foobar
foobar(4)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 2.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;from module1 import open as open1
from module2 import open as open2&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;python中的赋值&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2&lt;/span&gt; Python中的赋值&lt;/h2&gt;
&lt;div id=&#34;序列解包&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2.1&lt;/span&gt; 序列解包&lt;/h3&gt;
&lt;p&gt;同时给多个变量赋值:&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;x, y, z = 1, 2, 3
x&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;y&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 2&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;z&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 3&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;最大的用处在于可以同时交换多个变量的值:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;x, y = y, x
print(x, y, z)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 2 1 3&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;实际上,这里执行的操作称为序列解包(或可迭代对象解包)：将一个序列(或任何可迭代对象)解包,并将得到的值存储到一系列变量中.下面用例子进行解释.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;values = 1, 2, 3
x, y, z = values
print(x, y, z)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 1 2 3&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;只要是可以用于迭代的对象,比如元组,列表,字典等等,都可以用这种方法.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;##字典
scoundrel = {&amp;#39;name&amp;#39;: &amp;#39;Robin&amp;#39;, &amp;#39;girlfriend&amp;#39;: &amp;#39;Marion&amp;#39;}
scoundrel.popitem()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## (&amp;#39;girlfriend&amp;#39;, &amp;#39;Marion&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;key, value = scoundrel.popitem()
key&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;name&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;value

##列表&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;Robin&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;test = [&amp;quot;a&amp;quot;,&amp;quot;b&amp;quot;,&amp;quot;c&amp;quot;]
x, y, z = test
print(x, y, z)

##字符串&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## a b c&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;x,y,z,w = &amp;quot;shen&amp;quot;
print(x,y,z,w)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## s h e n&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;要解包的序列包含的元素个数必须与你在等号左边列出的目标个数相同,否则Python将引发异常.&lt;/p&gt;
&lt;p&gt;如果在左边的某个变量名前面加上型号(*),那么该变量会最终变为一个列表.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;a, *b, c = &amp;quot;abc&amp;quot;
a&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;a&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;b&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [&amp;#39;b&amp;#39;]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;c&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;c&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;链式赋值&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2.2&lt;/span&gt; 链式赋值&lt;/h3&gt;
&lt;p&gt;链式赋值是一种快捷方式,用于将多个变量关联到同一个值.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;x = y = somefunction()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;等价于:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;x = somefunction()
y = somefunction()&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;增强赋值&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2.3&lt;/span&gt; 增强赋值&lt;/h3&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;x = 1
x = x + 1
x&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;等价于下列代码:&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;x = 1
x += x
x&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这种写法在循环中见的会比较多.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;条件和条件语句&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.3&lt;/span&gt; 条件和条件语句&lt;/h2&gt;
&lt;p&gt;在python中被视为&lt;code&gt;False&lt;/code&gt;的内容:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;False None 0 &amp;quot;&amp;quot; () [] {}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;换而言之,标准值&lt;strong&gt;False和None、各种类型(包括浮点数、复数等)的数值0、空序列(如空字符串、空元组和空列表)以及空映射(如空字典)&lt;/strong&gt;都被视为假,而其他各种值都被视为真,包括特殊值True.&lt;/p&gt;
&lt;p&gt;布尔值&lt;code&gt;True&lt;/code&gt;和&lt;code&gt;False&lt;/code&gt;属于类型&lt;code&gt;bool&lt;/code&gt;,而&lt;code&gt;bool&lt;/code&gt;与&lt;code&gt;list&lt;/code&gt;、&lt;code&gt;str&lt;/code&gt;和&lt;code&gt;tuple&lt;/code&gt;一样,都是函数,可用来转换其他的值.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;bool(1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## True&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;bool(0)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## False&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;x = &amp;quot;a&amp;quot;
x&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;a&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;test = &amp;quot;xiaotao&amp;quot;
test&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;xiaotao&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;if语句&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.3.1&lt;/span&gt; If语句&lt;/h3&gt;
&lt;p&gt;这意味着如果条件(if和冒号之间的表达式)为前面定义的真,就执行后续代码块(这里是一条print语句)；如果条件为假.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;test = &amp;quot;xiaotao&amp;quot;
test&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;xiaotao&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;test.endswith(&amp;quot;shen&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## False&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;test.endswith(&amp;quot;tao&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## True&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;if test.endswith(&amp;quot;tao&amp;quot;):
   print(&amp;quot;Yes&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Yes&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;else子句&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.3.2&lt;/span&gt; else子句&lt;/h3&gt;
&lt;p&gt;如果if语句不成立,可以执行else子句的内容.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;name = &amp;quot;xiaotao&amp;quot;
name&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;xiaotao&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;if name == &amp;quot;xiaotao&amp;quot;:
   print(&amp;quot;Welcome, Xiaotao&amp;quot;)
else:
   print(&amp;quot;Hello, stranger&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Welcome, Xiaotao&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;elif子句&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.3.3&lt;/span&gt; elif子句&lt;/h3&gt;
&lt;p&gt;要检查多个条件,可使用&lt;code&gt;elif&lt;/code&gt;.&lt;code&gt;elif&lt;/code&gt;是&lt;code&gt;else if&lt;/code&gt;的缩写,由一个&lt;code&gt;if&lt;/code&gt;子句和一个&lt;code&gt;else&lt;/code&gt;子句组合而成,也就是包含条件的&lt;code&gt;else&lt;/code&gt;子句.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;name = &amp;quot;shen&amp;quot;

if name == &amp;quot;wang&amp;quot;:
   print(&amp;quot;Welcome, wang&amp;quot;)
elif name == &amp;quot;shen&amp;quot;:
   print(&amp;quot;Welcome, Xiaotao&amp;quot;)
else:
  print(&amp;quot;Hello, stranger.&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Welcome, Xiaotao&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;更复杂的条件&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.3.4&lt;/span&gt; 更复杂的条件&lt;/h3&gt;
&lt;p&gt;下面重点说说条件本身.&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;比较运算符.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在条件表达式中,最基本的运算符可能是比较运算符,它们用于执行比较.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;Equation&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;x == y&lt;/td&gt;
&lt;td&gt;x等于y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;x &amp;lt; y&lt;/td&gt;
&lt;td&gt;x小于y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;x &amp;gt; y&lt;/td&gt;
&lt;td&gt;x大于y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;x &amp;gt;= y&lt;/td&gt;
&lt;td&gt;x大于或等于y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;x &amp;lt;= y&lt;/td&gt;
&lt;td&gt;x小于或等于y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;x != y&lt;/td&gt;
&lt;td&gt;x不等于y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;strong&gt;x is y&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;x和y是同一个对象&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;strong&gt;x is not y&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;x和y是不同的对象&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;strong&gt;x in y&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;x是容器(如序列)y的成员&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;strong&gt;x not in y&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;x不是容器(如序列)y的成员&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;与赋值一样,Python也支持链式比较：可同时使用多个比较运算符,如&lt;code&gt;0 &amp;lt; age &amp;lt; 100&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;is&lt;/code&gt;:相同运算符&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;他和&lt;code&gt;==&lt;/code&gt;还是有区别的.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;x = y = [1, 2, 3]
z = [1, 2, 3]
x == y&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## True&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;x == z&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## True&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;x is y&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## True&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;y is x&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## True&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;x is z&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## False&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;z is y&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## False&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;x和z相等,但&lt;code&gt;x is z&lt;/code&gt;的结果却为False.为何会这样呢?因为is检查两个对象是否相同(而不是相等).变量x和y指向同一个列表,而z指向另一个列表(其中包含的值以及这些值的排列顺序都与前一个列表相同).这两个列表虽然相等,但并非同一个对象.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;in&lt;/code&gt;:成员资格运算符&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;字符串和序列的比较&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;字符串是根据字符的字母排列顺序进行比较的.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;&amp;quot;alpha&amp;quot; &amp;lt; &amp;quot;beta&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## True&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;布尔运算符&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;and&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt;还有&lt;code&gt;not&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;断点用于debug&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.3.5&lt;/span&gt; 断点用于debug&lt;/h3&gt;
&lt;p&gt;Python中如何进行诊断和debug.&lt;/p&gt;
&lt;p&gt;可以使用关键字&lt;code&gt;assert&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;age = 10
assert 0 &amp;lt; age &amp;lt; 100
age = -1
assert 0 &amp;lt; age &amp;lt; 100&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果知道必须满足特定条件,程序才能正确地运行,可在程序中添加&lt;code&gt;assert&lt;/code&gt;语句充当检查点,这很有帮助.&lt;/p&gt;
&lt;p&gt;这里类似与R中的&lt;code&gt;stop()&lt;/code&gt;函数.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;age = -1
assert 0 &amp;lt; age &amp;lt; 100, &amp;#39;The age must be realistic&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;循环&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.4&lt;/span&gt; 循环&lt;/h2&gt;
&lt;div id=&#34;while循环&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.4.1&lt;/span&gt; &lt;code&gt;while&lt;/code&gt;循环&lt;/h3&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;x = 1
while x &amp;lt;= 10:
  print(x)
  x += 1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 1
## 2
## 3
## 4
## 5
## 6
## 7
## 8
## 9
## 10&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;for循环&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.4.2&lt;/span&gt; &lt;code&gt;for&lt;/code&gt;循环&lt;/h3&gt;
&lt;p&gt;为序列(或其他可迭代对象)中每个元素执行代码块,这时候使用&lt;code&gt;for&lt;/code&gt;循环更加合适.&lt;/p&gt;
&lt;p&gt;鉴于迭代(也就是遍历)特定范围内的数是一种常见的任务,Python提供了一个创建范围的内置函数&lt;code&gt;range&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;range(0,10)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## range(0, 10)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;list(range(0,10))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;范围类似于切片.它们包含起始位置(这里为0),但不包含结束位置(这里为10).在很多情况下,你都希望范围的起始位置为0.实际上,如果只提供了一个位置,将把这个位置视为结束位置,并假定起始位置为0.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;range()&lt;/code&gt;函数的使用语法如下:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;range(start, stop[, step])&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;一共有三个参数,分别是起始,终止和步长.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;list(range(10))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;list(range(0,10))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;list(range(0,10,1))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;迭代字典&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.4.3&lt;/span&gt; 迭代字典&lt;/h3&gt;
&lt;p&gt;要遍历字典的所有关键字,可像遍历序列那样使用普通的&lt;code&gt;for&lt;/code&gt;语句.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;d = {&amp;#39;x&amp;#39;: 1, &amp;#39;y&amp;#39;: 2, &amp;#39;z&amp;#39;: 3}
for key in d:
  print(key, &amp;#39;corresponds to&amp;#39;, d[key])&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## x corresponds to 1
## y corresponds to 2
## z corresponds to 3&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;也可使用&lt;code&gt;keys&lt;/code&gt;等字典方法来获取所有的键.如果只对值感兴趣,可使用&lt;code&gt;d.values&lt;/code&gt;.你可能还记得,&lt;code&gt;d.items&lt;/code&gt;以元组的方式返回键-值对.&lt;code&gt;for&lt;/code&gt;循环的优点之一是,可在其中使用序列解包.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;d.items()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## dict_items([(&amp;#39;x&amp;#39;, 1), (&amp;#39;y&amp;#39;, 2), (&amp;#39;z&amp;#39;, 3)])&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;for key, value in d.items():
  print(key, &amp;#39;corresponds to&amp;#39;, value)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## x corresponds to 1
## y corresponds to 2
## z corresponds to 3&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;一些迭代工具&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.4.4&lt;/span&gt; 一些迭代工具&lt;/h3&gt;
&lt;div id=&#34;并行迭代&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.4.4.1&lt;/span&gt; 并行迭代&lt;/h4&gt;
&lt;p&gt;有时候,你可能想同时迭代两个序列.假设有下面两个列表：&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;names = [&amp;#39;anne&amp;#39;, &amp;#39;beth&amp;#39;, &amp;#39;george&amp;#39;, &amp;#39;damon&amp;#39;]
ages = [12, 45, 32, 102]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;一个很有用的并行迭代工具是内置函数&lt;code&gt;zip&lt;/code&gt;,它将两个序列“缝合”起来,并返回一个由元组组成的序列.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;test = zip(names, ages)
test&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;lt;zip object at 0x0000000053DE8D88&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;type(test)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;lt;class &amp;#39;zip&amp;#39;&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;test2 = list(test)
test2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [(&amp;#39;anne&amp;#39;, 12), (&amp;#39;beth&amp;#39;, 45), (&amp;#39;george&amp;#39;, 32), (&amp;#39;damon&amp;#39;, 102)]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;type(test2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;lt;class &amp;#39;list&amp;#39;&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;zip()&lt;/code&gt;函数用于将可迭代的对象作为参数,将对象中对应的元素打包成一个个元组,然后返回由这些元组组成的列表.如果各个迭代器的元素个数不一致,则返回列表长度与最短的对象相同,利用&lt;code&gt;*&lt;/code&gt;号操作符,可以将元组解压为列表.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;zip()&lt;/code&gt;函数的使用方法:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;zip([iterable, ...])&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;iterabl&lt;/code&gt;:一个或多个迭代器.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;for name, age in zip(names, ages):
  print(name, &amp;#39;is&amp;#39;, age, &amp;#39;years old&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## anne is 12 years old
## beth is 45 years old
## george is 32 years old
## damon is 102 years old&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;迭代时获取索引&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.4.4.2&lt;/span&gt; 迭代时获取索引&lt;/h4&gt;
&lt;p&gt;在有些情况下,你需要在迭代对象序列的同时获取当前对象的索引.例如,你可能想替换一个字符串列表中所有包含子串’xxx’的字符串.&lt;/p&gt;
&lt;p&gt;这时候可以使用内置函数&lt;code&gt;enumerate()&lt;/code&gt;.这个函数让你能够迭代索引-值对,其中的索引是自动提供的.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;enumerate()&lt;/code&gt;函数使用方法:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;enumerate(sequence, [start=0])&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;sequence&lt;/strong&gt;: 一个序列、迭代器或其他支持迭代对象.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;start&lt;/strong&gt;: 下标起始位置.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;返回 enumerate(枚举) 对象.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;seasons = [&amp;#39;Spring&amp;#39;, &amp;#39;Summer&amp;#39;, &amp;#39;Fall&amp;#39;, &amp;#39;Winter&amp;#39;]
list(enumerate(seasons))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [(0, &amp;#39;Spring&amp;#39;), (1, &amp;#39;Summer&amp;#39;), (2, &amp;#39;Fall&amp;#39;), (3, &amp;#39;Winter&amp;#39;)]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;list(enumerate(seasons, start=1))       # 下标从 1 开始&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [(1, &amp;#39;Spring&amp;#39;), (2, &amp;#39;Summer&amp;#39;), (3, &amp;#39;Fall&amp;#39;), (4, &amp;#39;Winter&amp;#39;)]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;反向迭代和排序后再迭代&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.4.4.3&lt;/span&gt; 反向迭代和排序后再迭代&lt;/h4&gt;
&lt;p&gt;来看另外两个很有用的函数：&lt;code&gt;reversed()&lt;/code&gt;和&lt;code&gt;sorted()&lt;/code&gt;.它们类似于列表方法&lt;code&gt;reverse&lt;/code&gt;和&lt;code&gt;sort&lt;/code&gt;(&lt;code&gt;sorted&lt;/code&gt;接受的参数也与&lt;code&gt;sort&lt;/code&gt;类似),但可用于任何序列或可迭代的对象,且不就地修改对象,而是返回反转和排序后的版本.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;sorted([4, 3, 6, 8, 3])&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [3, 3, 4, 6, 8]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;sorted(&amp;#39;Hello, world!&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [&amp;#39; &amp;#39;, &amp;#39;!&amp;#39;, &amp;#39;,&amp;#39;, &amp;#39;H&amp;#39;, &amp;#39;d&amp;#39;, &amp;#39;e&amp;#39;, &amp;#39;l&amp;#39;, &amp;#39;l&amp;#39;, &amp;#39;l&amp;#39;, &amp;#39;o&amp;#39;, &amp;#39;o&amp;#39;, &amp;#39;r&amp;#39;, &amp;#39;w&amp;#39;]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;list(reversed(&amp;#39;Hello, world!&amp;#39;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [&amp;#39;!&amp;#39;, &amp;#39;d&amp;#39;, &amp;#39;l&amp;#39;, &amp;#39;r&amp;#39;, &amp;#39;o&amp;#39;, &amp;#39;w&amp;#39;, &amp;#39; &amp;#39;, &amp;#39;,&amp;#39;, &amp;#39;o&amp;#39;, &amp;#39;l&amp;#39;, &amp;#39;l&amp;#39;, &amp;#39;e&amp;#39;, &amp;#39;H&amp;#39;]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;&amp;#39;&amp;#39;.join(reversed(&amp;#39;Hello, world!&amp;#39;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;!dlrow ,olleH&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;请注意,&lt;code&gt;sorted&lt;/code&gt;返回一个列表,而&lt;code&gt;reversed&lt;/code&gt;像&lt;code&gt;zip&lt;/code&gt;那样返回一个更神秘的可迭代对象.你无需关心这到底意味着什么,只管在&lt;code&gt;for&lt;/code&gt;循环或&lt;code&gt;join&lt;/code&gt;等方法中使用它,不会有任何问题.只是你不能对它执行索引或切片操作,也不能直接对它调用列表的方法.要执行这些操作,可先使用&lt;code&gt;list&lt;/code&gt;对返回的对象进行转换.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;跳出循环&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.4.4.4&lt;/span&gt; 跳出循环&lt;/h4&gt;
&lt;div id=&#34;break语句&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.4.4.4.1&lt;/span&gt; &lt;code&gt;break&lt;/code&gt;语句&lt;/h5&gt;
&lt;p&gt;要结束(跳出)循环,可使用break.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;from math import sqrt
for n in range(99, 0, -1):
  root = sqrt(n)
  if root == int(root):
    print(n)
    break&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 81&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;continute语句&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.4.4.4.2&lt;/span&gt; &lt;code&gt;continute&lt;/code&gt;语句&lt;/h5&gt;
&lt;p&gt;语句&lt;code&gt;continue&lt;/code&gt;没有&lt;code&gt;break&lt;/code&gt;用得多.它结束当前迭代,并跳到下一次迭代开头.因此常用于当某次迭代如果符合一定要求,不在进行后续的代码,而开始新的下一次迭代.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;for x in seq:
  if condition1: continue
  if condition2: continue
  if condition3: continue
  do_something()
  do_something_else()
  do_another_thing()
  etc()&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;简单推导&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.5&lt;/span&gt; 简单推导&lt;/h2&gt;
&lt;p&gt;列表推导是一种从其他列表创建列表的方式,类似于数学中的集合推导.列表推导的工作原理非常简单,有点类似于&lt;code&gt;for&lt;/code&gt;循环.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;[x * x for x in range(10)]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;test = [x * x for x in range(10)]
test&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这个列表由&lt;code&gt;range(10)&lt;/code&gt;内每个值的平方组成.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;[x*x for x in range(10) if x % 3 == 0]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [0, 9, 36, 81]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;还可添加更多的for部分.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;[(x, y) for x in range(3) for y in range(3)]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [(0, 0), (0, 1), (0, 2), (1, 0), (1, 1), (1, 2), (2, 0), (2, 1), (2, 2)]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;girls = [&amp;#39;alice&amp;#39;, &amp;#39;bernice&amp;#39;, &amp;#39;clarice&amp;#39;]
boys = [&amp;#39;chris&amp;#39;, &amp;#39;arnold&amp;#39;, &amp;#39;bob&amp;#39;]
[b+&amp;#39;+&amp;#39;+g for b in boys for g in girls if b[0] == g[0]]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [&amp;#39;chris+clarice&amp;#39;, &amp;#39;arnold+alice&amp;#39;, &amp;#39;bob+bernice&amp;#39;]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这些代码将名字的首字母相同的男孩和女孩配对.&lt;/p&gt;
&lt;div id=&#34;三条有用的语句&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.5.1&lt;/span&gt; 三条有用的语句&lt;/h3&gt;
&lt;div id=&#34;pass&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.5.1.1&lt;/span&gt; &lt;code&gt;pass&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;那么为何需要一条什么都不做的语句呢?在你编写代码时,可将其用作占位符.例如,你可能编写了一条if语句并想尝试运行它,但其中缺少一个代码块,&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;使用del语句删除&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.5.1.2&lt;/span&gt; 使用&lt;code&gt;del&lt;/code&gt;语句删除&lt;/h4&gt;
&lt;p&gt;对于你不再使用的对象,Python通常会将其删除(因为没有任何变量或数据结构成员指向它).&lt;/p&gt;
&lt;p&gt;使用方法:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;del object&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;总结&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; 总结&lt;/h1&gt;
&lt;div id=&#34;新的函数&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.1&lt;/span&gt; 新的函数&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;enumerate(seq)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;生成可迭代的索引-值对&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;range([start,] stop[, step])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;创建一个由整数组成的列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;reversed(seq)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;按相反的顺序返回&lt;code&gt;seq&lt;/code&gt;中的值,以便用于迭代&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;sorted(seq[,cmp][,key][,reverse])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回一个列表,其中包含seq中的所有值且这些值是经过排序的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;xrange([start,] stop[, step])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;创建一个用于迭代的xrange对象&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;zip(seq1, seq2,...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;创建一个适合用于并行迭代的新序列&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;课堂的示例代码&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;3&lt;/span&gt; 课堂的示例代码&lt;/h1&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;# using set to find the unique letters in a string
# create a new empty dictionary
nt_count = {}
# get a set of unique characters in our DNA string
dna = &amp;#39;GTACCNTTGATTTCGTATTCTGAGAGGCTGCTGCTTAGCGGTAGCCCCTTGGTTTCCGTGGCAACGGAAAA&amp;#39;
unique = set(dna)
print(&amp;#39;unique nt: &amp;#39;, unique) ## {&amp;#39;C&amp;#39;, &amp;#39;A&amp;#39;, &amp;#39;G&amp;#39;, &amp;#39;T&amp;#39;, &amp;#39;N&amp;#39;}
# iterate through each unique nucleotide&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## unique nt:  {&amp;#39;N&amp;#39;, &amp;#39;T&amp;#39;, &amp;#39;A&amp;#39;, &amp;#39;C&amp;#39;, &amp;#39;G&amp;#39;}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;for nt in unique:
  # count the number of this unique nt in dna
  count = dna.count(nt)
  # add our count to our dict
  nt_count[nt] = count
print(&amp;#39;nt count:&amp;#39;, nt_count)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## nt count: {&amp;#39;N&amp;#39;: 1, &amp;#39;T&amp;#39;: 21, &amp;#39;A&amp;#39;: 13, &amp;#39;C&amp;#39;: 16, &amp;#39;G&amp;#39;: 20}&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;zip函数的例子&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.1&lt;/span&gt; &lt;code&gt;zip()&lt;/code&gt;函数的例子&lt;/h2&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;# zip two lists together to make a dictionary or array of tuples
numbers = [1, 2, 3]
letters = [&amp;#39;a&amp;#39;, &amp;#39;b&amp;#39;, &amp;#39;c&amp;#39;]
new_d = dict(zip(numbers, letters))
print(&amp;#39;new_d&amp;#39;, new_d)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## new_d {1: &amp;#39;a&amp;#39;, 2: &amp;#39;b&amp;#39;, 3: &amp;#39;c&amp;#39;}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;new_l = list(zip(numbers, letters))
print(&amp;#39;new_l&amp;#39;, new_l)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## new_l [(1, &amp;#39;a&amp;#39;), (2, &amp;#39;b&amp;#39;), (3, &amp;#39;c&amp;#39;)]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以看到,&lt;code&gt;zip()&lt;/code&gt;函数得到的是一个特殊的对象,可以用于迭代,当然也可以使用&lt;code&gt;dict()&lt;/code&gt;和&lt;code&gt;list()&lt;/code&gt;函数将其转变为字典或者列表对象.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;给本地写文件的例子&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.2&lt;/span&gt; 给本地写文件的例子&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;# writing a file with FizzBuzz results
with open(&amp;#39;test_file.txt&amp;#39;, mode=&amp;#39;w&amp;#39;) as test_fh:
    for x in range(1, 101):
        if (x % 3 == 0) and (x % 5 == 0):
            test_fh.write(&amp;#39;{0:3d}\t{1:s}\n&amp;#39;.format(x, &amp;#39;FizzBuzz&amp;#39;))
        elif x % 3 == 0:
            test_fh.write(&amp;#39;{0:3d}\t{1:s}\n&amp;#39;.format(x, &amp;#39;Fizz&amp;#39;))
        elif x % 5 == 0:
            test_fh.write(&amp;#39;{0:3d}\t{1:s}\n&amp;#39;.format(x, &amp;#39;Buzz&amp;#39;))
        else:
            test_fh.write(&amp;#39;{0:3d}\n&amp;#39;.format(x))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;最后得到的文件如下图所示:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;test_file.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;open&lt;/code&gt;命令可以打开一个文件,并将其命名为&lt;code&gt;test_fh&lt;/code&gt;,&lt;code&gt;mode&lt;/code&gt;设置为’w’,表明其是写入格式.该文件使用其&lt;code&gt;write&lt;/code&gt;方法进行写入.如果是读入的文件,可以将mode设置为’r’,然后使用&lt;code&gt;read&lt;/code&gt;方法获得内容.&lt;/p&gt;
&lt;p&gt;可以看到,其中大括号内部的第一个数字代表占位符,冒号之后代表替换的对象类型,比如&lt;code&gt;d&lt;/code&gt;为数字,&lt;code&gt;s&lt;/code&gt;为字符型.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;循环语句例子&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.3&lt;/span&gt; 循环语句例子&lt;/h2&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;# continue &amp;amp; break
count = -1
while True:
    count+=1
    print(&amp;quot;count:&amp;quot; , count)
    if count == 3:
        continue
    if count == 6:
        break
    print(&amp;quot;line after our continue&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## count: 0
## line after our continue
## count: 1
## line after our continue
## count: 2
## line after our continue
## count: 3
## count: 4
## line after our continue
## count: 5
## line after our continue
## count: 6&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print(&amp;quot;Done&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Done&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;a = 2 # 3, 2, 2
b = 5 # 4, 3, 5 
c = True
d = False

while a == 2:
    print(&amp;#39;\n0: begining\t&amp;#39;, a, b, c, d)
    if b &amp;gt; 4:
        print(&amp;#39;1: break\t&amp;#39;, a, b, c, d)
        break
    if c:
        print(&amp;#39;2: Truth\t&amp;#39;, a, b, c, d)
        c = False
        continue
    elif not d:
        print(&amp;#39;3: elif\t\t&amp;#39;, a, b, c, d)
        c = True
        d = True
    else:
        b += 1
        a += 1
    print (&amp;#39;4: after if\t&amp;#39;, a, b, c, d)
else:
    print(&amp;#39;\n5: exiting\t&amp;#39;, a, b, c, d)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## 0: begining   2 5 True False
## 1: break  2 5 True False&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;# Iterating over a dictionary
myDict = {&amp;#39;a&amp;#39;: 1, &amp;#39;b&amp;#39;:2, &amp;#39;c&amp;#39;:3, &amp;#39;d&amp;#39;:4}
# Option 1
for key, value in myDict.items():
    print(key, value, value*5)
    &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## a 1 5
## b 2 10
## c 3 15
## d 4 20&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print()

# Option 2&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;for key in myDict:
    value = myDict[key]
    print(key, value, value*5)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## a 1 5
## b 2 10
## c 3 15
## d 4 20&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>blogdown创建post模板文件夹</title>
      <link>/post/2019-11-20-blogdown-creat-post/</link>
      <pubDate>Wed, 20 Nov 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-11-20-blogdown-creat-post/</guid>
      <description>


&lt;p&gt;&lt;code&gt;blogdown&lt;/code&gt;好像并没有自动创建post模板文件夹的函数,要达到的目的是,自动在&lt;code&gt;content/en/post&lt;/code&gt;中创建文件夹,然后文件夹中有一个&lt;code&gt;index.Rmd&lt;/code&gt;文件.代码如下:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;new_post &amp;lt;- 
  function(
  post.name = &amp;quot;python for genomics class day03&amp;quot;,
  date = Sys.Date(),
  post.title = &amp;quot;Python for genomics class day03&amp;quot;,
  author = &amp;quot;Xiaotao Shen&amp;quot;,
  categories = c(&amp;quot;Python&amp;quot;),
  tags = c(&amp;quot;Blog&amp;quot;, &amp;quot;Chinese&amp;quot;),
  path = &amp;quot;D:/my github/shen/content/en/post&amp;quot;){
  post.name &amp;lt;- stringr::str_replace_all(post.name, &amp;quot; &amp;quot;, &amp;quot;-&amp;quot;)
  file.name &amp;lt;- paste(date, post.name, sep = &amp;quot;-&amp;quot;)
 
  dir.create(file.path(path, file.name))
  
  file &amp;lt;- &amp;quot;---&amp;quot;
  write.table(file, 
              file.path(path, file.name, &amp;quot;index.txt&amp;quot;), 
              row.names = FALSE, col.names = FALSE, 
              quote = FALSE, append = FALSE)
  
  write.table(paste(&amp;quot;title:&amp;quot;, post.title),
    file.path(path, file.name, &amp;quot;index.txt&amp;quot;), 
  row.names = FALSE, col.names = FALSE, 
  quote = FALSE, append = TRUE
  )
  
  write.table(paste(&amp;quot;author:&amp;quot;, author),
              file.path(path, file.name, &amp;quot;index.txt&amp;quot;), 
              row.names = FALSE, col.names = FALSE, 
              quote = FALSE, append = TRUE
  )
  
  write.table(paste(&amp;quot;date:&amp;quot;, date),
              file.path(path, file.name, &amp;quot;index.txt&amp;quot;), 
              row.names = FALSE, col.names = FALSE, 
              quote = FALSE, append = TRUE
  )
  
  write.table(&amp;quot;slug: &amp;#39;&amp;#39;&amp;quot;,
              file.path(path, file.name, &amp;quot;index.txt&amp;quot;), 
              row.names = FALSE, col.names = FALSE, 
              quote = FALSE, append = TRUE
  )
  
  write.table(&amp;quot;categories:&amp;quot;,
              file.path(path, file.name, &amp;quot;index.txt&amp;quot;), 
              row.names = FALSE, col.names = FALSE, 
              quote = FALSE, append = TRUE
  )
  
  for(i in 1:length(categories)){
    write.table(paste(&amp;quot; - &amp;quot;, categories[i]),
                file.path(path, file.name, &amp;quot;index.txt&amp;quot;), 
                row.names = FALSE, col.names = FALSE, 
                quote = FALSE, append = TRUE
    )
  }
    
    write.table(&amp;quot;tags:&amp;quot;,
                file.path(path, file.name, &amp;quot;index.txt&amp;quot;), 
                row.names = FALSE, col.names = FALSE, 
                quote = FALSE, append = TRUE
    )
    
    for(i in 1:length(tags)){
      write.table(paste(&amp;quot; - &amp;quot;, tags[i]),
                  file.path(path, file.name, &amp;quot;index.txt&amp;quot;), 
                  row.names = FALSE, col.names = FALSE, 
                  quote = FALSE, append = TRUE
      )
    }
      
      end &amp;lt;- 
&amp;quot;image:
  caption: &amp;#39;&amp;#39;
  focal_point: &amp;#39;&amp;#39;
output:
  blogdown::html_page:
    toc: true
    number_sections: true
---&amp;quot;
      write.table(
        end,
        file.path(path, file.name, &amp;quot;index.txt&amp;quot;),
        row.names = FALSE,
        col.names = FALSE,
        quote = FALSE,
        append = TRUE
      )
      
 file.rename(from = file.path(path, file.name, &amp;quot;index.txt&amp;quot;),
             to = file.path(path, file.name, &amp;quot;index.Rmd&amp;quot;))
 
  }
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Python for genomics class day03</title>
      <link>/post/2019-11-20-python-for-genomics-class-day03/</link>
      <pubDate>Wed, 20 Nov 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-11-20-python-for-genomics-class-day03/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#数据类型&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; 数据类型&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#列表list和元组tuple&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1&lt;/span&gt; 列表(list)和元组(tuple)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#创建列表&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1.1&lt;/span&gt; 创建列表&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#列表通用的操作&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1.2&lt;/span&gt; 列表通用的操作&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#列表python的主力&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1.3&lt;/span&gt; 列表,Python的主力&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#总结&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1.4&lt;/span&gt; 总结&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#字符串&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.2&lt;/span&gt; 字符串&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#字符串的基本操作&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.2.1&lt;/span&gt; 字符串的基本操作&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#字典&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.2.2&lt;/span&gt; 字典&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#条件循环及其他语句&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; 条件,循环及其他语句&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#条件和条件语句&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.1&lt;/span&gt; 条件和条件语句&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#day03作业&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3&lt;/span&gt; Day03作业&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#fasta文件的格式&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.1&lt;/span&gt; &lt;code&gt;fasta&lt;/code&gt;文件的格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#read_fasta函数&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.2&lt;/span&gt; &lt;code&gt;read_fasta&lt;/code&gt;函数&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#open函数&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.2.1&lt;/span&gt; &lt;code&gt;open&lt;/code&gt;函数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#with语句&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.2.2&lt;/span&gt; &lt;code&gt;with&lt;/code&gt;语句&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;数据类型&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; 数据类型&lt;/h1&gt;
&lt;p&gt;Data types and manipulations:dictionary, set&lt;/p&gt;
&lt;p&gt;Conditional statements:if, elif, else, break, continue&lt;/p&gt;
&lt;p&gt;Comments and style:[&lt;a href=&#34;https://realpython.com/python-pep8/&#34; class=&#34;uri&#34;&gt;https://realpython.com/python-pep8/&lt;/a&gt;]&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;
# Python style
#
# PEP8
# https://realpython.com/python-pep8/
# https://www.python.org/dev/peps/pep-0008/
#
# Python history
#
# Guido van Rossum, creator in 1989. He retired last month. Final job was with Dropbox.
# https://en.wikipedia.org/wiki/Python_(programming_language)

a = 1
b = 1.0
c = &amp;#39;1&amp;#39;
d = [1, 2]
e = (1, 2)
f = { &amp;#39;x&amp;#39;:1, &amp;#39;y&amp;#39;:2}
g = {1, 2}

#a是int整数型
print(&amp;#39;a =&amp;#39;, type(a))
#b是浮点型(float)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## a = &amp;lt;class &amp;#39;int&amp;#39;&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print(&amp;#39;b =&amp;#39;, type(b))
#c是字符串型(str)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## b = &amp;lt;class &amp;#39;float&amp;#39;&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print(&amp;#39;c =&amp;#39;, type(c))
#d是列表,可以看到列表使用中括号创建&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## c = &amp;lt;class &amp;#39;str&amp;#39;&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print(&amp;#39;d =&amp;#39;, type(d))
#e是元组(tuple),使用小括号创建&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## d = &amp;lt;class &amp;#39;list&amp;#39;&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print(&amp;#39;e =&amp;#39;, type(e))
#f是字典类型(dict),使用大括号创建&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## e = &amp;lt;class &amp;#39;tuple&amp;#39;&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print(&amp;#39;f =&amp;#39;, type(f))
#g是集合类型,也是使用大括号创建,但是没有key&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## f = &amp;lt;class &amp;#39;dict&amp;#39;&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print(&amp;#39;g =&amp;#39;, type(g))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## g = &amp;lt;class &amp;#39;set&amp;#39;&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;对几个重要的类型做一个详细解释.具体内容参考&lt;code&gt;Python基础教程这本书&lt;/code&gt;&lt;/p&gt;
&lt;div id=&#34;列表list和元组tuple&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1&lt;/span&gt; 列表(list)和元组(tuple)&lt;/h2&gt;
&lt;p&gt;列表和元组是非常类似的,不同点在于&lt;code&gt;列表可以修改而元组不可以&lt;/code&gt;.&lt;/p&gt;
&lt;div id=&#34;创建列表&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.1&lt;/span&gt; 创建列表&lt;/h3&gt;
&lt;p&gt;可以使用中括号&lt;code&gt;[]&lt;/code&gt;来创建列表&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;edward = [&amp;#39;Edward Gumby&amp;#39;, 42]
john = [&amp;#39;John Smith&amp;#39;, 50]
database = [edward, john]
database&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [[&amp;#39;Edward Gumby&amp;#39;, 42], [&amp;#39;John Smith&amp;#39;, 50]]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;同样的,列表中的元素也可以是列表,就像上面的例子所展示的.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;test = [&amp;quot;shen&amp;quot;]
type(test)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;lt;class &amp;#39;list&amp;#39;&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;test[0]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;shen&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;列表通用的操作&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.2&lt;/span&gt; 列表通用的操作&lt;/h3&gt;
&lt;p&gt;有几种操作适用于所有序列,包括索引,切片,相加,相乘和成员资格检查.另外,Python还提供了一些内置函数,可用于确定序列的长度以及找出序列中最大和最小的元素.&lt;/p&gt;
&lt;div id=&#34;索引index&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.2.1&lt;/span&gt; 索引(index)&lt;/h4&gt;
&lt;p&gt;与R类型,列表都有序号,但是需要注意的是,python中的序号都是从0开始的.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;greeting = &amp;#39;Hello&amp;#39;
greeting[0]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;H&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;greeting[1]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;e&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;注意上面例子中&lt;code&gt;greeting&lt;/code&gt;的类型是&lt;code&gt;str&lt;/code&gt;,也就是说python中的str也可以通过序号进行提取某个字符.&lt;/p&gt;
&lt;p&gt;这就称之为索引,其中使用&lt;code&gt;-1&lt;/code&gt;代表最后一个元素.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;greeting[-1]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;o&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;切片slicing&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.2.2&lt;/span&gt; 切片(slicing)&lt;/h4&gt;
&lt;p&gt;切片是用来访问特定范围内的元素.为此,可使用两个索引,并用冒号分隔.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;test = [&amp;quot;shen&amp;quot;, &amp;quot;wang&amp;quot;, &amp;quot;zhao&amp;quot;, &amp;quot;qian&amp;quot;, &amp;quot;sun&amp;quot;]
test[0]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;shen&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;test[0:1]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [&amp;#39;shen&amp;#39;]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;test[1:3]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [&amp;#39;wang&amp;#39;, &amp;#39;zhao&amp;#39;]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;test[1:-1]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [&amp;#39;wang&amp;#39;, &amp;#39;zhao&amp;#39;, &amp;#39;qian&amp;#39;]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;test[1:]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [&amp;#39;wang&amp;#39;, &amp;#39;zhao&amp;#39;, &amp;#39;qian&amp;#39;, &amp;#39;sun&amp;#39;]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;通过上面例子可以看到,对于切片的两个索引,出来的结果包含左边索引的结果,而不包含右边index的结果.如果需要包含某一边的所有结果,则只需要将冒号的某一边空出来即可.&lt;/p&gt;
&lt;p&gt;当然也可以使用负数来进行索引,因为我们知道-1是最后一个元素,-2是倒数第二个元素.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;test = [1,2,3,4,5]
test[-3:-1]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [3, 4]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;test[-3:0]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## []&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;test[-3:]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [3, 4, 5]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以看到如果执行切片操作时,第一个索引指定的元素位于第二个索引指定的元素后面,结果就为空序列.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;序列相加&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.2.3&lt;/span&gt; 序列相加&lt;/h4&gt;
&lt;p&gt;可以使用加法运算符来拼接序列.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;[1, 2, 3] + [4, 5, 6]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1, 2, 3, 4, 5, 6]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;&amp;#39;Hello,&amp;#39; + &amp;#39;world!&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;Hello,world!&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;从错误消息可知,不能拼接列表和字符串,,虽然它们都是序列.一般而言,不能拼接不同类型的序列.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;乘法&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.2.4&lt;/span&gt; 乘法&lt;/h4&gt;
&lt;p&gt;将序列与数x相乘时,将重复这个序列x次来创建一个新序列:&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;&amp;#39;python&amp;#39; * 5&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;pythonpythonpythonpythonpython&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;[1,2,3] * 5&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;None,空列表和初始化&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;空列表是使用不包含任何内容的两个方括号([])表示的.如果要创建一个可包含10个元素的列表,但没有任何有用的内容,可像前面那样使用&lt;code&gt;[42]*10&lt;/code&gt;.但更准确的做法是使用&lt;code&gt;[0]*10&lt;/code&gt;,这将创建一个包含10个零的列表.但是更为准确合适的作发是使用&lt;code&gt;None&lt;/code&gt;,在python中,&lt;code&gt;None&lt;/code&gt;代表什么都没有.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;None
[None]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [None]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;sequence = [None] * 10
sequence&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [None, None, None, None, None, None, None, None, None, None]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;成员资格&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.2.5&lt;/span&gt; 成员资格&lt;/h4&gt;
&lt;p&gt;要检查特定的值是否存在与序列中,可以使用判断运算符&lt;code&gt;in&lt;/code&gt;.返回值为逻辑值,满足时返回为&lt;code&gt;True&lt;/code&gt;,不满足时返回&lt;code&gt;False&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;permisions = &amp;quot;rw&amp;quot;

&amp;#39;w&amp;#39; in permisions&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## True&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;&amp;#39;T&amp;#39; in permisions&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## False&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;users = [&amp;quot;shen&amp;quot;, &amp;quot;wang&amp;quot;]#一个列表
&amp;#39;wang&amp;#39; in users&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## True&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;&amp;#39;tao&amp;#39; in users&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## False&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;长度最大值和最小值&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.2.6&lt;/span&gt; 长度,最大值和最小值&lt;/h4&gt;
&lt;p&gt;使用内置函数可以得到一个列表的长度,最大值及最小值.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;number = [1,2,3,4]#列表
len(number)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 4&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;max(number)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 4&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;min(number)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;string = [&amp;quot;a&amp;quot;, 1 ,2,3]
string
# len(string)
# max(string)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [&amp;#39;a&amp;#39;, 1, 2, 3]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;len(&amp;quot;shen&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 4&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;len([&amp;quot;shen&amp;quot;])&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 1&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;列表python的主力&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.3&lt;/span&gt; 列表,Python的主力&lt;/h3&gt;
&lt;p&gt;列表是Python中使用非常广泛的类型.&lt;/p&gt;
&lt;div id=&#34;list函数&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.3.1&lt;/span&gt; &lt;code&gt;list()&lt;/code&gt;函数&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;list()&lt;/code&gt;函数可以用来简历列表.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;list(&amp;quot;shen&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [&amp;#39;s&amp;#39;, &amp;#39;h&amp;#39;, &amp;#39;e&amp;#39;, &amp;#39;n&amp;#39;]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;list([1,2,3])&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1, 2, 3]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;列表是可以改变的.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;列表的基本操作&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.3.2&lt;/span&gt; 列表的基本操作&lt;/h4&gt;
&lt;p&gt;列表的最大有点在于它是可以修改的.&lt;/p&gt;
&lt;div id=&#34;修改列表给元素赋值&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.3.2.1&lt;/span&gt; 修改列表:给元素赋值&lt;/h5&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;x = [1,2,3]
x&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1, 2, 3]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;x[2] = 5
x&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1, 2, 5]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;删除列表中的元素&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.3.2.2&lt;/span&gt; 删除列表中的元素&lt;/h5&gt;
&lt;p&gt;使用&lt;code&gt;del&lt;/code&gt;语句可以删除列表中的某个元素.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;names = [&amp;quot;alice&amp;quot;, &amp;quot;beth&amp;quot;, &amp;quot;cecil&amp;quot;]
del names[1]
names&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [&amp;#39;alice&amp;#39;, &amp;#39;cecil&amp;#39;]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;使用切片对多个元素进行修改&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.3.2.3&lt;/span&gt; 使用切片对多个元素进行修改&lt;/h5&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;name = list(&amp;quot;name&amp;quot;)
name&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [&amp;#39;n&amp;#39;, &amp;#39;a&amp;#39;, &amp;#39;m&amp;#39;, &amp;#39;e&amp;#39;]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;name[2:] = list(&amp;quot;shen&amp;quot;)
name&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [&amp;#39;n&amp;#39;, &amp;#39;a&amp;#39;, &amp;#39;s&amp;#39;, &amp;#39;h&amp;#39;, &amp;#39;e&amp;#39;, &amp;#39;n&amp;#39;]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;name[4:] = list(&amp;quot;wa&amp;quot;)
name&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [&amp;#39;n&amp;#39;, &amp;#39;a&amp;#39;, &amp;#39;s&amp;#39;, &amp;#39;h&amp;#39;, &amp;#39;w&amp;#39;, &amp;#39;a&amp;#39;]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;需要注意的是,使用切片进行赋值或者修改,是可以将其替换为不同长度的东西的.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;test = list(&amp;quot;wang&amp;quot;)
test&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [&amp;#39;w&amp;#39;, &amp;#39;a&amp;#39;, &amp;#39;n&amp;#39;, &amp;#39;g&amp;#39;]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;test[2:] = list(&amp;quot;shen&amp;quot;)
test&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [&amp;#39;w&amp;#39;, &amp;#39;a&amp;#39;, &amp;#39;s&amp;#39;, &amp;#39;h&amp;#39;, &amp;#39;e&amp;#39;, &amp;#39;n&amp;#39;]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;test[2:3]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [&amp;#39;s&amp;#39;]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;test[2:3] = list(&amp;quot;shen&amp;quot;)
test&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [&amp;#39;w&amp;#39;, &amp;#39;a&amp;#39;, &amp;#39;s&amp;#39;, &amp;#39;h&amp;#39;, &amp;#39;e&amp;#39;, &amp;#39;n&amp;#39;, &amp;#39;h&amp;#39;, &amp;#39;e&amp;#39;, &amp;#39;n&amp;#39;]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;还可以使用这个特性进行元素的插入:&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;numbers = [1, 5]
numbers&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1, 5]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;numbers[1:1]##这是一个空列表&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## []&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;numbers[1:1] = [2, 3, 4]#在第二个位置开始,插入新的list
numbers&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1, 2, 3, 4, 5]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;当然,还可以利用这个特性删除切片.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;numbers&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1, 2, 3, 4, 5]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;numbers[1:4]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [2, 3, 4]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;numbers[1:4] = []
numbers&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1, 5]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;当然,删除仍然可以使用&lt;code&gt;del&lt;/code&gt;语句实现,最后结果是一致的.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;列表方法&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.3.2.4&lt;/span&gt; 列表方法&lt;/h5&gt;
&lt;p&gt;方法是与某列对象联系紧密的函数,一般使用下列方法进行调用:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;object.method(arguments)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这也是跟R不同的一点,R中并没有这类方法.&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;append&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;用于将一个对象添加到列表末尾.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;test = [1,2,3]
test&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1, 2, 3]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;test.append(2)
test&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1, 2, 3, 2]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;test.append([5,6,7])
test&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1, 2, 3, 2, [5, 6, 7]]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;test.append(10)
test&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1, 2, 3, 2, [5, 6, 7], 10]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;test + [20]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1, 2, 3, 2, [5, 6, 7], 10, 20]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;test + [10,20]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1, 2, 3, 2, [5, 6, 7], 10, 10, 20]&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;clear&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;用来清空列表的内容.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;test = [1,2,3]
test.clear()
test&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## []&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;完全清空所有的内容.&lt;/p&gt;
&lt;ol start=&#34;3&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;copy&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;用来复制列表.在Python中,直接使用&lt;code&gt;=&lt;/code&gt;将一个列表赋值给另外一个对象名,其实只是关联而已,也就是说其实同一个列表关联到了两个名字而已.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;a = [1,2,3]
b = a
b[1] = 10
b&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1, 10, 3]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;a##a也会改变,和b保持一致&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1, 10, 3]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;想要把a和b指向两个独立的不同的列表,需要使用&lt;code&gt;copy&lt;/code&gt;,将b关联到a的副本.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;a = [1,2,3]
b = a.copy()
b[1] = 10
b&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1, 10, 3]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;a&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1, 2, 3]&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;4&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;count&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;用来统计指定的元素在列表中出现的次数.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;a = [1,2,3,4,4]
a.count(1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;a.count(4)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;count()&lt;/code&gt;一共有两个参数,第一个参数为’self’,也就是前面的对象,后买你的参数为&lt;code&gt;value&lt;/code&gt;指定要统计的元素.&lt;/p&gt;
&lt;ol start=&#34;5&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;extend&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这个方法跟&lt;code&gt;append&lt;/code&gt;的区别在于,它可以将一个独立的列表添加到列表后面.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;a = [1,2,3]
b = [4,5,6]
a.extend(b)
a&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1, 2, 3, 4, 5, 6]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;a.append(b)
a&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1, 2, 3, 4, 5, 6, [4, 5, 6]]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;a + b&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1, 2, 3, 4, 5, 6, [4, 5, 6], 4, 5, 6]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;a&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1, 2, 3, 4, 5, 6, [4, 5, 6]]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;需要注意这几种方法的区别.&lt;/p&gt;
&lt;ol start=&#34;6&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;index&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;用于查找列表中指定值第一次出现的索引.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;test = list(&amp;quot;shen&amp;quot;)
test&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [&amp;#39;s&amp;#39;, &amp;#39;h&amp;#39;, &amp;#39;e&amp;#39;, &amp;#39;n&amp;#39;]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;test.index(&amp;quot;h&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 1&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;7&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;insert&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;将一个对象插入到列表中.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;a = [1,2,3]
a&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1, 2, 3]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;a.insert(1, &amp;quot;four&amp;quot;)
a&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1, &amp;#39;four&amp;#39;, 2, 3]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;a.insert(0, [1, &amp;quot;shen&amp;quot;])
a&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [[1, &amp;#39;shen&amp;#39;], 1, &amp;#39;four&amp;#39;, 2, 3]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;insert&lt;/code&gt;第一个参数用来指定需要插入的位置(索引),第二个参数用来指定需要插入的内容.插入的内容可以是单个元素,也可以是列表.&lt;/p&gt;
&lt;ol start=&#34;8&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;pop&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;删除一个元素,默认为最后一个.修改原列表,并返回删除的元素.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;x = [1,2,3]
x.pop()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 3&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;x&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1, 2]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;当然,也可以使用&lt;code&gt;index&#39;&lt;/code&gt;参数,指定需要删除的元素.&lt;/p&gt;
&lt;ol start=&#34;9&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;用于删除第一个为指定值的元素.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;test = list(&amp;quot;shen&amp;quot;)
test.remove(&amp;quot;h&amp;quot;)
test&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [&amp;#39;s&amp;#39;, &amp;#39;e&amp;#39;, &amp;#39;n&amp;#39;]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;需要注意的是,只删除第一个符合要求的元素,其他的不会删除.&lt;/p&gt;
&lt;ol start=&#34;10&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;reverse&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;将元素顺序按相反顺序重新排列.&lt;/p&gt;
&lt;ol start=&#34;11&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;sort&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;对列表元素重新进行排列.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;x = [&amp;#39;aardvark&amp;#39;, &amp;#39;abalone&amp;#39;, &amp;#39;acme&amp;#39;, &amp;#39;add&amp;#39;, &amp;#39;aerate&amp;#39;, &amp;quot;shen&amp;quot;, &amp;quot;wang&amp;quot;, &amp;quot;china&amp;quot;, &amp;quot;us&amp;quot;]
x.sort()
x&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [&amp;#39;aardvark&amp;#39;, &amp;#39;abalone&amp;#39;, &amp;#39;acme&amp;#39;, &amp;#39;add&amp;#39;, &amp;#39;aerate&amp;#39;, &amp;#39;china&amp;#39;, &amp;#39;shen&amp;#39;, &amp;#39;us&amp;#39;, &amp;#39;wang&amp;#39;]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;sort&lt;/code&gt;函数还可以通过设置&lt;code&gt;key&lt;/code&gt;参数来自定义排列规则,如可以将&lt;code&gt;key&lt;/code&gt;设置为函数&lt;code&gt;len&lt;/code&gt;,从而将列表按照元素的长度进行排序.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;x.sort(key = len)
x&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [&amp;#39;us&amp;#39;, &amp;#39;add&amp;#39;, &amp;#39;acme&amp;#39;, &amp;#39;shen&amp;#39;, &amp;#39;wang&amp;#39;, &amp;#39;china&amp;#39;, &amp;#39;aerate&amp;#39;, &amp;#39;abalone&amp;#39;, &amp;#39;aardvark&amp;#39;]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;元组tuple不可修改的序列&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.3.3&lt;/span&gt; 元组(tuple):不可修改的序列&lt;/h4&gt;
&lt;p&gt;元组也是序列,但是跟列表不同的是,&lt;strong&gt;元组是不能修改的.&lt;/strong&gt;&lt;/p&gt;
&lt;div id=&#34;创建元组&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.3.3.1&lt;/span&gt; 创建元组&lt;/h5&gt;
&lt;p&gt;使用小括号(())可以创建元组.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;x = (1,2,3)
x&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## (1, 2, 3)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;type(x)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;lt;class &amp;#39;tuple&amp;#39;&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;()#空元组&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;创建只含有一个元素的元组比较特殊,需要在元素后面加上逗号.如果不加逗号,不能常见元组.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;x = (42)
x&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 42&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;type(x)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;lt;class &amp;#39;int&amp;#39;&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;y = (x, )
y&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## (42,)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;type(y)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;lt;class &amp;#39;tuple&amp;#39;&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;3 * (10+3)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 39&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;3 * (10+3,)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## (13, 13, 13)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;看了上面的例子,可以很好的明白为什么需要加上逗号,因为小括号在数学运算中还表示运算优先级的意思,所以需要使用逗号来区分是进行数学运算,还是要创建元组.&lt;/p&gt;
&lt;p&gt;当然,和列表一样,我们还可以使用&lt;code&gt;tuple()&lt;/code&gt;函数来创建元组.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;tuple([1, 2, 3])&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## (1, 2, 3)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;tuple(&amp;quot;shen&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## (&amp;#39;s&amp;#39;, &amp;#39;h&amp;#39;, &amp;#39;e&amp;#39;, &amp;#39;n&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;你可能意识到了,元组并不太复杂,而且除创建和访问其元素外,可对元组执行的操作不多.元组的创建及其元素的访问方式与其他序列相同.&lt;/p&gt;
&lt;p&gt;那为什么要单独出来一个元组类型呢?有两个原因:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;它们用作映射中的键(以及集合的成员),而列表不行.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;有些内置函数和方法返回元组,这意味着必须跟它们打交道.只要不尝试修改元组,与元组打交道通常意味着像处理列表一样处理它们(需要使用元组没有的index和count等方法时例外).&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;总结&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.4&lt;/span&gt; 总结&lt;/h3&gt;
&lt;p&gt;新的函数:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;len(seq)&lt;/td&gt;
&lt;td&gt;返回序列长度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;list(seq)&lt;/td&gt;
&lt;td&gt;将序列转换为列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;max(args)&lt;/td&gt;
&lt;td&gt;返回序列或者一组参数中的最大值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;min(args)&lt;/td&gt;
&lt;td&gt;返回序列或者一组参数中的最小值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;reversed(seq)&lt;/td&gt;
&lt;td&gt;反向排列序列&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;sorted(seq)&lt;/td&gt;
&lt;td&gt;对列表或者序列进行排序&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;tuple(seq)&lt;/td&gt;
&lt;td&gt;将序列转换为元组&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;列表(list)的方法&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;Method&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;append&lt;/td&gt;
&lt;td&gt;将一个对象附加到列表末尾&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;clear&lt;/td&gt;
&lt;td&gt;清空列表的内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;copy&lt;/td&gt;
&lt;td&gt;复制列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;count&lt;/td&gt;
&lt;td&gt;计算指定的元素在列表中出现了多少次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;extend&lt;/td&gt;
&lt;td&gt;同时将多个值附加到列表末尾&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;index&lt;/td&gt;
&lt;td&gt;在列表中查找指定值第一次出现的索引&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;insert&lt;/td&gt;
&lt;td&gt;将一个对象插入列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;pop&lt;/td&gt;
&lt;td&gt;从列表中删除一个元素(默认为最后一个元素)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;remove&lt;/td&gt;
&lt;td&gt;用于删除第一个为指定值的元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;reverse&lt;/td&gt;
&lt;td&gt;按相反的顺序排列列表中的元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;sort&lt;/td&gt;
&lt;td&gt;对列表进行排序&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;字符串&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2&lt;/span&gt; 字符串&lt;/h2&gt;
&lt;div id=&#34;字符串的基本操作&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2.1&lt;/span&gt; 字符串的基本操作&lt;/h3&gt;
&lt;p&gt;所有的标准序列操作(索引,切片,乘法,成员资格检查,长度,最小值和最大值)都适用于字符串.但是注意字符串是不可变的.&lt;/p&gt;
&lt;div id=&#34;字符串格式&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2.1.1&lt;/span&gt; 字符串格式&lt;/h4&gt;
&lt;p&gt;将值转换为字符串并设置其格式是一个重要的操作,需要考虑众多不同的需求,因此随着时间的流逝,Python提供了多种字符串格式设置方法.以前,主要的解决方案是使用字符串格式设置运算符——百分号.这个运算符的行为类似于C语言中的经典函数printf：在%左边指定一个字符串(格式字符串),并在右边指定要设置其格式的值.指定要设置其格式的值时,可使用单个值(如字符串或数字),可使用元组(如果要设置多个值的格式),还可使用字典,其中最常见的是元组.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;format = &amp;quot;Hello, %s. %s enough for ya?&amp;quot;
format&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;Hello, %s. %s enough for ya?&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;values = (&amp;#39;world&amp;#39;, &amp;#39;Hot&amp;#39;)
values&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## (&amp;#39;world&amp;#39;, &amp;#39;Hot&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;format % values&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;Hello, world. Hot enough for ya?&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;上述格式字符串中的&lt;code&gt;%s&lt;/code&gt;称为&lt;code&gt;转换说明符&lt;/code&gt;,指出了要将值插入什么地方.&lt;code&gt;s&lt;/code&gt;意味着将值视为字符串进行格式设置.如果指定的值不是字符串,将使用&lt;code&gt;str()&lt;/code&gt;将其转换为字符串.其他说明符将导致其他形式的转换.例如,&lt;code&gt;%.3f&lt;/code&gt;将值的格式设置为包含3位小数的浮点数.&lt;/p&gt;
&lt;p&gt;更为常用的是使用字符串方法&lt;code&gt;format&lt;/code&gt;.使用这种方法时,每个替换字段都用花括号括起,其中可能包含名称,还可能包含有关如何对相应的值进行转换和格式设置的信息.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;&amp;quot;{}, {} and {}&amp;quot;.format(&amp;quot;first&amp;quot;, &amp;quot;second&amp;quot;, &amp;quot;third&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;first, second and third&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;&amp;quot;{0}, {1} and {2}&amp;quot;.format(&amp;quot;first&amp;quot;, &amp;quot;second&amp;quot;, &amp;quot;third&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;first, second and third&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;&amp;quot;{3} {0} {2} {1} {3} {0}&amp;quot;.format(&amp;quot;be&amp;quot;, &amp;quot;not&amp;quot;, &amp;quot;or&amp;quot;, &amp;quot;to&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;to be or not to be&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在大括号中的数字代表着&lt;code&gt;format&lt;/code&gt;中的内容的索引,如果不写,则默认按照先后顺序替换.&lt;/p&gt;
&lt;p&gt;当然,也可以使用命名的方法来提示如何替换.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;&amp;quot;{name} is a {position:s}.&amp;quot;.format(position=&amp;quot;postdoc&amp;quot;, name=&amp;quot;Japser Shen&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;Japser Shen is a postdoc.&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;字符串方法&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2.1.2&lt;/span&gt; 字符串方法&lt;/h4&gt;
&lt;p&gt;字符串的方法要多得多,很多都是从模块string那继承过来的.&lt;/p&gt;
&lt;p&gt;介绍一些比较常用的.&lt;/p&gt;
&lt;div id=&#34;center&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2.1.2.1&lt;/span&gt; &lt;code&gt;center&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;通过在两边添加填充字符(默认为空格)让字符串居中.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;&amp;quot;The Middle by Jimmy Eat World&amp;quot;.center(40)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;     The Middle by Jimmy Eat World      &amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;&amp;quot;The Middle by Jimmy Eat World&amp;quot;.center(40, &amp;quot;*&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;*****The Middle by Jimmy Eat World******&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;find&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2.1.2.2&lt;/span&gt; &lt;code&gt;find&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;在字符串中查找子串,如果找到,就返回字串的第一个字符的索引,否则返回-1.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;&amp;#39;With a moo-moo here, and a moo-moo there&amp;#39;.find(&amp;#39;moo&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 7&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;&amp;#39;With a moo-moo here, and a moo-moo there&amp;#39;.find(&amp;#39;shen&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;你还可指定搜索的起点和终点.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;subject = &amp;#39;$$$ Get rich now!!! $$$&amp;#39;
subject&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;$$$ Get rich now!!! $$$&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;subject.find(&amp;#39;$$$&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 0&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;subject.find(&amp;#39;$$$&amp;#39;, 1) # 只指定了起点&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 20&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;subject.find(&amp;#39;!!!&amp;#39;, 0, 16) # 同时指定了起点和终点&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;请注意,起点和终点值(第二个和第三个参数)指定的搜索范围包含起点,但不包含终点.这是Python惯常的做法.&lt;/p&gt;
&lt;p&gt;另外的和&lt;code&gt;find&lt;/code&gt;相关的方法还包括:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rfind&lt;/code&gt;,&lt;code&gt;index&lt;/code&gt;,&lt;code&gt;rindex&lt;/code&gt;,&lt;code&gt;count&lt;/code&gt;,&lt;code&gt;startswith&lt;/code&gt;和&lt;code&gt;endswith&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;join&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2.1.2.3&lt;/span&gt; &lt;code&gt;join&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;join&lt;/code&gt;是一个非常重要的字符串方法,其作用与split相反,用于合并序列的元素.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;seq = list(&amp;quot;shen&amp;quot;)
seq&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [&amp;#39;s&amp;#39;, &amp;#39;h&amp;#39;, &amp;#39;e&amp;#39;, &amp;#39;n&amp;#39;]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;sep = &amp;#39;+&amp;#39;
sep&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;+&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;sep.join(seq)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;s+h+e+n&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这个方法跟R中的&lt;code&gt;paste&lt;/code&gt;函数非常类似.&lt;/p&gt;
&lt;p&gt;注意,所合并序列的元素必须都是字符串.如果list元素都是数字,是会报错的.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;lower&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2.1.2.4&lt;/span&gt; &lt;code&gt;lower&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;返回字符串的小写版本.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;&amp;#39;Trondheim Hammer Dance&amp;#39;.lower()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;trondheim hammer dance&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;类似或者同一类方法还有:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;islower&lt;/code&gt;,&lt;code&gt;istitle&lt;/code&gt;,&lt;code&gt;isupper&lt;/code&gt;,&lt;code&gt;translate&lt;/code&gt;,&lt;code&gt;capitalize&lt;/code&gt;,&lt;code&gt;casefold&lt;/code&gt;,&lt;code&gt;swapcase&lt;/code&gt;,&lt;code&gt;title&lt;/code&gt;,&lt;code&gt;upper&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;replace&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2.1.2.5&lt;/span&gt; &lt;code&gt;replace&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;将指定子串都替换为另一个字符串,并返回替换后的结果.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;&amp;#39;This is a test&amp;#39;.replace(&amp;#39;is&amp;#39;, &amp;#39;eez&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;Theez eez a test&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;一共两个参数,第一个是需要替换的内容,第二个是替换之后的内容.&lt;/p&gt;
&lt;p&gt;到这里应该发现,其实这就是R中的&lt;code&gt;stringr&lt;/code&gt;包所要做的工作.&lt;/p&gt;
&lt;p&gt;另外还需要参考的函数:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tranlate&lt;/code&gt;和&lt;code&gt;expandtabs&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;split&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2.1.2.6&lt;/span&gt; &lt;code&gt;split&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;其和&lt;code&gt;join&lt;/code&gt;作用相反,用于将字符串拆分为序列.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;&amp;#39;1+2+3+4+5&amp;#39;.split(&amp;#39;+&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [&amp;#39;1&amp;#39;, &amp;#39;2&amp;#39;, &amp;#39;3&amp;#39;, &amp;#39;4&amp;#39;, &amp;#39;5&amp;#39;]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;&amp;#39;Using the default&amp;#39;.split()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [&amp;#39;Using&amp;#39;, &amp;#39;the&amp;#39;, &amp;#39;default&amp;#39;]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以看到,默认拆分的标识符是空格( ).&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;strip&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2.1.2.7&lt;/span&gt; &lt;code&gt;strip&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;用于将字符串的开头和末尾的空白删除.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;&amp;#39; internal whitespace is kept &amp;#39;.strip()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;internal whitespace is kept&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;当然,还可以通过设置参数,来指定删除的字符类型.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;&amp;#39;*** SPAM * for * everyone!!! ***&amp;#39;.strip(&amp;#39; *!&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;SPAM * for * everyone&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;但是还是只能删除开头和末尾.&lt;/p&gt;
&lt;p&gt;相似函数或者方法:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;lstrip&lt;/code&gt;和&lt;code&gt;rstrip&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;translate&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2.1.2.8&lt;/span&gt; &lt;code&gt;translate&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;方法&lt;code&gt;translate&lt;/code&gt;与&lt;code&gt;replace&lt;/code&gt;一样替换字符串的特定部分,但不同的是它只能进行单字符替换.这个方法的优势在于能够同时替换多个字符,因此效率比replace高.&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;translate&lt;/code&gt;前必须创建一个转换表.这个转换表指出了不同&lt;code&gt;Unicode&lt;/code&gt;码点之间的转换关系.要创建转换表,可对字符串类型&lt;code&gt;str&lt;/code&gt;调用方法&lt;code&gt;maketrans&lt;/code&gt;,这个方法接受两个参数:两个长度相同的字符串,它们指定要将第一个字符串中的每个字符都替换为第二个字符串中的相应字
符.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;table = str.maketrans(&amp;#39;cs&amp;#39;, &amp;#39;kz&amp;#39;)
table&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## {99: 107, 115: 122}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;type(table)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;lt;class &amp;#39;dict&amp;#39;&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以看到,转换表是一个字典类型.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;&amp;#39;this is an incredible test&amp;#39;.translate(table)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;thiz iz an inkredible tezt&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;判断字符串是否满足某些特定的条件&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2.1.2.9&lt;/span&gt; 判断字符串是否满足某些特定的条件&lt;/h5&gt;
&lt;p&gt;很多字符串方法都以is打头,如&lt;code&gt;isspace&lt;/code&gt;,&lt;code&gt;isdigit&lt;/code&gt;和&lt;code&gt;isupper&lt;/code&gt;,它们判断字符串是否具有特定的性质(如包含的字符全为空白,数字或大写).如果字符串具备特定的性质,这些方法就返回True,否则返回False.&lt;/p&gt;
&lt;p&gt;参考其他函数:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;isalnum&lt;/code&gt;,&lt;code&gt;isalpha&lt;/code&gt;,&lt;code&gt;isdecimal&lt;/code&gt;,&lt;code&gt;isdigit&lt;/code&gt;,&lt;code&gt;isidentifier&lt;/code&gt;,&lt;code&gt;islower&lt;/code&gt;,&lt;code&gt;isnumeric&lt;/code&gt;,&lt;code&gt;isprintable&lt;/code&gt;,&lt;code&gt;isspace&lt;/code&gt;,&lt;code&gt;istitle&lt;/code&gt;,&lt;code&gt;isupper&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;总结-1&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2.1.3&lt;/span&gt; 总结&lt;/h4&gt;
&lt;p&gt;将字符串的方法总结如下:&lt;/p&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col width=&#34;42%&#34; /&gt;
&lt;col width=&#34;57%&#34; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;Method&lt;/th&gt;
&lt;th&gt;Meanings&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;string.capitalize()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回字符串的副本,但将第一个字符大写.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;string.casefold()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回经过标准化后的字符串,标准化类似于转换为小写,但更适合用于对Unicode字符串进行不区分大小写的比较&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;string.center(width[, fillchar])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回一个长度为(len(string), width)的字符串.这个字符串的中间包含当前字符串,但两端用&lt;code&gt;fillchar&lt;/code&gt;指定的字符(默认为空格)填充&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;string.count(sub[, start[, end]])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;计算子串sub出现的次数,可搜索范围限定为string[start:end]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;string.encode([encoding[,errors]])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回使用指定编码和errors指定的错误处理方式对字符串进行编码的结果,参数errors的可能取值包含’strict’,‘ignore’,’replace’等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;string.endswith(suffix[,start[,end]])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;检查字符串是否以suffix结尾,还可使用索引start和end来指定匹配范围&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;string.expandtabs([tabsize])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回将字符串中的制表符展开为空格后的结果,可指定可选参数tabsize(默认为8)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;string.find(sub[, start[, end]])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回找到的第一个子串sub的索引,如果没有找到这样的子串,就返回-1;还可将搜索范围限制为&lt;code&gt;string[start:end]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;string.format(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;实现了标准的Python字符串格式设置.将字符串中用大括号分隔的字段替换为相应的参数,再返回结果&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;string.format_map(mapping)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;类似于使用关键字参数调用format,只是参数是以映射的方式提供的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;string.index(sub[, start[, end]])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回找到的第一个子串sub的索引,如果没有找到这样的子串,将引发ValueError异常;还可将搜索范围限制为&lt;code&gt;string[start:end]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;string.isalnum()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;检查字符串中的字符是否都是字母或数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;string.isalpha()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;检查字符串中的字符是否都是字母&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;string.isdecimal()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;检查字符串中的字符是否都是十进制数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;string.isdigit()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;检查字符串中的字符是否都是数字&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;string.isidentifier()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;检查字符串是否可用作Python标识符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;string.islower()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;检查字符串中的所有字母都是小写的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;string.isnumeric()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;检查字符串中的所有字符是否都是数字字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;string.isprintable()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;检查字符串中的字符是否都是可打印的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;string.isspace()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;检查字符串中的字符是否都是空白字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;string.istitle()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;检查字符串中位于非字母后面的字母都是大写的,且其他所有字母都是小写的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;string.isupper()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;检查字符串中的字母是否都是大写的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;string.join(sequence)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将string与sequence中的所有字符串元素合并,并返回结果&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;string.ljust(width[, fillchar])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回一个长度为&lt;code&gt;max(len(string),width)&lt;/code&gt;的字符串,其开头是当前字符串的副本,而末尾是使用fillchar指定的字符(默认为空格)填充的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;string.lower()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将字符串中所有的字母都转换为小写,并返回结果&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;string.lstrip([chars])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将字符串开头所有的chars(默认为所有的空白字符,如空格,制表符和换行符)都删除,并返回结果&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;str.maketrans(x[,y[,z]])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;一个静态方法,它创建一个供translate使用的转换表.如果只指定了参数x,它必须是从字符或序数到Unicode序数或None(用于删除)的映射;也可使用两个表示源字符和目标字符的字符串调用它;还可提供第三个参数,它指定要删除的字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;string.partition(sep)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;在字符串中搜索sep,并返回元组(sep前面的部分, sep, sep后面的部分)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;string.replace(old,new[,max])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将字符串中的子串old替换为new,并返回结果;还可将最大替换次数限制为max&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;string.rfind(sub[,start[,end]])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回找到的最后一个子串的索引,如果没有找到这样的子串,就返回-1;还可将搜索范围限定为&lt;code&gt;string[start:end]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;string.rindex(sub[,start[,end]])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回找到的最后一个子串sub的索引,如果没有找到这样的子串,就引发ValueError异常;还可将搜索范围限定为&lt;code&gt;string[start:end]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;string.rjust(width[,fillchar])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回一个长度为max(len(string),width)的字符串,其末尾为当前字符串的拷贝,而开头是使用fillchar指定的字符(默认为空格)填充的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;string.rpartition(sep)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;与partition相同,但从右往左搜索&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;string.rstrip([chars])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将字符串末尾所有的chars字符(默认为所有的空白字符,如空格,制表符和换行符)都删除,并返回结果&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;string.rsplit([sep[, maxsplit]])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;与split相同,但指定了参数maxsplit,从右往左计算划分次数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;string.split([sep[, maxsplit]])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回一个列表,其中包含以sep为分隔符对字符串进行划分得到的结果(如果没有指定参数sep,将以所有空白字符为分隔符进行划分);还可将最大划分次数限制为maxsplit&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;string.splitlines([keepends])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回一个列表,其中包含字符串中的所有行;如果参数keepends为True,将包含换行符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;string.startswith(prefix[,start[,end]])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;检查字符串是否以prefix打头;还可将匹配范围限制在索引start和end之间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;string.strip([chars])&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将字符串开头和结尾的所有chars字符(默认为所有空白字符,如空格,制表符和换行符)都删除,并返回结果&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;string.swapcase()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将字符串中所有字母的大小写都反转,并返回结果&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;string.title()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将字符串中所有单词的首字母都大写,并返回结果&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;string.translate(table)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;根据转换表table(这是使用maketrans创建的)对字符串中的所有字符都进行转换,并返回结果&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;string.upper()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将字符串中所有的字母都转换为大写,并返回结果&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;string.zfill(width)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;在字符串左边填充0(但将原来打头的+或-移到开头),使其长度为width&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;字典&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2.2&lt;/span&gt; 字典&lt;/h3&gt;
&lt;p&gt;需要将一系列值组合成数据结构并通过编号来访问各个值时,列表很有用.本章介绍一种可通过名称来访问其各个值的数据结构.这种数据结构称为映射(mapping).字典是Python中唯一的内置映射类型,其中的值不按顺序排列,而是存储在键下.键可能是数,字符串或元组.&lt;/p&gt;
&lt;p&gt;在很多情况下,使用字典都比使用列表更合适.下面是一些字典的用途:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;表示棋盘的状态,其中每个键都是由坐标组成的元组；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;存储文件修改时间,其中的键为文件名；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;数字电话/地址簿.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div id=&#34;创建和使用字典&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2.2.1&lt;/span&gt; 创建和使用字典&lt;/h4&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;phonebook = {&amp;#39;Alice&amp;#39;:&amp;#39;2341&amp;#39;, &amp;#39;Beth&amp;#39;:&amp;#39;9102&amp;#39;, &amp;#39;Cecil&amp;#39;:&amp;#39;3258&amp;#39;}
phonebook&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## {&amp;#39;Alice&amp;#39;: &amp;#39;2341&amp;#39;, &amp;#39;Beth&amp;#39;: &amp;#39;9102&amp;#39;, &amp;#39;Cecil&amp;#39;: &amp;#39;3258&amp;#39;}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;字典由键(key)及其相应的值(value)组成,这种键-值对称为项(item).在前面的示例中,键为名字,而值为电话号码.每个键与其值之间都用冒号(:)分隔,项之间用逗号分隔,而整个字典放在花括号内.空字典(没有任何项)用两个花括号表示,类似于下面这样:{}.&lt;/p&gt;
&lt;p&gt;注意:&lt;/p&gt;
&lt;p&gt;在字典(以及其他映射类型)中,键必须是独一无二的,而字典中的值无需如此.&lt;/p&gt;
&lt;div id=&#34;使用dict函数&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2.2.1.1&lt;/span&gt; 使用&lt;code&gt;dict&lt;/code&gt;函数&lt;/h5&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;items = [(&amp;#39;name&amp;#39;, &amp;#39;Gumby&amp;#39;), (&amp;#39;age&amp;#39;, 42)]
items&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [(&amp;#39;name&amp;#39;, &amp;#39;Gumby&amp;#39;), (&amp;#39;age&amp;#39;, 42)]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;type(items)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;lt;class &amp;#39;list&amp;#39;&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;d = dict(items)
d&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## {&amp;#39;name&amp;#39;: &amp;#39;Gumby&amp;#39;, &amp;#39;age&amp;#39;: 42}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;type(d)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;lt;class &amp;#39;dict&amp;#39;&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;d[&amp;quot;name&amp;quot;]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;Gumby&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;d[&amp;quot;age&amp;quot;]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 42&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;items&lt;/code&gt;是一个列表,然后包含两个元组,每个元组都包含两个元素,然后每个元组的第一个元素作为键,第二个元素作为值.&lt;/p&gt;
&lt;p&gt;还可以使用另外一种形式,使用&lt;code&gt;dict&lt;/code&gt;创建字典.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;d = dict(name=&amp;#39;Gumby&amp;#39;, age=42)
d&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## {&amp;#39;name&amp;#39;: &amp;#39;Gumby&amp;#39;, &amp;#39;age&amp;#39;: 42}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;len(d)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 2&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;字典的基本操作&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2.2.1.2&lt;/span&gt; 字典的基本操作&lt;/h5&gt;
&lt;p&gt;字典的基本行为在很多方面都类似于序列.&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;len(d)&lt;/code&gt;返回字典d包含的项(键-值对)数.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;d[k]&lt;/code&gt;返回与键k相关联的值.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;d[k] = v&lt;/code&gt;将值v关联到键k.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;del d[k]&lt;/code&gt;删除键为k的项.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;虽然字典和列表有多个相同之处,但也有一些重要的不同之处.&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;strong&gt;键的类型&lt;/strong&gt;:字典中的键可以是整数,但并非必须是整数.字典中的键可以是任何不可变的类型,如浮点数(实数),字符串或元组.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;自动添加&lt;/strong&gt;:即便是字典中原本没有的键,也可以给它赋值,这将在字典中创建一个新项.然而,如果不使用append或其他类似的方法,就不能给列表中没有的元素赋值.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;d = dict(name=&amp;#39;Gumby&amp;#39;, age=42)
d&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## {&amp;#39;name&amp;#39;: &amp;#39;Gumby&amp;#39;, &amp;#39;age&amp;#39;: 42}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;d[&amp;quot;sex&amp;quot;] = &amp;quot;male&amp;quot;
d&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## {&amp;#39;name&amp;#39;: &amp;#39;Gumby&amp;#39;, &amp;#39;age&amp;#39;: 42, &amp;#39;sex&amp;#39;: &amp;#39;male&amp;#39;}&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;成员资格&lt;/strong&gt;:表达式&lt;code&gt;k in d&lt;/code&gt;(其中d是一个字典)查找的是键而不是值,而表达式v in l(其中l是一个列表)查找的是值而不是索引.这看似不太一致,但你习惯后就会觉得相当自然.毕竟如果字典包含指定的键,检查相应的值就很容易.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;k in d&lt;/code&gt;检查字典d是否包含键为k的项.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;创建空的字典,使用大括号进行.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;x = {}
x&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## {}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;x[&amp;#39;name&amp;#39;] = &amp;quot;shen&amp;quot;
x&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## {&amp;#39;name&amp;#39;: &amp;#39;shen&amp;#39;}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;x = {&amp;quot;name&amp;quot;:&amp;quot;shen&amp;quot;, &amp;quot;age&amp;quot;:29}
x&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## {&amp;#39;name&amp;#39;: &amp;#39;shen&amp;#39;, &amp;#39;age&amp;#39;: 29}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;适用于字典的方法&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2.2.1.3&lt;/span&gt; 适用于字典的方法&lt;/h5&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;clear&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;方法&lt;code&gt;clear&lt;/code&gt;删除所有的字典项,这种操作是就地执行的(就像&lt;code&gt;list.sort&lt;/code&gt;一样),因此什么都不返回(或者说返回&lt;code&gt;None&lt;/code&gt;).&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;d = {}
d[&amp;#39;name&amp;#39;] = &amp;#39;Gumby&amp;#39;
d[&amp;#39;age&amp;#39;] = 42
d&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## {&amp;#39;name&amp;#39;: &amp;#39;Gumby&amp;#39;, &amp;#39;age&amp;#39;: 42}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;d.clear()
d&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## {}&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;copy&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;方法&lt;code&gt;copy&lt;/code&gt;返回一个新字典,其包含的键-值对与原来的字典相同(这个方法执行的是浅复制,因为值本身是原件,而非副本).&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;x = {&amp;#39;username&amp;#39;:&amp;#39;admin&amp;#39;, &amp;#39;machines&amp;#39;:[&amp;#39;foo&amp;#39;, &amp;#39;bar&amp;#39;, &amp;#39;baz&amp;#39;]}
x&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## {&amp;#39;username&amp;#39;: &amp;#39;admin&amp;#39;, &amp;#39;machines&amp;#39;: [&amp;#39;foo&amp;#39;, &amp;#39;bar&amp;#39;, &amp;#39;baz&amp;#39;]}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;y = x.copy()
y&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## {&amp;#39;username&amp;#39;: &amp;#39;admin&amp;#39;, &amp;#39;machines&amp;#39;: [&amp;#39;foo&amp;#39;, &amp;#39;bar&amp;#39;, &amp;#39;baz&amp;#39;]}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;y[&amp;#39;username&amp;#39;] = &amp;#39;mlh&amp;#39;
y[&amp;#39;machines&amp;#39;].remove(&amp;#39;bar&amp;#39;)
x&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## {&amp;#39;username&amp;#39;: &amp;#39;admin&amp;#39;, &amp;#39;machines&amp;#39;: [&amp;#39;foo&amp;#39;, &amp;#39;baz&amp;#39;]}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;y&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## {&amp;#39;username&amp;#39;: &amp;#39;mlh&amp;#39;, &amp;#39;machines&amp;#39;: [&amp;#39;foo&amp;#39;, &amp;#39;baz&amp;#39;]}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如你所见,当替换副本中的值时,原件不受影响.然而,如果修改副本中的值(就地修改而不是替换),原件也将发生变化,因为原件指向的也是被修改的值(如这个示例中的’machines’列表所示).&lt;/p&gt;
&lt;p&gt;为避免这种问题,一种办法是执行深复制,即同时复制值及其包含的所有值,等等.为此,可使用模块copy中的函数deepcopy.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;from copy import deepcopy
d = {}
d[&amp;#39;names&amp;#39;] = [&amp;#39;Alfred&amp;#39;, &amp;#39;Bertrand&amp;#39;]
d&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## {&amp;#39;names&amp;#39;: [&amp;#39;Alfred&amp;#39;, &amp;#39;Bertrand&amp;#39;]}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;c = d.copy()
dc = deepcopy(d)
d[&amp;#39;names&amp;#39;].append(&amp;#39;Clive&amp;#39;)
d&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## {&amp;#39;names&amp;#39;: [&amp;#39;Alfred&amp;#39;, &amp;#39;Bertrand&amp;#39;, &amp;#39;Clive&amp;#39;]}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;c&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## {&amp;#39;names&amp;#39;: [&amp;#39;Alfred&amp;#39;, &amp;#39;Bertrand&amp;#39;, &amp;#39;Clive&amp;#39;]}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;dc&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## {&amp;#39;names&amp;#39;: [&amp;#39;Alfred&amp;#39;, &amp;#39;Bertrand&amp;#39;]}&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;fromkeys&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;方法&lt;code&gt;fromkeys&lt;/code&gt;创建一个新字典,其中包含指定的键,且每个键对应的值都是&lt;code&gt;None&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;{}.fromkeys([&amp;#39;name&amp;#39;, &amp;#39;age&amp;#39;])&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## {&amp;#39;name&amp;#39;: None, &amp;#39;age&amp;#39;: None}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这个示例首先创建了一个空字典,再对其调用方法&lt;code&gt;fromkeys&lt;/code&gt;来创建另一个字典.&lt;/p&gt;
&lt;ol start=&#34;4&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;get&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;方法&lt;code&gt;get&lt;/code&gt;为访问字典项提供了宽松的环境.通常,如果你试图访问字典中没有的项,将引发错误.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;d = {}
print(d[&amp;#39;name&amp;#39;])&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;而使用get不会这样:&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print(d.get(&amp;#39;name&amp;#39;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## None&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;d.get(&amp;#39;name&amp;#39;, &amp;#39;N/A&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;N/A&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;5&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;items&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;方法&lt;code&gt;items&lt;/code&gt;返回一个包含所有字典项的&lt;strong&gt;列表&lt;/strong&gt;,其中每个元素都为&lt;code&gt;(key, value)&lt;/code&gt;的形式.字典项在列表中的排列顺序不确定.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;d = {&amp;#39;title&amp;#39;:&amp;#39;Python Web Site&amp;#39;, &amp;#39;url&amp;#39;:&amp;#39;http://www.python.org&amp;#39;, &amp;#39;spam&amp;#39;:0}
d&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## {&amp;#39;title&amp;#39;: &amp;#39;Python Web Site&amp;#39;, &amp;#39;url&amp;#39;: &amp;#39;http://www.python.org&amp;#39;, &amp;#39;spam&amp;#39;: 0}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;d.items()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## dict_items([(&amp;#39;title&amp;#39;, &amp;#39;Python Web Site&amp;#39;), (&amp;#39;url&amp;#39;, &amp;#39;http://www.python.org&amp;#39;), (&amp;#39;spam&amp;#39;, 0)])&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;test = d.items()
test&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## dict_items([(&amp;#39;title&amp;#39;, &amp;#39;Python Web Site&amp;#39;), (&amp;#39;url&amp;#39;, &amp;#39;http://www.python.org&amp;#39;), (&amp;#39;spam&amp;#39;, 0)])&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;type(test)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;lt;class &amp;#39;dict_items&amp;#39;&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;返回值属于一种名为&lt;strong&gt;字典视图&lt;/strong&gt;的特殊类型.字典视图可用于迭代.另外,你还可确定其长度以及对其执行成员资格检查.其中每一个元素都是一个元组.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;it = d.items()
it&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## dict_items([(&amp;#39;title&amp;#39;, &amp;#39;Python Web Site&amp;#39;), (&amp;#39;url&amp;#39;, &amp;#39;http://www.python.org&amp;#39;), (&amp;#39;spam&amp;#39;, 0)])&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;len(d)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 3&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;len(it)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 3&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;6&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;kyes&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;方法&lt;code&gt;keys&lt;/code&gt;返回一个字典视图,其中包含指定字典中的键.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;d&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## {&amp;#39;title&amp;#39;: &amp;#39;Python Web Site&amp;#39;, &amp;#39;url&amp;#39;: &amp;#39;http://www.python.org&amp;#39;, &amp;#39;spam&amp;#39;: 0}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;d.items()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## dict_items([(&amp;#39;title&amp;#39;, &amp;#39;Python Web Site&amp;#39;), (&amp;#39;url&amp;#39;, &amp;#39;http://www.python.org&amp;#39;), (&amp;#39;spam&amp;#39;, 0)])&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;d.keys()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## dict_keys([&amp;#39;title&amp;#39;, &amp;#39;url&amp;#39;, &amp;#39;spam&amp;#39;])&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;7&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;pop&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;方法&lt;code&gt;pop&lt;/code&gt;可用于获取与指定键相关联的值,并将该键-值对从字典中删除.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;d = {&amp;#39;x&amp;#39;:1, &amp;#39;y&amp;#39;:2}
d&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## {&amp;#39;x&amp;#39;: 1, &amp;#39;y&amp;#39;: 2}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;d.pop(&amp;#39;x&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;d&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## {&amp;#39;y&amp;#39;: 2}&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;8&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;popitem&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;方法&lt;code&gt;popitem&lt;/code&gt;类似于&lt;code&gt;list.pop&lt;/code&gt;,但&lt;code&gt;list.pop&lt;/code&gt;弹出列表中的最后一个元素,而&lt;code&gt;popitem&lt;/code&gt;随机地弹出一个字典项,因为字典项的顺序是不确定的,没有“最后一个元素”的概念.如果你要以高效地方式逐个删除并处理所有字典项,这可能很有用,因为这样无需先获取键列表.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;d = {&amp;#39;url&amp;#39;:&amp;#39;http://www.python.org&amp;#39;, &amp;#39;spam&amp;#39;:0, &amp;#39;title&amp;#39;:&amp;#39;Python Web Site&amp;#39;}
d&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## {&amp;#39;url&amp;#39;: &amp;#39;http://www.python.org&amp;#39;, &amp;#39;spam&amp;#39;: 0, &amp;#39;title&amp;#39;: &amp;#39;Python Web Site&amp;#39;}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;d.popitem()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## (&amp;#39;title&amp;#39;, &amp;#39;Python Web Site&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;d&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## {&amp;#39;url&amp;#39;: &amp;#39;http://www.python.org&amp;#39;, &amp;#39;spam&amp;#39;: 0}&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;9&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;setdefault&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;方法&lt;code&gt;setdefault&lt;/code&gt;有点像&lt;code&gt;get&lt;/code&gt;,因为它也获取与指定键相关联的值,但除此之外,&lt;code&gt;setdefault&lt;/code&gt;还在字典不包含指定的键时,在字典中添加指定的键-值对.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;d = {}
d.setdefault(&amp;#39;name&amp;#39;, &amp;#39;N/A&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;N/A&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;d&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## {&amp;#39;name&amp;#39;: &amp;#39;N/A&amp;#39;}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;d[&amp;#39;name&amp;#39;] = &amp;#39;Gumby&amp;#39;
d.setdefault(&amp;#39;name&amp;#39;, &amp;#39;N/A&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;Gumby&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;d&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## {&amp;#39;name&amp;#39;: &amp;#39;Gumby&amp;#39;}&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;10&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;update&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;方法&lt;code&gt;update&lt;/code&gt;使用一个字典中的项来更新另一个字典.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;d = {
 &amp;#39;title&amp;#39;:&amp;#39;Python Web Site&amp;#39;,
 &amp;#39;url&amp;#39;:&amp;#39;http://www.python.org&amp;#39;,
 &amp;#39;changed&amp;#39;:&amp;#39;Mar 14 22:09:15 MET 2016&amp;#39;
}
d&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## {&amp;#39;title&amp;#39;: &amp;#39;Python Web Site&amp;#39;, &amp;#39;url&amp;#39;: &amp;#39;http://www.python.org&amp;#39;, &amp;#39;changed&amp;#39;: &amp;#39;Mar 14 22:09:15 MET 2016&amp;#39;}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;x = {&amp;#39;title&amp;#39;:&amp;#39;Python Language Website&amp;#39;}
d.update(x)
d&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## {&amp;#39;title&amp;#39;: &amp;#39;Python Language Website&amp;#39;, &amp;#39;url&amp;#39;: &amp;#39;http://www.python.org&amp;#39;, &amp;#39;changed&amp;#39;: &amp;#39;Mar 14 22:09:15 MET 2016&amp;#39;}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;对于通过参数提供的字典,将其项添加到当前字典中.如果当前字典包含键相同的项,就替换它.&lt;/p&gt;
&lt;ol start=&#34;11&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;values&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;方法&lt;code&gt;values&lt;/code&gt;返回一个由字典中的值组成的字典视图.不同于方法&lt;code&gt;keys&lt;/code&gt;,方法&lt;code&gt;values&lt;/code&gt;返回的视图可能包含重复的值.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;d = {&amp;quot;a&amp;quot;:1, &amp;quot;b&amp;quot;:2, &amp;quot;c&amp;quot;:3}
d&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## {&amp;#39;a&amp;#39;: 1, &amp;#39;b&amp;#39;: 2, &amp;#39;c&amp;#39;: 3}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;d.values()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## dict_values([1, 2, 3])&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;总结-2&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2.2.2&lt;/span&gt; 总结&lt;/h4&gt;
&lt;div id=&#34;新的函数&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2.2.2.1&lt;/span&gt; 新的函数&lt;/h5&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;dict(seq)&lt;/td&gt;
&lt;td&gt;从键-值对,映射或关键字参数创建字典&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;适用于字典的方法-1&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2.2.2.2&lt;/span&gt; 适用于字典的方法&lt;/h5&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col width=&#34;53%&#34; /&gt;
&lt;col width=&#34;46%&#34; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;Method&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;clear&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;删除所有的字典项,是就地执行的,不返回任何值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;copy&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回一个新字典,其包含的键值对与原来的字典相同(这个方法执行的是浅复制,因为值本身是原件,而非副本.如果想要深复制,即同时复制值及其包含的所有值,可使用模块&lt;code&gt;copy&lt;/code&gt;中的函数&lt;code&gt;deepcopy&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;fromkeys&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;创建一个新字典,其中包含指定的键,且每个键对应的值都是None.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;get&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;获得字典种的值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;items&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回一个包含所有字典项的列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;keys&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回一个字典视图,其中包含指定字典中的键.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;pop&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;用于获取与指定键相关联的值,并将该键值对从字典中删除.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;setdefault&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;有点像&lt;code&gt;get&lt;/code&gt;,因为它也获取与指定键相关联的值,但除此之外,&lt;code&gt;setdefault&lt;/code&gt;还在字典不包含指定的键时,在字典中添加指定的键-值对.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;update&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;使用一个字典中的项来更新另一个字典.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;values&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回一个由字典中的值组成的字典视图.不同于方法&lt;code&gt;keys&lt;/code&gt;,方法&lt;code&gt;values&lt;/code&gt;返回的视图可能包含重复的值.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;条件循环及其他语句&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; 条件,循环及其他语句&lt;/h1&gt;
&lt;div id=&#34;条件和条件语句&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.1&lt;/span&gt; 条件和条件语句&lt;/h2&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;# test which values are True and False
# The rule:What is True? Anything that is not False!
values = [False, None, 0, 0.0, &amp;quot;&amp;quot;, &amp;#39;&amp;#39;, [], {}, (), True, &amp;#39;str&amp;#39;, &amp;quot;0&amp;quot;, -1, 3, 1000, &amp;#39;\&amp;#39;\&amp;#39;&amp;#39;]

for v in values:
    if (v):
        print(&amp;quot;True :&amp;quot;, v)
    else:
        print(&amp;quot;False:&amp;quot;, v)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## False: False
## False: None
## False: 0
## False: 0.0
## False: 
## False: 
## False: []
## False: {}
## False: ()
## True : True
## True : str
## True : 0
## True : -1
## True : 3
## True : 1000
## True : &amp;#39;&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;day03作业&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;3&lt;/span&gt; Day03作业&lt;/h1&gt;
&lt;p&gt;读取&lt;code&gt;fasta&lt;/code&gt;文件.&lt;/p&gt;
&lt;div id=&#34;fasta文件的格式&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.1&lt;/span&gt; &lt;code&gt;fasta&lt;/code&gt;文件的格式&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;Example_Sequence-1
TCGGGACAGCTTGTTGCCCCATCCATGGGGGTCTGCTCTAAGACCCTTTAATAATAGCGG
TTATTTTCGCAGGCAGGCACTGATCCTTAATACGGAAGCTACAACCCACAATCTGCCTAG
CCGTGATAAACCTTCGCCCCGTGCCTGGTCTACCATCTACTCAGGAAGTTGACCGGTCGG
TTACCTACCTCATGGCGTATGATTGTCCCGGACAGTGCTCCTATGGCTTGGAACCTAACG
CTCACGGGTTGCTAT
&amp;gt;Example_Sequence-2
CTACCGAGAGGTGCCGTCAAATTCTGCCTTTAACCCCCACATGTAGCTCAGTAACTGAGC
GGCTTGACGGCCCAGGTGCAGAGACGTACGATGCGTGAGCCTGCACAATAACCCACCATT
TAGACCATTCAAAAGCTTCCAGACAGTCTAGCTCGAAGAAATTT&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以看到&lt;code&gt;fasta&lt;/code&gt;文件每个sequence都是以&lt;code&gt;&amp;gt;&lt;/code&gt;开头,所以这可以作为识别每个sequence的标志.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;read_fasta函数&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.2&lt;/span&gt; &lt;code&gt;read_fasta&lt;/code&gt;函数&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;def read_fasta(fasta_filename):
    &amp;#39;&amp;#39;&amp;#39;
    Go through file, reading one line at a time, using a
    dictionary to store the DNA sequence for each of the FASTA
    entries (Gavin Sherlock, November 28, 2019)
    &amp;#39;&amp;#39;&amp;#39;    
    with open(fasta_filename, mode=&amp;#39;r&amp;#39;) as fasta_file:

        sequences = {}#创建一个空字典
        
        for line in fasta_file:#对每一行进行读取
            line = line.rstrip()#除去每行的右边的空格
            if line.startswith(&amp;#39;&amp;gt;&amp;#39;):# 如果这一行是以`&amp;gt;`开头,则是一个新的sequence
                line = line.lstrip(&amp;#39;&amp;gt;&amp;#39;)#将这行的`&amp;gt;`标志去除掉
                sequences[line] = &amp;#39;&amp;#39; # intialize dictionary for this entry
                currSeqName = line
            else:
                sequences[currSeqName] += line
    return(sequences)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;open函数&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.2.1&lt;/span&gt; &lt;code&gt;open&lt;/code&gt;函数&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;open(name[, mode[, buffering]])&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;参数说明:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;name&lt;/strong&gt;:一个包含了你要访问的文件名称的字符串值.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;mode&lt;/strong&gt;:mode决定了打开文件的模式:只读,写入,追加等.所有可取值见如下的完全列表.这个参数是非强制的,默认文件访问模式为只读(r).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;buffering&lt;/strong&gt;:如果buffering的值被设为0,就不会有寄存.如果 buffering的值取1,访问文件时会寄存行.如果将 buffering的值设为大于1的整数,表明了这就是的寄存区的缓冲大小.如果取负值,寄存区的缓冲大小则为系统默认.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;不同模式打开文件的完全列表:&lt;/p&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col width=&#34;36%&#34; /&gt;
&lt;col width=&#34;63%&#34; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;Mode&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;r&lt;/td&gt;
&lt;td&gt;以只读方式打开文件.文件的指针将会放在文件的开头.这是默认模式.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;rb&lt;/td&gt;
&lt;td&gt;以二进制格式打开一个文件用于只读.文件指针将会放在文件的开头.这是默认模式.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;r+&lt;/td&gt;
&lt;td&gt;打开一个文件用于读写.文件指针将会放在文件的开头.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;rb+&lt;/td&gt;
&lt;td&gt;以二进制格式打开一个文件用于读写.文件指针将会放在文件的开头.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;w&lt;/td&gt;
&lt;td&gt;打开一个文件只用于写入.如果该文件已存在则打开文件,并从开头开始编辑,即原有内容会被删除.如果该文件不存在,创建新文件.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;wb&lt;/td&gt;
&lt;td&gt;以二进制格式打开一个文件只用于写入.如果该文件已存在则打开文件,并从开头开始编辑,即原有内容会被删除.如果该文件不存在,创建新文件.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;w+&lt;/td&gt;
&lt;td&gt;打开一个文件用于读写.如果该文件已存在则打开文件,并从开头开始编辑,即原有内容会被删除.如果该文件不存在,创建新文件.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;wb+&lt;/td&gt;
&lt;td&gt;以二进制格式打开一个文件用于读写.如果该文件已存在则打开文件,并从开头开始编辑,即原有内容会被删除.如果该文件不存在,创建新文件.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;a&lt;/td&gt;
&lt;td&gt;打开一个文件用于追加.如果该文件已存在,文件指针将会放在文件的结尾.也就是说,新的内容将会被写入到已有内容之后.如果该文件不存在,创建新文件进行写入.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;ab&lt;/td&gt;
&lt;td&gt;以二进制格式打开一个文件用于追加.如果该文件已存在,文件指针将会放在文件的结尾.也就是说,新的内容将会被写入到已有内容之后.如果该文件不存在,创建新文件进行写入.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;a+&lt;/td&gt;
&lt;td&gt;打开一个文件用于读写.如果该文件已存在,文件指针将会放在文件的结尾.文件打开时会是追加模式.如果该文件不存在,创建新文件用于读写.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;ab+&lt;/td&gt;
&lt;td&gt;以二进制格式打开一个文件用于追加.如果该文件已存在,文件指针将会放在文件的结尾.如果该文件不存在,创建新文件用于读写.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;with语句&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.2.2&lt;/span&gt; &lt;code&gt;with&lt;/code&gt;语句&lt;/h3&gt;
&lt;p&gt;可以参考下面的帖子:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/u012609509/article/details/72911564&#34; class=&#34;uri&#34;&gt;https://blog.csdn.net/u012609509/article/details/72911564&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Python Cookbook</title>
      <link>/post/2019-11-18-python-summary/</link>
      <pubDate>Mon, 18 Nov 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-11-18-python-summary/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#基础&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; 基础&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#pycharm-cookbook&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; Pycharm cookbook&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#注释快捷键&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.1&lt;/span&gt; 注释快捷键&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#将project上传到github&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.2&lt;/span&gt; 将project上传到github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#如何更改每个项目的解释器版本&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.3&lt;/span&gt; 如何更改每个项目的解释器版本?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#创建文件&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.4&lt;/span&gt; 创建文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#运行代码&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.5&lt;/span&gt; 运行代码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#修改默认的快捷键&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.6&lt;/span&gt; 修改默认的快捷键&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#编码设置&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.7&lt;/span&gt; 编码设置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#jupyter-notbook&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.8&lt;/span&gt; Jupyter notbook&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#修改工作路径&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.8.1&lt;/span&gt; 修改工作路径&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;基础&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; 基础&lt;/h1&gt;
&lt;/div&gt;
&lt;div id=&#34;pycharm-cookbook&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; Pycharm cookbook&lt;/h1&gt;
&lt;div id=&#34;注释快捷键&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.1&lt;/span&gt; 注释快捷键&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;ctl+/&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;将project上传到github&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.2&lt;/span&gt; 将project上传到github&lt;/h2&gt;
&lt;p&gt;参考下面帖子:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/feixuelove1009/p/5955332.html&#34; class=&#34;uri&#34;&gt;https://www.cnblogs.com/feixuelove1009/p/5955332.html&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;如何更改每个项目的解释器版本&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.3&lt;/span&gt; 如何更改每个项目的解释器版本?&lt;/h2&gt;
&lt;p&gt;File -&amp;gt; Settings -&amp;gt;project -&amp;gt; Project Interpreter&lt;/p&gt;
&lt;p&gt;然后选择即可.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;创建文件&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.4&lt;/span&gt; 创建文件&lt;/h2&gt;
&lt;p&gt;File -&amp;gt; new&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;运行代码&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.5&lt;/span&gt; 运行代码&lt;/h2&gt;
&lt;p&gt;可以一行行的运行代码,修改默认快捷键位&lt;code&gt;ctl+enter&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;修改默认的快捷键&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.6&lt;/span&gt; 修改默认的快捷键&lt;/h2&gt;
&lt;p&gt;在File -&amp;gt;keymap下&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;编码设置&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.7&lt;/span&gt; 编码设置&lt;/h2&gt;
&lt;p&gt;需要将pycharm的所有编码设置为&lt;code&gt;UTF-8&lt;/code&gt;.&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;File -&amp;gt; Setting -&amp;gt; Editor -&amp;gt; File Encoding&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;./pycharm_encoding&#34; /&gt;&lt;/p&gt;
&lt;p&gt;同时在每个文件的开头添加:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#-*- coding: utf-8 -*&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;jupyter-notbook&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.8&lt;/span&gt; Jupyter notbook&lt;/h2&gt;
&lt;div id=&#34;修改工作路径&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.8.1&lt;/span&gt; 修改工作路径&lt;/h3&gt;
&lt;p&gt;打开默认时C盘.在Win中可以按照下面方法修改路径.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;D:
cd ...&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后使用下列命令启动&lt;code&gt;jupyter notebook&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;jupyter notebook&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Python forbioinformatics课程</title>
      <link>/post/2019-11-18-python-for-bioinformatics/</link>
      <pubDate>Mon, 18 Nov 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-11-18-python-for-bioinformatics/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#第一次课程-day-01&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; 第一次课程 (Day 01)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#前期准备&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1&lt;/span&gt; 前期准备&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#安装anaconda&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1.1&lt;/span&gt; 安装&lt;code&gt;Anaconda&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#安装atom和hydrogen&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1.2&lt;/span&gt; 安装&lt;code&gt;Atom&lt;/code&gt;和&lt;code&gt;Hydrogen&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#下载第一天课件&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1.3&lt;/span&gt; 下载第一天课件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#安装mobaxterm&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1.4&lt;/span&gt; 安装&lt;code&gt;MobaXterm&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#课程&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.2&lt;/span&gt; 课程&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#函数function&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.2.1&lt;/span&gt; 函数(function)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#方法method&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.2.2&lt;/span&gt; 方法(method)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#语句&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.2.3&lt;/span&gt; 语句&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;第一次课程-day-01&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; 第一次课程 (Day 01)&lt;/h1&gt;
&lt;p&gt;收到老师邮件,如下:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The first class of the BIOS274 mini-course is on Monday at 9:30a in room M112 (the room is entered from Alway building courtyard).&lt;br /&gt;
There is software that you need to install before this first class.&lt;br /&gt;
1. Anaconda (this has Python 3, jupyter, and much more)&lt;br /&gt;
2. Atom and Hydrogen&lt;br /&gt;
3. Karel the Robot [also available from the canvas Files &amp;gt; Lectures &amp;gt; Day1 folder]&lt;br /&gt;
4. Only if you have a Windows computer, MobaXterm&lt;br /&gt;
The syllabus has details on where to find these tools and how to test the install:&lt;br /&gt;
&lt;a href=&#34;https://docs.google.com/document/d/140OLR6tMPTvYwmHBREiDRIvTA1cXoXWzfVP-px9IlEs&#34; class=&#34;uri&#34;&gt;https://docs.google.com/document/d/140OLR6tMPTvYwmHBREiDRIvTA1cXoXWzfVP-px9IlEs&lt;/a&gt;&lt;br /&gt;
Be sure your laptop has a full charge, there are very few electrical outlets in M112.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div id=&#34;前期准备&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1&lt;/span&gt; 前期准备&lt;/h2&gt;
&lt;div id=&#34;安装anaconda&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.1&lt;/span&gt; 安装&lt;code&gt;Anaconda&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;这个已经安装.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;安装atom和hydrogen&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.2&lt;/span&gt; 安装&lt;code&gt;Atom&lt;/code&gt;和&lt;code&gt;Hydrogen&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Atom&lt;/code&gt;我以前就安装过.&lt;/p&gt;
&lt;p&gt;Hydrogen是一个能在Atom中模拟Jupyter编辑方式的插件,安装教程参考如下帖子:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/simplehouse/article/details/78348298&#34; class=&#34;uri&#34;&gt;https://blog.csdn.net/simplehouse/article/details/78348298&lt;/a&gt;&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;首先安装&lt;code&gt;IJavascript&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;打开&lt;code&gt;terminal&lt;/code&gt;,这是微软新开发的类似于linux终端的应用.&lt;/p&gt;
&lt;p&gt;输入下列代码:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install -g ijavascript&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;安装&lt;code&gt;Jupyter&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;使用pip工具安装,仍然在terminal下:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pip install --upgrade pip
pip install jupyter&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;全局安装&lt;code&gt;IJavascript&lt;/code&gt;内核&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;ijsinstall --install=global&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;4&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;在&lt;code&gt;Atom&lt;/code&gt;中安装&lt;code&gt;Hydrogen&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;直接输入下列代码,在terminal中:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apm install hydrogen&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;5&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;更新&lt;code&gt;Hydrogen&lt;/code&gt;的内核&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;IJavascript&lt;/code&gt;内核安装完毕,并不意味着&lt;code&gt;Hydrogen&lt;/code&gt;就能开始使用,需使用&lt;code&gt;Hydrogen: Update Kernels&lt;/code&gt;命令更新内核.(通过&lt;code&gt;cmd/ctl +shift + P&lt;/code&gt;打开&lt;code&gt;Atom&lt;/code&gt;的&lt;code&gt;Command Palette&lt;/code&gt;执行),或者重新启动一次&lt;code&gt;Atom&lt;/code&gt;也可以更新其内核.&lt;/p&gt;
&lt;ol start=&#34;6&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;使用&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;打开Atom,然后新建一个文件,保存位&lt;code&gt;py&lt;/code&gt;文件,然后使用快捷键&lt;code&gt;ctl/cmd + Enter&lt;/code&gt;可以执行&lt;code&gt;Hydrogen&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;下载第一天课件&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.3&lt;/span&gt; 下载第一天课件&lt;/h3&gt;
&lt;p&gt;地址如下:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;D:\study\python class\karel_the_robot&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;安装mobaxterm&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.4&lt;/span&gt; 安装&lt;code&gt;MobaXterm&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;老师给了介绍链接:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.google.com/document/d/140OLR6tMPTvYwmHBREiDRIvTA1cXoXWzfVP-px9IlEs/edit&#34; class=&#34;uri&#34;&gt;https://docs.google.com/document/d/140OLR6tMPTvYwmHBREiDRIvTA1cXoXWzfVP-px9IlEs/edit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;只有windows的电脑才需要安装该软件.&lt;/p&gt;
&lt;p&gt;查了以下,这个其实跟&lt;code&gt;Xshell&lt;/code&gt;很像,用来连接Linux的工具.&lt;/p&gt;
&lt;p&gt;参考帖子如下:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/weixin_35353187/article/details/81355088&#34; class=&#34;uri&#34;&gt;https://blog.csdn.net/weixin_35353187/article/details/81355088&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;官网下载:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mobaxterm.mobatek.net/&#34; class=&#34;uri&#34;&gt;https://mobaxterm.mobatek.net/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载之后,直接解压缩安装即可.&lt;/p&gt;
&lt;p&gt;安装结束之后,打开如下:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;mobaxterm.png&#34; /&gt;
这个软件的好处是可以模拟terminal,所以其实也可以代替微软自带的terminal.&lt;/p&gt;
&lt;p&gt;到这里,就已经准备好了老师的课前要求.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;课程&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2&lt;/span&gt; 课程&lt;/h2&gt;
&lt;p&gt;跟R不同,python中有不同的对象来执行命令,常见的有语句,函数(function)和方法(method).我们简单来介绍一下他们.&lt;/p&gt;
&lt;div id=&#34;函数function&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2.1&lt;/span&gt; 函数(function)&lt;/h3&gt;
&lt;p&gt;这是跟R最像也是一致的东西,所以比较好理解.函数是封装了多条语句用来完成特定任务的一段代码.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;function(object, arg1, arg2,...)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;函数执行的时候,第一个参数一般是要处理的对象.然后是其他的一些形参.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;a = [1 ,2 ,3]
sum(a)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 6&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;a&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1, 2, 3]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;str(a)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;[1, 2, 3]&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;a&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1, 2, 3]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以看到,跟R一样,对一个对象用某个R数处理之后,一般会返回处理结果,并且对原来的对象并没有做任何处理,原来的对象没有发生任何变化,如果想要得到处理之后的结果,需要将其赋值给某个对象.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;a = [1,2,3]
b = str(a)
a&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1, 2, 3]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;b&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;[1, 2, 3]&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;type(a)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;lt;class &amp;#39;list&amp;#39;&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;type(b)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;lt;class &amp;#39;str&amp;#39;&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;方法method&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2.2&lt;/span&gt; 方法(method)&lt;/h3&gt;
&lt;p&gt;R中好像没有方法?方法一般是对某些特殊类型的对象进行处理,比如对于字符串,就有很多可以用于字符串处理的方法.方法的调用是使用下列语法:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;object.method(arg1, arg2,...)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;test = &amp;quot;Jasper Shen is a postdoc at Stanford University.&amp;quot;
type(test)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;lt;class &amp;#39;str&amp;#39;&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;test.find(&amp;quot;S&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 7&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;test.count(&amp;quot;S&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;方法和函数有一点最不一样的,如果实对对象进行处理,那么不需要赋值,很多时候是对对象&lt;code&gt;就地改变的&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;语句&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2.3&lt;/span&gt; 语句&lt;/h3&gt;
&lt;p&gt;语句是一段可执行的代码,常见的有赋值语句(&lt;code&gt;=&lt;/code&gt;),&lt;code&gt;if&lt;/code&gt;,&lt;code&gt;for&lt;/code&gt;,&lt;code&gt;while&lt;/code&gt;,&lt;code&gt;import&lt;/code&gt;,&lt;code&gt;return&lt;/code&gt;,&lt;code&gt;break&lt;/code&gt;,&lt;code&gt;pass&lt;/code&gt;,&lt;code&gt;with&lt;/code&gt;语句等.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>ggplot2做蝴蝶图</title>
      <link>/post/2019-11-16-butterfly-plot/</link>
      <pubDate>Sat, 16 Nov 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-11-16-butterfly-plot/</guid>
      <description>


&lt;p&gt;使用&lt;code&gt;ggplot2&lt;/code&gt;画蝴蝶图.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tidyverse&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Attaching packages ------------------------------------------------------------------------ tidyverse 1.2.1 --&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## v ggplot2 3.2.1     v purrr   0.3.2
## v tibble  2.1.3     v dplyr   0.8.3
## v tidyr   1.0.0     v stringr 1.4.0
## v readr   1.3.1     v forcats 0.4.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggplot2&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tibble&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tidyr&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;dplyr&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Conflicts --------------------------------------------------------------------------- tidyverse_conflicts() --
## x dplyr::filter() masks stats::filter()
## x dplyr::lag()    masks stats::lag()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##构建示例数据
df &amp;lt;- 
mtcars %&amp;gt;% 
  select(carb, wt, gear) %&amp;gt;% 
  filter(gear == 3 | gear == 4) %&amp;gt;%  ##只选择gear位3或者4的车
  group_by(carb, gear) %&amp;gt;% 
  summarise(mean = mean(wt)) %&amp;gt;% #计算每类车的wt的平均值
  ungroup() %&amp;gt;% 
  mutate(carb = factor(carb, levels = unique(carb)),
         gear = factor(gear, levels = unique(gear)))

##观察数据
df&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 7 x 3
##   carb  gear   mean
##   &amp;lt;fct&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;dbl&amp;gt;
## 1 1     3      3.05
## 2 1     4      2.07
## 3 2     3      3.56
## 4 2     4      2.68
## 5 3     3      3.86
## 6 4     3      4.69
## 7 4     4      3.09&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##这一步用来将某类(用于分组的变量)的值设置为负值
df &amp;lt;- 
df %&amp;gt;% 
  mutate(mean = case_when(
    gear == 4 ~ -1*mean,
    gear == 3 ~  mean
  )
  )


df %&amp;gt;% 
  ggplot(aes(x = carb, mean, fill = gear)) +
  geom_bar(stat = &amp;quot;identity&amp;quot;, width = 0.5) +
  labs(x = &amp;quot;Carb&amp;quot;, y = &amp;quot;WT mean&amp;quot;) +
  scale_y_continuous(breaks = c(-2, 0, 2, 4), labels = c(2, 0 ,2, 4)) +
  theme_bw() +
  coord_flip()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-11-16-butterfly-plot/index_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-twitter&#34;&gt;&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-weixin&#34;&gt;&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-qq&#34;&gt;&lt;/i&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>KEGG数据库总结</title>
      <link>/post/2019-11-14-kegg/</link>
      <pubDate>Thu, 14 Nov 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-11-14-kegg/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#kegg-pathway数据库&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; KEGG Pathway数据库&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#背景&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1&lt;/span&gt; 背景&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#kgml的overview&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.2&lt;/span&gt; &lt;code&gt;KGML&lt;/code&gt;的overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#如何获得某个pathwaykgml文件&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.3&lt;/span&gt; 如何获得某个pathway&lt;code&gt;KGML&lt;/code&gt;文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#pathway&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.4&lt;/span&gt; Pathway&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#pathway-element&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.4.1&lt;/span&gt; Pathway element&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#entry条目&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.5&lt;/span&gt; Entry(条目)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#entry-element&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.5.1&lt;/span&gt; Entry element&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#relation&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.6&lt;/span&gt; Relation&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#relation元素&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.6.1&lt;/span&gt; relation元素&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#reaction反应&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.7&lt;/span&gt; Reaction反应&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;kegg-pathway数据库&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; KEGG Pathway数据库&lt;/h1&gt;
&lt;p&gt;KEGG pathway的数据是使用&lt;code&gt;KGML&lt;/code&gt;(KEGG Markup Language)格式存储下来的.详细的信息可以阅读官方文档.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.kegg.jp/kegg/xml/docs/&#34; class=&#34;uri&#34;&gt;https://www.kegg.jp/kegg/xml/docs/&lt;/a&gt;&lt;/p&gt;
&lt;div id=&#34;背景&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1&lt;/span&gt; 背景&lt;/h2&gt;
&lt;p&gt;KEGG pathway有两个类型.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;reference pathways&lt;/strong&gt;: 手动画的.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;organism-specific pathways&lt;/strong&gt;: 使用计算方法自动从reference pathway得到的.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在&lt;code&gt;KGML&lt;/code&gt;文件中,&lt;code&gt;entry&lt;/code&gt;指的是node,而&lt;code&gt;relation&lt;/code&gt;和&lt;code&gt;reaction&lt;/code&gt;指的是整个网络的边.在KEGG pathway中,矩形表示基因(也可以认为是gene的产物蛋白质),而circle代表的是metabolite.&lt;/p&gt;
&lt;p&gt;如果网络中只有&lt;code&gt;entry&lt;/code&gt;和&lt;code&gt;relation&lt;/code&gt;,则该网络称为&lt;code&gt;protein network&lt;/code&gt;.如果只有&lt;code&gt;entry&lt;/code&gt;和&lt;code&gt;reaction&lt;/code&gt;,则称为&lt;code&gt;chemical network&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;所以一般来说,可以用两种方式来表示metabolic pathway:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;metabolic pathways viewed as both protein networks and chemical networks and&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;regulatory pathways viewed as protein networks only.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;kgml的overview&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2&lt;/span&gt; &lt;code&gt;KGML&lt;/code&gt;的overview&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;overview.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;这幅图是整个&lt;code&gt;KGML&lt;/code&gt;的总览.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;如何获得某个pathwaykgml文件&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.3&lt;/span&gt; 如何获得某个pathway&lt;code&gt;KGML&lt;/code&gt;文件&lt;/h2&gt;
&lt;p&gt;使用R包&lt;code&gt;KEGGlincs&lt;/code&gt;可以下载pathway的&lt;code&gt;KGML&lt;/code&gt;文件.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(KEGGREST)
library(KEGGlincs)
###
#获得所有has的pathway ID
path_id &amp;lt;- KEGGREST::keggList(database = &amp;quot;pathway&amp;quot;, 
                              organism = &amp;quot;hsa&amp;quot;)
head(path_id)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                                                     path:hsa00010 
##             &amp;quot;Glycolysis / Gluconeogenesis - Homo sapiens (human)&amp;quot; 
##                                                     path:hsa00020 
##                &amp;quot;Citrate cycle (TCA cycle) - Homo sapiens (human)&amp;quot; 
##                                                     path:hsa00030 
##                &amp;quot;Pentose phosphate pathway - Homo sapiens (human)&amp;quot; 
##                                                     path:hsa00040 
## &amp;quot;Pentose and glucuronate interconversions - Homo sapiens (human)&amp;quot; 
##                                                     path:hsa00051 
##          &amp;quot;Fructose and mannose metabolism - Homo sapiens (human)&amp;quot; 
##                                                     path:hsa00052 
##                     &amp;quot;Galactose metabolism - Homo sapiens (human)&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;path_id &amp;lt;- 
  path_id %&amp;gt;% 
  names() %&amp;gt;% 
  unique() %&amp;gt;% 
  stringr::str_replace(&amp;quot;path:&amp;quot;, &amp;quot;&amp;quot;)
head(path_id)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;hsa00010&amp;quot; &amp;quot;hsa00020&amp;quot; &amp;quot;hsa00030&amp;quot; &amp;quot;hsa00040&amp;quot; &amp;quot;hsa00051&amp;quot; &amp;quot;hsa00052&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##下载kgml文件并进行解析
temp_kgml &amp;lt;- 
  KEGGlincs::get_KGML(pathwayid = path_id[1])
class(temp_kgml)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;KEGGPathway&amp;quot;
## attr(,&amp;quot;package&amp;quot;)
## [1] &amp;quot;KEGGgraph&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;temp_kgml&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## KEGG Pathway
## [ Title ]: Glycolysis / Gluconeogenesis
## [ Name ]: path:hsa00010
## [ Organism ]: hsa
## [ Number ] :00010
## [ Image ] :http://www.kegg.jp/kegg/pathway/hsa/hsa00010.png
## [ Link ] :http://www.kegg.jp/kegg-bin/show_pathway?hsa00010
## ------------------------------------------------------------
## Statistics:
##  100 node(s)
##  89 edge(s)
##  35 reaction(s)
## ------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;get_KGML()&lt;/code&gt;函数其实分别使用了&lt;code&gt;KEGGREST&lt;/code&gt;包中的&lt;code&gt;keggGet()&lt;/code&gt;函数来下载的,然后使用&lt;code&gt;KEGGgraph&lt;/code&gt;包中的&lt;code&gt;paraseKGML()&lt;/code&gt;函数来解析.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;temp_kgml2 &amp;lt;-
  KEGGREST::keggGet(dbentries = path_id[1], option = &amp;quot;kgml&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## No encoding supplied: defaulting to UTF-8.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;class(temp_kgml2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;character&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;temp_kgml2 &amp;lt;- 
  KEGGgraph::parseKGML(file = temp_kgml2)
temp_kgml2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## KEGG Pathway
## [ Title ]: Glycolysis / Gluconeogenesis
## [ Name ]: path:hsa00010
## [ Organism ]: hsa
## [ Number ] :00010
## [ Image ] :http://www.kegg.jp/kegg/pathway/hsa/hsa00010.png
## [ Link ] :http://www.kegg.jp/kegg-bin/show_pathway?hsa00010
## ------------------------------------------------------------
## Statistics:
##  100 node(s)
##  89 edge(s)
##  35 reaction(s)
## ------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;pathway&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.4&lt;/span&gt; Pathway&lt;/h2&gt;
&lt;div id=&#34;pathway-element&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.4.1&lt;/span&gt; Pathway element&lt;/h3&gt;
&lt;p&gt;一共有六个属性.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Attribute.name
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Explanation
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
name
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Pathway ID
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
org
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
ko/ec/org ID
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
number
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
pathway ID numebr
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
title
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
pathway title
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
image
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
pathway figure link
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
link
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
pathway link
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;我们可以下载pathway的图片.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;image_link &amp;lt;- slot(slot(temp_kgml, &amp;quot;pathwayInfo&amp;quot;), &amp;quot;image&amp;quot;)
image_link&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;http://www.kegg.jp/kegg/pathway/hsa/hsa00010.png&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;download.file(url = image_link, 
              destfile = basename(image_link), 
              mode = &amp;quot;wb&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;hsa00010.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;entry条目&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.5&lt;/span&gt; Entry(条目)&lt;/h2&gt;
&lt;div id=&#34;entry-element&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.5.1&lt;/span&gt; Entry element&lt;/h3&gt;
&lt;p&gt;包括了网络中的node的属性.属性包括以下内容.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Attribute.name
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Explanation
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
id
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
ID of the entry
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
name
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
KEGG ID of the entry
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
type
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Type of the entry
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
link
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Link of the entry
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
reaction
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
The KEGG ID of corresponding reaction
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#整体信息
temp_kgml@pathwayInfo&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [ Title ]: Glycolysis / Gluconeogenesis
## [ Name ]: path:hsa00010
## [ Organism ]: hsa
## [ Number ] :00010
## [ Image ] :http://www.kegg.jp/kegg/pathway/hsa/hsa00010.png
## [ Link ] :http://www.kegg.jp/kegg-bin/show_pathway?hsa00010&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#分别的属性
temp_kgml@pathwayInfo@name&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;path:hsa00010&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;temp_kgml@pathwayInfo@org&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;hsa&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;temp_kgml@pathwayInfo@number&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;00010&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;temp_kgml@pathwayInfo@title&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Glycolysis / Gluconeogenesis&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;temp_kgml@pathwayInfo@image&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;http://www.kegg.jp/kegg/pathway/hsa/hsa00010.png&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;temp_kgml@pathwayInfo@link&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;http://www.kegg.jp/kegg-bin/show_pathway?hsa00010&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;图片下载链接:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.kegg.jp/kegg/pathway/hsa/hsa00010.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;pathway详细信息链接:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.kegg.jp/kegg-bin/show_pathway?hsa00010&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我们下面看看pathwa中node的信息.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;temp_kgml&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## KEGG Pathway
## [ Title ]: Glycolysis / Gluconeogenesis
## [ Name ]: path:hsa00010
## [ Organism ]: hsa
## [ Number ] :00010
## [ Image ] :http://www.kegg.jp/kegg/pathway/hsa/hsa00010.png
## [ Link ] :http://www.kegg.jp/kegg-bin/show_pathway?hsa00010
## ------------------------------------------------------------
## Statistics:
##  100 node(s)
##  89 edge(s)
##  35 reaction(s)
## ------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以看到这个pathway含有node,edge还有reaction.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# node
temp_kgml@nodes$`18`&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## KEGG Node (Entry &amp;#39;18&amp;#39;):
## ------------------------------------------------------------
## [ displayName ]: ALDOA, ALDA, GSD12, HEL-S-87p...
## [ Name ]: hsa:226,hsa:229,hsa:230
## [ Type ]: gene
## [ Link ]: http://www.kegg.jp/dbget-bin/www_bget?hsa:226+hsa:229+hsa:230
## ------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#edge
temp_kgml@edges[[1]]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   KEGG Edge (Type: ECrel):
## ------------------------------------------------------------
## [ Entry 1 ID ]: 73
## [ Entry 2 ID ]: 75
## [ Subtype ]: 
##   [ Subtype name ]: compound
##   [ Subtype value ]: 90
## ------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#reaction
temp_kgml@reactions[[1]]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## KEGG Reaction(rn:R00710)
## ------------------------------------------------------------
## [ Name ]: rn:R00710
## [ Type ]: reversible
## [ Substrate Name ]: cpd:C00084
## [ Product Name ]: cpd:C00033&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;type属性的详细解释&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.5.1.1&lt;/span&gt; Type属性的详细解释&lt;/h4&gt;
&lt;p&gt;在pathway中,如果一个pathway链接到另外一个pathway,那么pathway也是会被作为一个node展示出来.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Attribute.name
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Explanation
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
ortholog
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
the node is a KO (ortholog group)
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
enzyme
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
the node is an enzyme
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
reaction
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
the node is a reaction
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
gene
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
the node is a gene product (mostly a protein)
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
group
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
the node is a complex of gene products (mostly a protein complex)
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
compound
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
the node is a chemical compound (including a glycan)
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
map
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
the node is a linked pathway map
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
brite
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
the node is a linked brite hierarchy
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
other
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
the node is an unclassified type
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;relation&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.6&lt;/span&gt; Relation&lt;/h2&gt;
&lt;div id=&#34;relation元素&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.6.1&lt;/span&gt; relation元素&lt;/h3&gt;
&lt;p&gt;这里面的relation不包括我们所知道的酶催化代谢物的联系.只包括两个proteins(gene products)或者两个KOs(ortholog groups)或者protein和compound&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Attribute.name
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Explanation
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
entry1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
the first (from) entry that defines this relation
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
entry2
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
the second (to) entry that defines this relation
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
type
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
the type of this relation
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div id=&#34;type属性&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.6.1.1&lt;/span&gt; Type属性&lt;/h4&gt;
&lt;p&gt;relation的type一共有5个,分别是&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ECrel&lt;/strong&gt;: enzyme-enzyme relation, indicating two enzymes catalyzing successive reaction steps.代表的是两个酶之间的联系,比如enzyme1-metabolite1-enzyme2-metabolite2.那么enzyme1-enzyme2之间的关系realtion就是&lt;code&gt;ECrel&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;PPrel&lt;/strong&gt;: protein-protein interaction, such as binding and modification.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;GErel&lt;/strong&gt;: gene expression interaction, indicating relation of transcription factor and target gene product.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;PCrel&lt;/strong&gt;: protein-compound interaction,注意这个关系不是enzyme催化的关系.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;maplink&lt;/strong&gt;: 跟另外一个pathway的联系.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;subtype-element&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.6.1.2&lt;/span&gt; subtype element&lt;/h4&gt;
&lt;p&gt;每个relatio还有一个subtype属性.这个属性用来对relation做进一步的说明.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;name&lt;/strong&gt;: interation/relation的信息.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;包含以下几种信息.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;figure2.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;其中&lt;code&gt;compound&lt;/code&gt;是指这个relation其实是两个enzyme.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;temp_kgml@edges[[1]]@entry1ID&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;73&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;temp_kgml@edges[[1]]@entry2ID&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;75&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;temp_kgml@edges[[1]]@type&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;ECrel&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;temp_kgml@edges[[1]]@subtype&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $subtype
##   [ Subtype name ]: compound
##   [ Subtype value ]: 90&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这个relation就是两个enzyme连接起来的.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;reaction反应&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.7&lt;/span&gt; Reaction反应&lt;/h2&gt;
&lt;p&gt;reaction和relation很类似.不一样的是type属性.&lt;/p&gt;
&lt;p&gt;type属性包括&lt;code&gt;reversible&lt;/code&gt;和&lt;code&gt;irreversible&lt;/code&gt;.分别表示可逆反应和不可逆反映.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;temp_kgml@reactions[[1]]@name&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;rn:R00710&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;temp_kgml@reactions[[1]]@type&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;reversible&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;temp_kgml@reactions[[1]]@substrateName&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;cpd:C00084&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;temp_kgml@reactions[[1]]@productName&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;cpd:C00033&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Learning representations of microbe–metabolite interactions文献总结</title>
      <link>/post/2019-11-11-nm-mmvec/</link>
      <pubDate>Mon, 11 Nov 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-11-11-nm-mmvec/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#abstract&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; Abstract&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#results&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; Results&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#reference&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3&lt;/span&gt; Reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;文章题目:&lt;/p&gt;
&lt;p&gt;Learning representations of microbe–metabolite interactions&lt;/p&gt;
&lt;p&gt;文章Supplementary&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://static-content.springer.com/esm/art%3A10.1038%2Fs41592-019-0616-3/MediaObjects/41592_2019_616_MOESM1_ESM.pdf&#34; class=&#34;uri&#34;&gt;https://static-content.springer.com/esm/art%3A10.1038%2Fs41592-019-0616-3/MediaObjects/41592_2019_616_MOESM1_ESM.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这篇文章中的interactions across omics就是指在统计学意义上的两个变量的关系,如相关性.&lt;/p&gt;
&lt;p&gt;microbe-metabolite relationship就是指微生物和metabolite的相关性.&lt;/p&gt;
&lt;div id=&#34;abstract&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; Abstract&lt;/h1&gt;
&lt;p&gt;Previous work has been able to predict metabolite abundance profiles from microbe abundance profiles&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; &lt;a href=&#34;#fn2&#34; class=&#34;footnote-ref&#34; id=&#34;fnref2&#34;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;. However, because conventional correlation techniques have unacceptably high false-discovery rates, finding meaningful relationships between genes within complex microbiomes and their products in the metabolome is challenging.&lt;/p&gt;
&lt;p&gt;传统的correlation计算方法有着非常大的错误发现率,因此发现microbe和他们的product metabolite还是非常具有挑战性的.&lt;/p&gt;
&lt;p&gt;Relative abundances of thousands of microbes and metabolites can be measured using sequencing technology and mass spectrometry, respectively, resulting in the generation of high-dimensional microbiome and metabolomics datasets.&lt;/p&gt;
&lt;p&gt;microbiome得到的定量信息也是relative abundance.对于metabolome数据,能够测到的metabolite依赖于提取的方法以及分析方法,因此其实我们得到的metabolome是a partial snapshot of the metabolome.并不完全的完整的.&lt;/p&gt;
&lt;p&gt;Quantifying microbe–metabolite interactions from these abundances requires estimating a distribution across all possible microbe–metabolite interactions.&lt;/p&gt;
&lt;p&gt;从相对定量的数据中得到microbe-metabolite interactions需要得到所有的microbe–metabolite interactions的分布.是否可以理解为需要由NULL分布,然后才能知道某个interaction是不是真的interaction?&lt;/p&gt;
&lt;p&gt;Pearson’s and Spearman’s correlations assume independence between interactions.&lt;/p&gt;
&lt;p&gt;我们常用的correlation方法假设两个变量之间的关系和其他的变量是独立的,这是不一定的.所以还有一种办法叫做偏相关性.&lt;/p&gt;
&lt;p&gt;作者举了例子来说明,为什么使用传统的correlation数据会早成错误发现(假阳性或者假阴性).&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;figure1.png&#34; alt=&#34;Supplementary Figure 1&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Supplementary Figure 1&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;我并没有看懂他是什么意思?&lt;/p&gt;
&lt;p&gt;在microbome和metabolite中会有使用某个变量占所有变量的比例来表示这个变量的吗?&lt;/p&gt;
&lt;p&gt;好像并没有啊.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;scale invariance&lt;/strong&gt;什么意思?标度不变.&lt;/p&gt;
&lt;p&gt;An alternative approach is to consider co-occurrence probabilities instead of correlations.&lt;/p&gt;
&lt;p&gt;一个可替代的方法是考虑共出现的概率而不是相关性.&lt;/p&gt;
&lt;p&gt;Here, co-occurrence probabilities refer to the conditional probability of observing a metabolite given that a microbe was observed, thereby allowing us to identify the most likely microbe–metabolite interactions.&lt;/p&gt;
&lt;p&gt;共出现概率是指当一个microbe(细菌)在的时候,观察到某个代谢物的条件概率.从而能够鉴定到真正的microbe-metabolite interaction.&lt;/p&gt;
&lt;p&gt;To do this, we propose ‘mmvec’, (microbe–metabolite vecors), a neural network that predicts an entire metabolite abundance profile from a single microbe sequence.&lt;/p&gt;
&lt;p&gt;因此作者提出了&lt;code&gt;mmvec&lt;/code&gt;(microbe–metabolite vecors)概念.利用neural network从一个single microbe的sequence来预测整个的metabolite abundance.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;figure2.png&#34; alt=&#34;Figure 1&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Figure 1&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;这幅图是指如何使用microbe sequence去预测metabolite abundance.&lt;/p&gt;
&lt;p&gt;Through iterative training, mmvec can learn the co-occurrence probabilities between microbes and metabolites. The microbe–metabolite interactions can be ranked and visualized through standard dimensionality reduction interfaces, enabling interpretable findings.&lt;/p&gt;
&lt;p&gt;其实就是给定microbe的中的一个sequnce之后,预测所有metabolite abundance.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;results&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; Results&lt;/h1&gt;
&lt;/div&gt;
&lt;div id=&#34;reference&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;3&lt;/span&gt; Reference&lt;/h1&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;Noecker, C. et al. Metabolic model-based integration of microbiome taxonomic and metabolomic profiles elucidates mechanistic links between ecological and metabolic variation. MSystems 1, e00013–e00015 (2016).&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn2&#34;&gt;&lt;p&gt;Mallick, H. et al. Predictive metabolomic profiling of microbial communities using amplicon or metagenomic sequences. Nat. Commun. 10, 3136 (2019).&lt;a href=&#34;#fnref2&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R读取和输出数据</title>
      <link>/post/2019-11-12-r-import-export-data/</link>
      <pubDate>Mon, 11 Nov 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-11-12-r-import-export-data/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#csv文件&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; &lt;code&gt;CSV&lt;/code&gt;文件&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#读取&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1&lt;/span&gt; 读取&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#readr包&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1.1&lt;/span&gt; &lt;code&gt;readr&lt;/code&gt;包&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;csv文件&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; &lt;code&gt;CSV&lt;/code&gt;文件&lt;/h1&gt;
&lt;div id=&#34;读取&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1&lt;/span&gt; 读取&lt;/h2&gt;
&lt;div id=&#34;readr包&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.1&lt;/span&gt; &lt;code&gt;readr&lt;/code&gt;包&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;readr&lt;/code&gt;包中有几个函数可以读取&lt;code&gt;csv&lt;/code&gt;文件.其中第一个就是&lt;code&gt;read_csv()&lt;/code&gt;函数.另外还有一个与其非常类似的&lt;code&gt;read_csv2()&lt;/code&gt;函数,唯一区别在于&lt;code&gt;read_csv()&lt;/code&gt;读取的&lt;code&gt;csv&lt;/code&gt;文件分隔符是逗号(,),而&lt;code&gt;read_csv2()&lt;/code&gt;读取的分隔符是分号(;),这在某些欧洲国家会比较常见.需要注意一下.&lt;/p&gt;
&lt;p&gt;第一个参数&lt;code&gt;file&lt;/code&gt;用来指定要读取的文件的路径和名称.&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;readr&lt;/code&gt;自带的示例数据.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(readr)
test &amp;lt;- readr_example(path = &amp;quot;mtcars.csv&amp;quot;)
test&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;D:/software/R/R-3.6.0/library/readr/extdata/mtcars.csv&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;test &amp;lt;- read_csv(file = test)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Parsed with column specification:
## cols(
##   mpg = col_double(),
##   cyl = col_double(),
##   disp = col_double(),
##   hp = col_double(),
##   drat = col_double(),
##   wt = col_double(),
##   qsec = col_double(),
##   vs = col_double(),
##   am = col_double(),
##   gear = col_double(),
##   carb = col_double()
## )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以看到读取数据的时候,显示出了每一列类型,他就按照这个类型对每一列进行解析.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;readr()&lt;/code&gt;默认读取前1000行,并对其类型进行猜测,然后按照猜测的类型对所有数据进行读取解析.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>使用rayshader包将ggplot2转换为3D图像</title>
      <link>/post/2019-11-11-ggpot2-3d/</link>
      <pubDate>Mon, 11 Nov 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-11-11-ggpot2-3d/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#安装&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; 安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#使用&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; 使用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code&gt;rayshader&lt;/code&gt;包可以将&lt;code&gt;ggplot2&lt;/code&gt;图片转换为3D.&lt;/p&gt;
&lt;p&gt;参考原作者帖子:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.tylermw.com/3d-ggplots-with-rayshader/&#34; class=&#34;uri&#34;&gt;https://www.tylermw.com/3d-ggplots-with-rayshader/&lt;/a&gt;&lt;/p&gt;
&lt;div id=&#34;安装&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; 安装&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;devtools::install_github(&amp;quot;tylermorganwall/rayshader&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;使用&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; 使用&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(rayshader)
library(ggplot2)
library(tidyverse)

gg &amp;lt;- ggplot(diamonds, aes(x, depth)) +
  stat_density_2d(aes(fill = stat(nlevel)), 
                  geom = &amp;quot;polygon&amp;quot;,
                  n = 100,bins = 10,contour = TRUE) +
  facet_wrap(clarity~.) +
  scale_fill_viridis_c(option = &amp;quot;A&amp;quot;)
rayshader::plot_gg(gg, multicore = TRUE, width = 5, height = 5,scale = 250)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;blogdown::shortcode(&amp;quot;video&amp;quot;, src = &amp;quot;./test.mp4&amp;quot;)&lt;/code&gt;&lt;/pre&gt;












  


&lt;video autoplay loop &gt;
  &lt;source src=&#34;./test.mp4&#34; type=&#34;video/mp4&#34;&gt;
&lt;/video&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;blogdown::shortcode(&amp;quot;youtube&amp;quot;, &amp;quot;p4liifrbK8w&amp;quot;)&lt;/code&gt;&lt;/pre&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/p4liifrbK8w&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>在美国购买车险</title>
      <link>/post/2019-11-10-car-insurance/</link>
      <pubDate>Sun, 10 Nov 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-11-10-car-insurance/</guid>
      <description>


&lt;p&gt;美国车必须购买车险,否则不能上路,有非常多的公司,可以直接在网上quote(报价),可以根据自己的需要选择不同的套餐,然后直接在网上购买就好了.我刚来美国的时候,在网上买的是progressive公司的,然后买了半年,马上就要到期了,因此需要再购买.&lt;/p&gt;
&lt;p&gt;比较奇怪的是,我当时只在progressive买了半年,从5.12-11.12,网站上显示的也是.但是很奇怪,他仍然给我提醒,还要接着再扣半年,并且我也找不到如何取消掉.&lt;/p&gt;
&lt;p&gt;我需要重新quote,因为我已经呆了大半年了,应该能够拿到一个更便宜的.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>tibble cookbook</title>
      <link>/post/2019-10-09-tibble-cookbook/</link>
      <pubDate>Sat, 09 Nov 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-10-09-tibble-cookbook/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#创建一个tibble&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; 创建一个tibble&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#tibble函数&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1&lt;/span&gt; &lt;code&gt;tibble()&lt;/code&gt;函数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#as_tibble函数&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.2&lt;/span&gt; &lt;code&gt;as_tibble()&lt;/code&gt;函数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#tribble函数&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.3&lt;/span&gt; &lt;code&gt;tribble()&lt;/code&gt;函数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#enframe函数&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.4&lt;/span&gt; &lt;code&gt;enframe()&lt;/code&gt;函数&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#tibble显示控制&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; tibble显示控制&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#使用print函数&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.1&lt;/span&gt; 使用&lt;code&gt;print()&lt;/code&gt;函数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#修改options默认参数&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.2&lt;/span&gt; 修改&lt;code&gt;options()&lt;/code&gt;默认参数&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#tibble切片操作&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3&lt;/span&gt; tibble切片操作&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#tibble添加新的列或者行&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4&lt;/span&gt; tibble添加新的列或者行&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#添加新的行&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.1&lt;/span&gt; 添加新的行&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#添加新的列&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.2&lt;/span&gt; 添加新的列&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#tibble对列名和行名的操作&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;5&lt;/span&gt; tibble对列名和行名的操作&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#判断是否有行名&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;5.1&lt;/span&gt; 判断是否有行名&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#行名和某一列互相转换&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;5.2&lt;/span&gt; 行名和某一列互相转换&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;创建一个tibble&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; 创建一个tibble&lt;/h1&gt;
&lt;div id=&#34;tibble函数&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1&lt;/span&gt; &lt;code&gt;tibble()&lt;/code&gt;函数&lt;/h2&gt;
&lt;p&gt;使用&lt;code&gt;tibble()&lt;/code&gt;可以创建新的&lt;code&gt;tibble&lt;/code&gt;对象,但是一般用来创建比较简单的tibble。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tidyverse&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Attaching packages ------------------------------------------------------------------------------------------------------- tidyverse 1.2.1 --&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## v ggplot2 3.2.1     v purrr   0.3.2
## v tibble  2.1.3     v dplyr   0.8.3
## v tidyr   1.0.0     v stringr 1.4.0
## v readr   1.3.1     v forcats 0.4.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggplot2&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tibble&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tidyr&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;dplyr&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Conflicts ---------------------------------------------------------------------------------------------------------- tidyverse_conflicts() --
## x dplyr::filter() masks stats::filter()
## x dplyr::lag()    masks stats::lag()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;a &amp;lt;- 1
b &amp;lt;- 2:6
tibble(a, b)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 5 x 2
##       a     b
##   &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;
## 1     1     2
## 2     1     3
## 3     1     4
## 4     1     5
## 5     1     6&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 使用下列方法修改列名
tibble(column1 = a, column2 = b)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 5 x 2
##   column1 column2
##     &amp;lt;dbl&amp;gt;   &amp;lt;int&amp;gt;
## 1       1       2
## 2       1       3
## 3       1       4
## 4       1       5
## 5       1       6&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;需要注意的是,如果输入的vector长度不一致,只有其中某一个长度为1,才会循环补齐,否则报错.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tibble()&lt;/code&gt;函数有一个参数可以注意一下:&lt;code&gt;.name_repair&lt;/code&gt;,用来控制对那些不如何规矩的列名如何处理.常用的一共有4个选项:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;minimal&lt;/strong&gt; 对列名不做任何处理,既不做列名检查,也不做处理.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;unique&lt;/strong&gt; 保证列名都是唯一的并且不能为空.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#如果列名是重复的,会在列名后加入不同的序号.
try(
 tibble(a = 1:3, a = 1:3, 1:3, .name_repair = &amp;quot;unique&amp;quot;) 
)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## New names:
## * a -&amp;gt; a...1
## * a -&amp;gt; a...2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 3
##   a...1 a...2 `1:3`
##   &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;
## 1     1     1     1
## 2     2     2     2
## 3     3     3     3&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;check_unique&lt;/strong&gt; 这是默认的参数设置,不对列名做修改,只做列名检查.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#如果列名是重复的,则会报错
try(
 tibble(a = 1:3, a = 1:3) 
)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Error : Column name `a` must not be duplicated.
## Use .name_repair to specify repair.
## Backtrace:
##      x
##   1. +-base::local(...)
##   2. | \-base::eval.parent(substitute(eval(quote(expr), envir)))
##   3. |   \-base::eval(expr, p)
##   4. |     \-base::eval(expr, p)
##   5. +-base::eval(...)
##   6. | \-base::eval(...)
##   7. |   \-rmarkdown::render(...)
##   8. |     \-knitr::knit(...)
##   9. |       \-knitr:::process_file(text, output)
##  10. |         +-base::withCallingHandlers(...)
##  11. |         +-knitr:::process_group(group)
##  12. |         \-knitr:::process_group.block(group)
##  13. |           \-knitr:::call_block(x)
##  14. |             \-knitr:::block_exec(params)
##  15. |               +-knitr:::in_dir(...)
##  16. |               \-knitr:::evaluate(...)
##  17. |                 \-evaluate::evaluate(...)
##  18. |                   \-evaluate:::evaluate_call(...)
##  19. |                     +-evaluate:::timing_fn(...)
##  20. |                     +-base:::handle(...)
##  21. |                     +-base::withCallingHandlers(...)
##  22. |                     +-base::withVisible(eval(expr, envir, enclos))
##  23. |                     \-base::eval(expr, envir, enclos)
##  24. |                       \-base::eval(expr, envir, enclos)
##  25. +-base::try(tibble(a = 1:3, a = 1:3))
##  26. | \-base::tryCatch(...)
##  27. |   \-base:::tryCatchList(expr, classes, parentenv, handlers)
##  28. |     \-base:::tryCatchOne(expr, names, parentenv, handlers[[1L]])
##  29. |       \-base:::doTryCatch(return(expr), name, parentenv, handler)
##  30. \-tibble::tibble(a = 1:3, a = 1:3)
##  31.   \-tibble:::lst_to_tibble(xlq$output, .rows, .name_repair, lengths = xlq$lengths)
##  32.     \-tibble:::set_repaired_names(x, .name_repair)
##  33.       +-rlang::set_names(x, repaired_names(names(x), .name_repair = .name_repair))
##  34.       | \-rlang:::set_names_impl(x, x, nm, ...)
##  35.       |   \-rlang::is_function(nm)
##  36.       |     \-rlang::is_closure(x)
##  37.       \-tibble:::repaired_names(names(x), .name_repair = .name_repair)
##  38.         \-tibble:::check_unique(new_name)&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;universal&lt;/strong&gt; 保证列名都是唯一的并且符合R语言语法.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果有相同的列名,会在列名后加入不同的序号.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#如果列名是重复的,则会报错
try(
 tibble(a = 1:3, a = 1:3, .name_repair = &amp;quot;universal&amp;quot;) 
)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## New names:
## * a -&amp;gt; a...1
## * a -&amp;gt; a...2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 2
##   a...1 a...2
##   &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;
## 1     1     1
## 2     2     2
## 3     3     3&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;as_tibble函数&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2&lt;/span&gt; &lt;code&gt;as_tibble()&lt;/code&gt;函数&lt;/h2&gt;
&lt;p&gt;使用&lt;code&gt;as_tibble()&lt;/code&gt;函数可以将已有的matrix和data.frame转变为tibble对象.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;test1 &amp;lt;- 
  matrix(1:6, ncol = 2)
tibble::as_tibble(test1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: `as_tibble.matrix()` requires a matrix with column names or a `.name_repair` argument. Using compatibility `.name_repair`.
## This warning is displayed once per session.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 2
##      V1    V2
##   &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;
## 1     1     4
## 2     2     5
## 3     3     6&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;test2 &amp;lt;- 
  data.frame(a = 1:3, b = 2:4, stringsAsFactors = FALSE)
tibble::as_tibble(test2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 2
##       a     b
##   &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;
## 1     1     2
## 2     2     3
## 3     3     4&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;as_tibble()&lt;/code&gt;函数的参数与&lt;code&gt;tibble()&lt;/code&gt;大概相同,另外一个需要注意的的参数是:&lt;strong&gt;rownames&lt;/strong&gt;,用来控制如何处理原有的行名.如果设置为NULL,则去除掉行名(默认),如果设置为NA,则保留原来的列名.设置为一个string vector,则将其设置为新的列名.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;tribble函数&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.3&lt;/span&gt; &lt;code&gt;tribble()&lt;/code&gt;函数&lt;/h2&gt;
&lt;p&gt;使用&lt;code&gt;tribble()&lt;/code&gt;函数可以用另外一种方法来创建tibble对象.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tibble::tribble(
  ~colA, ~colB,
  ## two columns
  &amp;quot;a&amp;quot;,   1,
  &amp;quot;b&amp;quot;,   2,
  &amp;quot;c&amp;quot;,   3
)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 2
##   colA   colB
##   &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;
## 1 a         1
## 2 b         2
## 3 c         3&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;需要注意的是,tibble和data.frame一样,他们中的元素也可以是list.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tribble(
  ~x,  ~y,
  &amp;quot;a&amp;quot;, 1:3,
  &amp;quot;b&amp;quot;, 4:6
)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 2 x 2
##   x     y        
##   &amp;lt;chr&amp;gt; &amp;lt;list&amp;gt;   
## 1 a     &amp;lt;int [3]&amp;gt;
## 2 b     &amp;lt;int [3]&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;enframe函数&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.4&lt;/span&gt; &lt;code&gt;enframe()&lt;/code&gt;函数&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;enframe()&lt;/code&gt;可以将vector转换为tibble,另外有一个相反的函数,&lt;code&gt;deframe()&lt;/code&gt;函数,将tibble/data.frame转变为vector.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;enframe(x = 1:3)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 2
##    name value
##   &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;
## 1     1     1
## 2     2     2
## 3     3     3&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;enframe(c(a = 5, b = 7))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 2 x 2
##   name  value
##   &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;
## 1 a         5
## 2 b         7&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;enframe(list(one = 1, two = 2:3, three = 4:6))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 2
##   name  value    
##   &amp;lt;chr&amp;gt; &amp;lt;list&amp;gt;   
## 1 one   &amp;lt;dbl [1]&amp;gt;
## 2 two   &amp;lt;int [2]&amp;gt;
## 3 three &amp;lt;int [3]&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;enframe()&lt;/code&gt;的第一个参数是&lt;code&gt;x&lt;/code&gt;,必须是一个vector或者list,他会将他的每一个元素的名字组成第一列,而其内容作为第二列转变为一个tibble.也就是说其只能用来创建两列的tibble.两列的列名默认为name和value如果想要修改,可以更改两个参数(name和value).&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;deframe()&lt;/code&gt;函数将一个一列或者两列的tibble转变为vector或者list.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;deframe(enframe(1:3))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 1 2 3 
## 1 2 3&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;tibble显示控制&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; tibble显示控制&lt;/h1&gt;
&lt;p&gt;tibble默认情况下只输出前十行内容,列自动适应屏幕宽度,如果想要输出比默认更多的数据,有以下几种方法.&lt;/p&gt;
&lt;div id=&#34;使用print函数&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.1&lt;/span&gt; 使用&lt;code&gt;print()&lt;/code&gt;函数&lt;/h2&gt;
&lt;p&gt;使用&lt;code&gt;print()&lt;/code&gt;函数,可以控制行数和列数.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
# 默认显示
nycflights13::flights&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 336,776 x 19
##     year month   day dep_time sched_dep_time dep_delay arr_time
##    &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;int&amp;gt;
##  1  2013     1     1      517            515         2      830
##  2  2013     1     1      533            529         4      850
##  3  2013     1     1      542            540         2      923
##  4  2013     1     1      544            545        -1     1004
##  5  2013     1     1      554            600        -6      812
##  6  2013     1     1      554            558        -4      740
##  7  2013     1     1      555            600        -5      913
##  8  2013     1     1      557            600        -3      709
##  9  2013     1     1      557            600        -3      838
## 10  2013     1     1      558            600        -2      753
## # ... with 336,766 more rows, and 12 more variables: sched_arr_time &amp;lt;int&amp;gt;,
## #   arr_delay &amp;lt;dbl&amp;gt;, carrier &amp;lt;chr&amp;gt;, flight &amp;lt;int&amp;gt;, tailnum &amp;lt;chr&amp;gt;,
## #   origin &amp;lt;chr&amp;gt;, dest &amp;lt;chr&amp;gt;, air_time &amp;lt;dbl&amp;gt;, distance &amp;lt;dbl&amp;gt;, hour &amp;lt;dbl&amp;gt;,
## #   minute &amp;lt;dbl&amp;gt;, time_hour &amp;lt;dttm&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 输出15行及所有列数
nycflights13::flights %&amp;gt;% 
  print(n = 15, width = Inf)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 336,776 x 19
##     year month   day dep_time sched_dep_time dep_delay arr_time
##    &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;int&amp;gt;
##  1  2013     1     1      517            515         2      830
##  2  2013     1     1      533            529         4      850
##  3  2013     1     1      542            540         2      923
##  4  2013     1     1      544            545        -1     1004
##  5  2013     1     1      554            600        -6      812
##  6  2013     1     1      554            558        -4      740
##  7  2013     1     1      555            600        -5      913
##  8  2013     1     1      557            600        -3      709
##  9  2013     1     1      557            600        -3      838
## 10  2013     1     1      558            600        -2      753
## 11  2013     1     1      558            600        -2      849
## 12  2013     1     1      558            600        -2      853
## 13  2013     1     1      558            600        -2      924
## 14  2013     1     1      558            600        -2      923
## 15  2013     1     1      559            600        -1      941
##    sched_arr_time arr_delay carrier flight tailnum origin dest  air_time
##             &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;    &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;    &amp;lt;dbl&amp;gt;
##  1            819        11 UA        1545 N14228  EWR    IAH        227
##  2            830        20 UA        1714 N24211  LGA    IAH        227
##  3            850        33 AA        1141 N619AA  JFK    MIA        160
##  4           1022       -18 B6         725 N804JB  JFK    BQN        183
##  5            837       -25 DL         461 N668DN  LGA    ATL        116
##  6            728        12 UA        1696 N39463  EWR    ORD        150
##  7            854        19 B6         507 N516JB  EWR    FLL        158
##  8            723       -14 EV        5708 N829AS  LGA    IAD         53
##  9            846        -8 B6          79 N593JB  JFK    MCO        140
## 10            745         8 AA         301 N3ALAA  LGA    ORD        138
## 11            851        -2 B6          49 N793JB  JFK    PBI        149
## 12            856        -3 B6          71 N657JB  JFK    TPA        158
## 13            917         7 UA         194 N29129  JFK    LAX        345
## 14            937       -14 UA        1124 N53441  EWR    SFO        361
## 15            910        31 AA         707 N3DUAA  LGA    DFW        257
##    distance  hour minute time_hour          
##       &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt; &amp;lt;dttm&amp;gt;             
##  1     1400     5     15 2013-01-01 05:00:00
##  2     1416     5     29 2013-01-01 05:00:00
##  3     1089     5     40 2013-01-01 05:00:00
##  4     1576     5     45 2013-01-01 05:00:00
##  5      762     6      0 2013-01-01 06:00:00
##  6      719     5     58 2013-01-01 05:00:00
##  7     1065     6      0 2013-01-01 06:00:00
##  8      229     6      0 2013-01-01 06:00:00
##  9      944     6      0 2013-01-01 06:00:00
## 10      733     6      0 2013-01-01 06:00:00
## 11     1028     6      0 2013-01-01 06:00:00
## 12     1005     6      0 2013-01-01 06:00:00
## 13     2475     6      0 2013-01-01 06:00:00
## 14     2565     6      0 2013-01-01 06:00:00
## 15     1389     6      0 2013-01-01 06:00:00
## # ... with 3.368e+05 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;修改options默认参数&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.2&lt;/span&gt; 修改&lt;code&gt;options()&lt;/code&gt;默认参数&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;options(tibble.print_max = n, tibble.pring_min = m)&lt;/code&gt;:如果多于m行,则只打印出n
行.&lt;code&gt;options(tibble.print_min = Inf)&lt;/code&gt;表示总是打印所有行.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;options(tibble.width = Inf)&lt;/code&gt;表示总是打印所有列,不考虑屏幕的宽度.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;options()&lt;/code&gt;中所有和&lt;code&gt;tibble&lt;/code&gt;相关的参数:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;tibble.print_max&lt;/code&gt;:Row number threshold: Maximum number of rows printed. Set to Inf to always print all rows. Default: 20.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;tibble.print_min&lt;/code&gt;: 如果设置为m,意思即为如果行数大于m,则只打印出前n行.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;tibble.width&lt;/code&gt;: 打印列的宽度.默认为NULL,也就是适应屏幕宽度.设置为&lt;code&gt;Inf&lt;/code&gt;,则打印出全部列.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;tibble.max_extra_cols&lt;/code&gt;: Number of extra columns printed in reduced form. Default: 100.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;pillar.bold&lt;/code&gt;: pillar是柱子的意思.如果设置为TRUE,则列名为粗体,默认为FALSE,因为在terminal中很多字体对粗体支持不够.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;pillar.subtle&lt;/code&gt;: 是否打印出其他详细的信息,比如总的行和列数.默认为TRUE.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;pillar.subtle_num&lt;/code&gt;: Use subtle style for insignificant digits? Default: FALSE, is also affected by the pillar.subtle option.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;pillar.neg&lt;/code&gt;: 是否高亮负值.默认为TRUE.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;pillar.sigfig&lt;/code&gt;: 高亮那些数字,比如如果设置为3,则会高亮数字3.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;pillar.min_title_chars&lt;/code&gt;: 列名打印时最小的字符数,默认为15.意味着如果某些列名大于15,则会被截断.设置为&lt;code&gt;Inf&lt;/code&gt;,打印出完整的列名.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;tibble切片操作&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;3&lt;/span&gt; tibble切片操作&lt;/h1&gt;
&lt;p&gt;如何取出一个tibble的一列或者几列.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;test &amp;lt;- as_tibble(mtcars)
test[,1, drop = TRUE]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] 21.0 21.0 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 17.8 16.4 17.3 15.2
## [15] 10.4 10.4 14.7 32.4 30.4 33.9 21.5 15.5 15.2 13.3 19.2 27.3 26.0 30.4
## [29] 15.8 19.7 15.0 21.4&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mtcars[,1]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] 21.0 21.0 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 17.8 16.4 17.3 15.2
## [15] 10.4 10.4 14.7 32.4 30.4 33.9 21.5 15.5 15.2 13.3 19.2 27.3 26.0 30.4
## [29] 15.8 19.7 15.0 21.4&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;tibble如果使用&lt;code&gt;[&lt;/code&gt;函数来进行选择某一列,则默认出来的还是一个tibble,当然可以使用&lt;code&gt;drop&lt;/code&gt;参数来设置为TRUE,让其转变成一个vector.而对于data.frame,则取出一列,默认为vector.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;test$mpg&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] 21.0 21.0 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 17.8 16.4 17.3 15.2
## [15] 10.4 10.4 14.7 32.4 30.4 33.9 21.5 15.5 15.2 13.3 19.2 27.3 26.0 30.4
## [29] 15.8 19.7 15.0 21.4&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;test[[&amp;quot;mpg&amp;quot;]]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] 21.0 21.0 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 17.8 16.4 17.3 15.2
## [15] 10.4 10.4 14.7 32.4 30.4 33.9 21.5 15.5 15.2 13.3 19.2 27.3 26.0 30.4
## [29] 15.8 19.7 15.0 21.4&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;当然还可以使用&lt;code&gt;$&lt;/code&gt;和&lt;code&gt;[[&lt;/code&gt;函数,这两个函数取出来的都是vector.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
test %&amp;gt;% 
  pull(mpg)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] 21.0 21.0 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 17.8 16.4 17.3 15.2
## [15] 10.4 10.4 14.7 32.4 30.4 33.9 21.5 15.5 15.2 13.3 19.2 27.3 26.0 30.4
## [29] 15.8 19.7 15.0 21.4&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;当然,还可以使用&lt;code&gt;dplyr&lt;/code&gt;中的&lt;code&gt;pull()&lt;/code&gt;函数,取出来的也是vector.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;tibble添加新的列或者行&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;4&lt;/span&gt; tibble添加新的列或者行&lt;/h1&gt;
&lt;div id=&#34;添加新的行&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.1&lt;/span&gt; 添加新的行&lt;/h2&gt;
&lt;p&gt;使用&lt;code&gt;add_row()&lt;/code&gt;函数可以给已有的tibble对象添加新的行.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df &amp;lt;- tibble(x = 1:3, y = 3:1)
add_row(df, x = 4, y = 0)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 4 x 2
##       x     y
##   &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1     1     3
## 2     2     2
## 3     3     1
## 4     4     0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以通过设置&lt;code&gt;.before&lt;/code&gt;和&lt;code&gt;.after&lt;/code&gt;参数来指定插入的位置.默认都是NULL,插入到最后的位置.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;add_row(df, x = 4, y = 0, .before = 1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 4 x 2
##       x     y
##   &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1     4     0
## 2     1     3
## 3     2     2
## 4     3     1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;add_row(df, x = 4, y = 0, .before = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 4 x 2
##       x     y
##   &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1     1     3
## 2     4     0
## 3     2     2
## 4     3     1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;add_row(df, x = 4, y = 0, .before = 3)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 4 x 2
##       x     y
##   &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1     1     3
## 2     2     2
## 3     4     0
## 4     3     1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;.before&lt;/code&gt;设置为n,则是指从原来的第n行的前一行开始添加.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;add_row(df, x = 4, y = 0, .after = 1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 4 x 2
##       x     y
##   &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1     1     3
## 2     4     0
## 3     2     2
## 4     3     1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;add_row(df, x = 4, y = 0, .after = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 4 x 2
##       x     y
##   &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1     1     3
## 2     2     2
## 3     4     0
## 4     3     1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;add_row(df, x = 4, y = 0, .after = 3)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 4 x 2
##       x     y
##   &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1     1     3
## 2     2     2
## 3     3     1
## 4     4     0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;.after&lt;/code&gt;设置为m,则是指从原来的第m行的后面一行开始添加.&lt;/p&gt;
&lt;p&gt;如果某些行不提供新的元素,则会变为NA.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;add_row(df, x = 4)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 4 x 2
##       x     y
##   &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;
## 1     1     3
## 2     2     2
## 3     3     1
## 4     4    NA&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;添加新的列&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.2&lt;/span&gt; 添加新的列&lt;/h2&gt;
&lt;p&gt;使用&lt;code&gt;add_column()&lt;/code&gt;函数可以给已有的tibble对象添加新的列.跟&lt;code&gt;add_column()&lt;/code&gt;一样的.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# add_column ---------------------------------
df &amp;lt;- tibble(x = 1:3, y = 3:1)
add_column(df, z = -1:1, w = 0)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 4
##       x     y     z     w
##   &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt;
## 1     1     3    -1     0
## 2     2     2     0     0
## 3     3     1     1     0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;需要注意的是,并不能覆盖原来的列以及和原来的行数不一样的新的列.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# You can&amp;#39;t overwrite existing columns
try(
add_column(df, x = 4:6)  
)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Error : Can&amp;#39;t add duplicate columns with `add_column()`:
## * Column `x` already exists in `.data`.
## Backtrace:
##      x
##   1. +-base::local(...)
##   2. | \-base::eval.parent(substitute(eval(quote(expr), envir)))
##   3. |   \-base::eval(expr, p)
##   4. |     \-base::eval(expr, p)
##   5. +-base::eval(...)
##   6. | \-base::eval(...)
##   7. |   \-rmarkdown::render(...)
##   8. |     \-knitr::knit(...)
##   9. |       \-knitr:::process_file(text, output)
##  10. |         +-base::withCallingHandlers(...)
##  11. |         +-knitr:::process_group(group)
##  12. |         \-knitr:::process_group.block(group)
##  13. |           \-knitr:::call_block(x)
##  14. |             \-knitr:::block_exec(params)
##  15. |               +-knitr:::in_dir(...)
##  16. |               \-knitr:::evaluate(...)
##  17. |                 \-evaluate::evaluate(...)
##  18. |                   \-evaluate:::evaluate_call(...)
##  19. |                     +-evaluate:::timing_fn(...)
##  20. |                     +-base:::handle(...)
##  21. |                     +-base::withCallingHandlers(...)
##  22. |                     +-base::withVisible(eval(expr, envir, enclos))
##  23. |                     \-base::eval(expr, envir, enclos)
##  24. |                       \-base::eval(expr, envir, enclos)
##  25. +-base::try(add_column(df, x = 4:6))
##  26. | \-base::tryCatch(...)
##  27. |   \-base:::tryCatchList(expr, classes, parentenv, handlers)
##  28. |     \-base:::tryCatchOne(expr, names, parentenv, handlers[[1L]])
##  29. |       \-base:::doTryCatch(return(expr), name, parentenv, handler)
##  30. \-tibble::add_column(df, x = 4:6)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# You can&amp;#39;t create new observations
try(
 add_column(df, z = 1:5) 
)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Error : New columns in `add_column()` must be consistent with `.data`:
## * `.data` has 3 rows
## * New column contributes 5 rows
## Backtrace:
##      x
##   1. +-base::local(...)
##   2. | \-base::eval.parent(substitute(eval(quote(expr), envir)))
##   3. |   \-base::eval(expr, p)
##   4. |     \-base::eval(expr, p)
##   5. +-base::eval(...)
##   6. | \-base::eval(...)
##   7. |   \-rmarkdown::render(...)
##   8. |     \-knitr::knit(...)
##   9. |       \-knitr:::process_file(text, output)
##  10. |         +-base::withCallingHandlers(...)
##  11. |         +-knitr:::process_group(group)
##  12. |         \-knitr:::process_group.block(group)
##  13. |           \-knitr:::call_block(x)
##  14. |             \-knitr:::block_exec(params)
##  15. |               +-knitr:::in_dir(...)
##  16. |               \-knitr:::evaluate(...)
##  17. |                 \-evaluate::evaluate(...)
##  18. |                   \-evaluate:::evaluate_call(...)
##  19. |                     +-evaluate:::timing_fn(...)
##  20. |                     +-base:::handle(...)
##  21. |                     +-base::withCallingHandlers(...)
##  22. |                     +-base::withVisible(eval(expr, envir, enclos))
##  23. |                     \-base::eval(expr, envir, enclos)
##  24. |                       \-base::eval(expr, envir, enclos)
##  25. +-base::try(add_column(df, z = 1:5))
##  26. | \-base::tryCatch(...)
##  27. |   \-base:::tryCatchList(expr, classes, parentenv, handlers)
##  28. |     \-base:::tryCatchOne(expr, names, parentenv, handlers[[1L]])
##  29. |       \-base:::doTryCatch(return(expr), name, parentenv, handler)
##  30. \-tibble::add_column(df, z = 1:5)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;所以其实并不方便,还是使用&lt;code&gt;dplyr&lt;/code&gt;更方便.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;tibble对列名和行名的操作&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;5&lt;/span&gt; tibble对列名和行名的操作&lt;/h1&gt;
&lt;div id=&#34;判断是否有行名&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;5.1&lt;/span&gt; 判断是否有行名&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(mtcars)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                    mpg cyl disp  hp drat    wt  qsec vs am gear carb
## Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4
## Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4
## Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1
## Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1
## Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2
## Valiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rownames(mtcars)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;Mazda RX4&amp;quot;           &amp;quot;Mazda RX4 Wag&amp;quot;       &amp;quot;Datsun 710&amp;quot;         
##  [4] &amp;quot;Hornet 4 Drive&amp;quot;      &amp;quot;Hornet Sportabout&amp;quot;   &amp;quot;Valiant&amp;quot;            
##  [7] &amp;quot;Duster 360&amp;quot;          &amp;quot;Merc 240D&amp;quot;           &amp;quot;Merc 230&amp;quot;           
## [10] &amp;quot;Merc 280&amp;quot;            &amp;quot;Merc 280C&amp;quot;           &amp;quot;Merc 450SE&amp;quot;         
## [13] &amp;quot;Merc 450SL&amp;quot;          &amp;quot;Merc 450SLC&amp;quot;         &amp;quot;Cadillac Fleetwood&amp;quot; 
## [16] &amp;quot;Lincoln Continental&amp;quot; &amp;quot;Chrysler Imperial&amp;quot;   &amp;quot;Fiat 128&amp;quot;           
## [19] &amp;quot;Honda Civic&amp;quot;         &amp;quot;Toyota Corolla&amp;quot;      &amp;quot;Toyota Corona&amp;quot;      
## [22] &amp;quot;Dodge Challenger&amp;quot;    &amp;quot;AMC Javelin&amp;quot;         &amp;quot;Camaro Z28&amp;quot;         
## [25] &amp;quot;Pontiac Firebird&amp;quot;    &amp;quot;Fiat X1-9&amp;quot;           &amp;quot;Porsche 914-2&amp;quot;      
## [28] &amp;quot;Lotus Europa&amp;quot;        &amp;quot;Ford Pantera L&amp;quot;      &amp;quot;Ferrari Dino&amp;quot;       
## [31] &amp;quot;Maserati Bora&amp;quot;       &amp;quot;Volvo 142E&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;has_rownames(mtcars)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(iris)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
## 1          5.1         3.5          1.4         0.2  setosa
## 2          4.9         3.0          1.4         0.2  setosa
## 3          4.7         3.2          1.3         0.2  setosa
## 4          4.6         3.1          1.5         0.2  setosa
## 5          5.0         3.6          1.4         0.2  setosa
## 6          5.4         3.9          1.7         0.4  setosa&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rownames(iris)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   [1] &amp;quot;1&amp;quot;   &amp;quot;2&amp;quot;   &amp;quot;3&amp;quot;   &amp;quot;4&amp;quot;   &amp;quot;5&amp;quot;   &amp;quot;6&amp;quot;   &amp;quot;7&amp;quot;   &amp;quot;8&amp;quot;   &amp;quot;9&amp;quot;   &amp;quot;10&amp;quot;  &amp;quot;11&amp;quot; 
##  [12] &amp;quot;12&amp;quot;  &amp;quot;13&amp;quot;  &amp;quot;14&amp;quot;  &amp;quot;15&amp;quot;  &amp;quot;16&amp;quot;  &amp;quot;17&amp;quot;  &amp;quot;18&amp;quot;  &amp;quot;19&amp;quot;  &amp;quot;20&amp;quot;  &amp;quot;21&amp;quot;  &amp;quot;22&amp;quot; 
##  [23] &amp;quot;23&amp;quot;  &amp;quot;24&amp;quot;  &amp;quot;25&amp;quot;  &amp;quot;26&amp;quot;  &amp;quot;27&amp;quot;  &amp;quot;28&amp;quot;  &amp;quot;29&amp;quot;  &amp;quot;30&amp;quot;  &amp;quot;31&amp;quot;  &amp;quot;32&amp;quot;  &amp;quot;33&amp;quot; 
##  [34] &amp;quot;34&amp;quot;  &amp;quot;35&amp;quot;  &amp;quot;36&amp;quot;  &amp;quot;37&amp;quot;  &amp;quot;38&amp;quot;  &amp;quot;39&amp;quot;  &amp;quot;40&amp;quot;  &amp;quot;41&amp;quot;  &amp;quot;42&amp;quot;  &amp;quot;43&amp;quot;  &amp;quot;44&amp;quot; 
##  [45] &amp;quot;45&amp;quot;  &amp;quot;46&amp;quot;  &amp;quot;47&amp;quot;  &amp;quot;48&amp;quot;  &amp;quot;49&amp;quot;  &amp;quot;50&amp;quot;  &amp;quot;51&amp;quot;  &amp;quot;52&amp;quot;  &amp;quot;53&amp;quot;  &amp;quot;54&amp;quot;  &amp;quot;55&amp;quot; 
##  [56] &amp;quot;56&amp;quot;  &amp;quot;57&amp;quot;  &amp;quot;58&amp;quot;  &amp;quot;59&amp;quot;  &amp;quot;60&amp;quot;  &amp;quot;61&amp;quot;  &amp;quot;62&amp;quot;  &amp;quot;63&amp;quot;  &amp;quot;64&amp;quot;  &amp;quot;65&amp;quot;  &amp;quot;66&amp;quot; 
##  [67] &amp;quot;67&amp;quot;  &amp;quot;68&amp;quot;  &amp;quot;69&amp;quot;  &amp;quot;70&amp;quot;  &amp;quot;71&amp;quot;  &amp;quot;72&amp;quot;  &amp;quot;73&amp;quot;  &amp;quot;74&amp;quot;  &amp;quot;75&amp;quot;  &amp;quot;76&amp;quot;  &amp;quot;77&amp;quot; 
##  [78] &amp;quot;78&amp;quot;  &amp;quot;79&amp;quot;  &amp;quot;80&amp;quot;  &amp;quot;81&amp;quot;  &amp;quot;82&amp;quot;  &amp;quot;83&amp;quot;  &amp;quot;84&amp;quot;  &amp;quot;85&amp;quot;  &amp;quot;86&amp;quot;  &amp;quot;87&amp;quot;  &amp;quot;88&amp;quot; 
##  [89] &amp;quot;89&amp;quot;  &amp;quot;90&amp;quot;  &amp;quot;91&amp;quot;  &amp;quot;92&amp;quot;  &amp;quot;93&amp;quot;  &amp;quot;94&amp;quot;  &amp;quot;95&amp;quot;  &amp;quot;96&amp;quot;  &amp;quot;97&amp;quot;  &amp;quot;98&amp;quot;  &amp;quot;99&amp;quot; 
## [100] &amp;quot;100&amp;quot; &amp;quot;101&amp;quot; &amp;quot;102&amp;quot; &amp;quot;103&amp;quot; &amp;quot;104&amp;quot; &amp;quot;105&amp;quot; &amp;quot;106&amp;quot; &amp;quot;107&amp;quot; &amp;quot;108&amp;quot; &amp;quot;109&amp;quot; &amp;quot;110&amp;quot;
## [111] &amp;quot;111&amp;quot; &amp;quot;112&amp;quot; &amp;quot;113&amp;quot; &amp;quot;114&amp;quot; &amp;quot;115&amp;quot; &amp;quot;116&amp;quot; &amp;quot;117&amp;quot; &amp;quot;118&amp;quot; &amp;quot;119&amp;quot; &amp;quot;120&amp;quot; &amp;quot;121&amp;quot;
## [122] &amp;quot;122&amp;quot; &amp;quot;123&amp;quot; &amp;quot;124&amp;quot; &amp;quot;125&amp;quot; &amp;quot;126&amp;quot; &amp;quot;127&amp;quot; &amp;quot;128&amp;quot; &amp;quot;129&amp;quot; &amp;quot;130&amp;quot; &amp;quot;131&amp;quot; &amp;quot;132&amp;quot;
## [133] &amp;quot;133&amp;quot; &amp;quot;134&amp;quot; &amp;quot;135&amp;quot; &amp;quot;136&amp;quot; &amp;quot;137&amp;quot; &amp;quot;138&amp;quot; &amp;quot;139&amp;quot; &amp;quot;140&amp;quot; &amp;quot;141&amp;quot; &amp;quot;142&amp;quot; &amp;quot;143&amp;quot;
## [144] &amp;quot;144&amp;quot; &amp;quot;145&amp;quot; &amp;quot;146&amp;quot; &amp;quot;147&amp;quot; &amp;quot;148&amp;quot; &amp;quot;149&amp;quot; &amp;quot;150&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;has_rownames(iris)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] FALSE&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以使用&lt;code&gt;remove_rownames()&lt;/code&gt;函数去除掉行名.当然也可以使用将行名设置为NULL打到目的&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;has_rownames(mtcars)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mtcars2 &amp;lt;- 
  remove_rownames(mtcars)
has_rownames(mtcars2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] FALSE&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;行名和某一列互相转换&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;5.2&lt;/span&gt; 行名和某一列互相转换&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;rownames_to_column()&lt;/code&gt;函数可以将tibble的行名转变为某一列,并且删除掉行名.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mtcars2 &amp;lt;- 
rownames_to_column(mtcars, var = &amp;quot;test&amp;quot;)
mtcars2 %&amp;gt;% 
  as_tibble()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 32 x 12
##    test     mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb
##    &amp;lt;chr&amp;gt;  &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1 Mazda~  21       6  160    110  3.9   2.62  16.5     0     1     4     4
##  2 Mazda~  21       6  160    110  3.9   2.88  17.0     0     1     4     4
##  3 Datsu~  22.8     4  108     93  3.85  2.32  18.6     1     1     4     1
##  4 Horne~  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1
##  5 Horne~  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2
##  6 Valia~  18.1     6  225    105  2.76  3.46  20.2     1     0     3     1
##  7 Duste~  14.3     8  360    245  3.21  3.57  15.8     0     0     3     4
##  8 Merc ~  24.4     4  147.    62  3.69  3.19  20       1     0     4     2
##  9 Merc ~  22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2
## 10 Merc ~  19.2     6  168.   123  3.92  3.44  18.3     1     0     4     4
## # ... with 22 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;另外一个函数,&lt;code&gt;rowid_to_column()&lt;/code&gt;可以去除掉行名,并在最开始添加一列rowid,从1开始.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rowid_to_column(mtcars) %&amp;gt;% 
  as_tibble()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 32 x 12
##    rowid   mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb
##    &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1     1  21       6  160    110  3.9   2.62  16.5     0     1     4     4
##  2     2  21       6  160    110  3.9   2.88  17.0     0     1     4     4
##  3     3  22.8     4  108     93  3.85  2.32  18.6     1     1     4     1
##  4     4  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1
##  5     5  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2
##  6     6  18.1     6  225    105  2.76  3.46  20.2     1     0     3     1
##  7     7  14.3     8  360    245  3.21  3.57  15.8     0     0     3     4
##  8     8  24.4     4  147.    62  3.69  3.19  20       1     0     4     2
##  9     9  22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2
## 10    10  19.2     6  168.   123  3.92  3.44  18.3     1     0     4     4
## # ... with 22 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;当然也可以将某一列变为行名:&lt;code&gt;column_to_rownames()&lt;/code&gt;.注意必须要求tibble没有行名,且新的行名是没有重复元素的.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;column_to_rownames(mtcars2, var = &amp;quot;test&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                      mpg cyl  disp  hp drat    wt  qsec vs am gear carb
## Mazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4
## Mazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4
## Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1
## Hornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1
## Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2
## Valiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1
## Duster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4
## Merc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2
## Merc 230            22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2
## Merc 280            19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4
## Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4
## Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3
## Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3
## Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3
## Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4
## Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4
## Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4
## Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1
## Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2
## Toyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1
## Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1
## Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2
## AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2
## Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4
## Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2
## Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1
## Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2
## Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2
## Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4
## Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6
## Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8
## Volvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Windows使用Summary</title>
      <link>/post/2019-11-08-windows-summary/</link>
      <pubDate>Fri, 08 Nov 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-11-08-windows-summary/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#如何在两台电脑间共享文件夹&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; 如何在两台电脑间共享文件夹?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#cmd命令&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; CMD命令&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#如何使用cmd修改路径&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.1&lt;/span&gt; 如何使用CMD修改路径?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#查看当前路径&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.2&lt;/span&gt; 查看当前路径&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#查看当前路径下文件&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.3&lt;/span&gt; 查看当前路径下文件&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;如何在两台电脑间共享文件夹&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; 如何在两台电脑间共享文件夹?&lt;/h1&gt;
&lt;p&gt;参考帖子:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://jingyan.baidu.com/article/93f9803f3e9788e0e46f55c8.html&#34; class=&#34;uri&#34;&gt;https://jingyan.baidu.com/article/93f9803f3e9788e0e46f55c8.html&lt;/a&gt;&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;保证两台电脑在同一个网络中.对于Stanford来说,如果在其他地方,需要连接VPN.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在workstation(电脑B)上打开网络设置.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;figure1.png&#34; /&gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;选择&lt;code&gt;Sharing options&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;figure2.png&#34; /&gt;&lt;/p&gt;
&lt;ol start=&#34;4&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;Private&lt;/code&gt;按照下面进行设置.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;figure3.png&#34; /&gt;&lt;/p&gt;
&lt;ol start=&#34;5&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;All network按照下面设置&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;figure4.png&#34; /&gt;&lt;/p&gt;
&lt;ol start=&#34;6&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;选择要共享的文件夹,然后右键打开属性.然后选择&lt;code&gt;Share&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;figure5.png&#34; /&gt;&lt;/p&gt;
&lt;ol start=&#34;7&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;选择&lt;code&gt;Everyone&lt;/code&gt;,然后点击&lt;code&gt;Share&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;figure6.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;8.然后再点击第6步中的&lt;code&gt;Advanced Sharing&lt;/code&gt;.按照下图设置.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;figure7.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;9.快捷键&lt;code&gt;win + R&lt;/code&gt;打开&lt;code&gt;run&lt;/code&gt;.然后输入B电脑的IPV4地址.然后需要登录,注意,使用的是你在B电脑上的账号和密码登录,有时候注意登录名前需要添加&lt;code&gt;win\&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;figure8.png&#34; /&gt;&lt;/p&gt;
&lt;ol start=&#34;10&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;最终效果如下图.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;figure9.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;cmd命令&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; CMD命令&lt;/h1&gt;
&lt;div id=&#34;如何使用cmd修改路径&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.1&lt;/span&gt; 如何使用CMD修改路径?&lt;/h2&gt;
&lt;p&gt;如果修改某个盘,先直接打盘名加冒号即可,不需要使用&lt;code&gt;cd&lt;/code&gt;命令.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;D:&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后进入到某个盘的子目录下,才需要使用&lt;code&gt;cd&lt;/code&gt;命令.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;查看当前路径&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.2&lt;/span&gt; 查看当前路径&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;cd&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;查看当前路径下文件&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.3&lt;/span&gt; 查看当前路径下文件&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;dir&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Metmicrobome Literature Sumamry</title>
      <link>/post/2019-11-04-metmicrobome-literature-sumamry/</link>
      <pubDate>Mon, 04 Nov 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-11-04-metmicrobome-literature-sumamry/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#predictive-metabolomic-profiling-of-microbial-communities-using-amplicon-or-metagenomic-sequences&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; Predictive metabolomic profiling of microbial communities using amplicon or metagenomic sequences&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#methods&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1&lt;/span&gt; Methods&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#training-and-validation-cohort-descriptions&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1.1&lt;/span&gt; Training and validation cohort descriptions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#taxonomic-and-functional-profiling&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1.2&lt;/span&gt; Taxonomic and functional profiling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#metabolite-profiling&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1.3&lt;/span&gt; Metabolite profiling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#elastic-net-regularization&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1.4&lt;/span&gt; Elastic net regularization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#significance-testing-with-shuffled-data&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1.5&lt;/span&gt; Significance testing with shuffled data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#gene-set-enrichment-analysis&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1.6&lt;/span&gt; Gene set enrichment analysis&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;predictive-metabolomic-profiling-of-microbial-communities-using-amplicon-or-metagenomic-sequences&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; Predictive metabolomic profiling of microbial communities using amplicon or metagenomic sequences&lt;/h1&gt;
&lt;p&gt;开发的软件名字叫做MelonnPan(Model-based Genomically Informed High-dimensional Predictor of Microbial Community Metabolic Profile)&lt;/p&gt;
&lt;p&gt;在一个cohort上开发, 在另一个indepent dataset上做验证.&lt;/p&gt;
&lt;p&gt;This revealed high concordance (一致) between predicted and observed community metabolic trends in &amp;gt;50% of metabolites whose identities were confirmed against laboratory standards, including prediction of metabolic shifts associated with bile acids, fatty acids, steroids, prenol lipids, and sphingolipids.&lt;/p&gt;
&lt;div id=&#34;methods&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1&lt;/span&gt; Methods&lt;/h2&gt;
&lt;div id=&#34;training-and-validation-cohort-descriptions&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.1&lt;/span&gt; Training and validation cohort descriptions&lt;/h3&gt;
&lt;p&gt;One training data sets, two validation data sets.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;taxonomic-and-functional-profiling&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.2&lt;/span&gt; Taxonomic and functional profiling&lt;/h3&gt;
&lt;p&gt;Stool samples.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;metabolite-profiling&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.3&lt;/span&gt; Metabolite profiling&lt;/h3&gt;
&lt;p&gt;HHILIC and RPLC. 8869 features and 466 metabolites.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;elastic-net-regularization&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.4&lt;/span&gt; Elastic net regularization&lt;/h3&gt;
&lt;p&gt;Elastic net regularization technique. Use the R package &lt;code&gt;glmnet&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Spearman correlation coefficient (r) between the true and pre- dicted metabolite compositions was used to evaluate the predictability of each compound. Following Cohen68, we term those metabolites for which r is &amp;gt;0.3 as “well predicted” and flag the rest as poorly predicted metabolites.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;significance-testing-with-shuffled-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.5&lt;/span&gt; Significance testing with shuffled data&lt;/h3&gt;
&lt;p&gt;其实就是permutation test.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;gene-set-enrichment-analysis&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.6&lt;/span&gt; Gene set enrichment analysis&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Maternal urinary metabolic signatures of fetal growth and associated clinical and environmental factors in the INMA study文献阅读总结</title>
      <link>/post/2019-11-01-maternal-urinary-metabolic-signatures/</link>
      <pubDate>Fri, 01 Nov 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-11-01-maternal-urinary-metabolic-signatures/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#abstract&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; Abstract&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#methods&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; Methods&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#study-population&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.1&lt;/span&gt; Study population&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#definition-of-the-fetal-and-birth-measurements&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.2&lt;/span&gt; Definition of the fetal and birth measurements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#metabolic-profiling-by-nmr&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.3&lt;/span&gt; Metabolic profiling by NMR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#statistical-analysis&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.4&lt;/span&gt; Statistical analysis&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#step-1.-identify-main-sources-of-metabolic-variation-between-first-and-third-trimesters-of-gestation&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.4.1&lt;/span&gt; Step 1. Identify main sources of metabolic variation between first and third trimesters of gestation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#step-2.-identify-metabolites-associated-with-fetal-growth&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.4.2&lt;/span&gt; Step 2. Identify metabolites associated with fetal growth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#step-3.-assess-the-extent-to-which-the-metabolite-panel-associated-with-fetal-growth-can-be-explained-by-known-growth-related-factors-from-epidemiological-and-clinical-data&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.4.3&lt;/span&gt; Step 3. Assess the extent to which the metabolite panel associated with fetal growth can be explained by known growth-related factors from epidemiological and clinical data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#step-4.-determinants-of-birth-weight-a-variance-decomposition-analysis&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.4.4&lt;/span&gt; Step 4. Determinants of birth weight: a variance decomposition analysis&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;abstract&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; Abstract&lt;/h1&gt;
&lt;p&gt;使用NMR仪器采集urine数据.一共两个cohort.两个时间点(fisrt and third trimesters of gestation).用metabolome来预测fetal growth和birth weight.&lt;/p&gt;
&lt;p&gt;测到的东西包括:branched-chain amino acids(支链氨基酸);isoleucine(异亮氨酸),valine(颉氨酸),leucine(亮氨酸),alanine(丙氨酸)和3 hydroxyisobutyrate(羟基异丁酸)(metabolite of valine).&lt;/p&gt;
&lt;p&gt;另外一大类就是:pregnancy-related hormone by-products of estrogens and progesterone, and the methyl donor choline.
Physical activity, as well as other modifiable lifestyle/clinical factors, such as coffee consumption, vitamin D intake, and smoking, were identified as potential sources of metabolic variation during pregnancy.First trimester metabolic phenotypes could not predict reproducibly weight at later stages of development.&lt;/p&gt;
&lt;p&gt;Significant reproducible maternal urinary metabolic signatures of fetal growth and birth weight are identified for the first time and linked to modifiable lifestyle factors. This novel approach to prenatal(产前的) screening, combining multiple risk factors, present a great opportunity to personalize pregnancy management management and reduce newborn disease risk in later life.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;methods&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; Methods&lt;/h1&gt;
&lt;p&gt;NMR采集数据,一共1695 metabolic phenotypes.&lt;/p&gt;
&lt;p&gt;Exploratory metabolic profiling offers a powerful means of capturing systems-level information that re- flects both maternal genetic and environmental influ- ences, hence helping to elucidate metabolic disturbances and pathways associated with fetal outcomes.&lt;/p&gt;
&lt;p&gt;This study aimed to (1) characterize the maternal urinary metabolome throughout pregnancy, (2) identify maternal metabolic signatures of fetal growth in two subcohorts, (3) explain potential sources of variation in metabolic profiles based on lifestyle and clinical data, and finally (4) to determine the individ- ual importance of metabolic signatures versus other maternal&lt;/p&gt;
&lt;div id=&#34;study-population&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.1&lt;/span&gt; Study population&lt;/h2&gt;
&lt;p&gt;The women were interviewed twice during pregnancy (in the first and third trimesters of gestation) to obtain infor- mation about their sociodemographic characteristics and lifestyle variables. The urine samples were collected in the same interview in the morning (spot samples). The urine samples were collected in the same interview in the morning (spot samples). 所以一共有两个时间点.分别在first trimester and third trimesters.时间为&lt;strong&gt;12.4 ± 1.2&lt;/strong&gt;和&lt;strong&gt;33.9 ± 1.3&lt;/strong&gt; weeks.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;definition-of-the-fetal-and-birth-measurements&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.2&lt;/span&gt; Definition of the fetal and birth measurements&lt;/h2&gt;
&lt;p&gt;Fetal weight(FW)就是使用ultrasound对胎儿的几个指标进行测量(详细指标见下面内容),然后使用&lt;code&gt;Hadlock&lt;/code&gt;公式进行计算,可以得出胎儿的体重.&lt;/p&gt;
&lt;p&gt;然后下面一个概念就是&lt;code&gt;fetal growth score&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;下面是原文:&lt;/p&gt;
&lt;p&gt;Fetal growth scores or standard deviation scores (z- scores) were obtained using longitudinal growth curves calculated for each individual adjusting for constitutional factors known to affect fetal growth (i.e., maternal age, height, parity, pre-pregnancy weight, country of origin, father’s height, and fetal sex).&lt;/p&gt;
&lt;p&gt;推测做法:&lt;/p&gt;
&lt;p&gt;对于每一个母亲,使用胎儿的体重(fetal weight,FW)作为因变量,然后其他的一些因素,比如maternal age等等作为cofounding factor,然后进行回归,剩余的残差就是矫正过后的fetal growth score.&lt;/p&gt;
&lt;p&gt;协变量:&lt;/p&gt;
&lt;p&gt;Gestational age was calculated from the date of the last menstrual period (LMP) which was self-reported and was confirmed using ultrasound examination in 12 wk of gestation. When the date did not match the ultrasound measurement estimation by 7 days or more, the gestational age was corrected using its relationship to the crown-rump length(顶臀长).&lt;/p&gt;
&lt;p&gt;GA有两种计算方式,一种是使用孕妇自己报告的最后一次月经的第一天开始算起,整个怀孕周期为280天.10个妊娠月(每个妊娠月为28天).另外一种方法是使用ultrasound在12周的数据进行反推.如果两种方法的误差不在一周内,&lt;code&gt;则以哪种为准呢?&lt;/code&gt;如果误差在大于一周,则使用他们与crown-rump length(顶臀长)的关系进行矫正(&lt;code&gt;如何矫正?&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Fetal growth score是使用longitudinal growth curve来计算的,然后adjust了一些已知的能够影响fetal growth的因素,如maternal age(母亲的年龄),height(母亲的身高),parity(已生胎数),pre-pregnancy weight(怀孕前的体重),country of origin(地区),father’s height(母亲的身高),and fetal sex(胎儿性别).&lt;/p&gt;
&lt;p&gt;这个值是一个标准化后的值.(standard deviation scores,z-scores).&lt;/p&gt;
&lt;p&gt;没有矫正后的z-score.&lt;/p&gt;
&lt;p&gt;date of conception:妊娠期.&lt;/p&gt;
&lt;p&gt;Gestational age(孕龄)was established by using crown–rump length when the calculated date of conception differed from the fetal age based on the subject’s self-reported last menstrual period by 7 days or more.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;metabolic-profiling-by-nmr&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.3&lt;/span&gt; Metabolic profiling by NMR&lt;/h2&gt;
&lt;p&gt;一共鉴定到64个代谢物,其中47个fully identified.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;statistical-analysis&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.4&lt;/span&gt; Statistical analysis&lt;/h2&gt;
&lt;div id=&#34;step-1.-identify-main-sources-of-metabolic-variation-between-first-and-third-trimesters-of-gestation&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.4.1&lt;/span&gt; Step 1. Identify main sources of metabolic variation between first and third trimesters of gestation&lt;/h3&gt;
&lt;p&gt;PCA和OPLSA用来观察first and third trimester gestation的整体差异.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;step-2.-identify-metabolites-associated-with-fetal-growth&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.4.2&lt;/span&gt; Step 2. Identify metabolites associated with fetal growth&lt;/h3&gt;
&lt;p&gt;对于所有的metabolite数据,首先将其进行log transformation.然后将fetal growth score作为因变量,metabolite作为自变量,而采样时间作为confounding factor进行multivarite linear regression.得到的每一个metabolite的coefficient乘以1.5的作为当该metabolite level提高50%时其对fetal growth score的影响(&lt;code&gt;没有太懂?&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Regression coefficients are presented as a percent of change in the z-score of each fetal growth measure.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;step-3.-assess-the-extent-to-which-the-metabolite-panel-associated-with-fetal-growth-can-be-explained-by-known-growth-related-factors-from-epidemiological-and-clinical-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.4.3&lt;/span&gt; Step 3. Assess the extent to which the metabolite panel associated with fetal growth can be explained by known growth-related factors from epidemiological and clinical data&lt;/h3&gt;
&lt;p&gt;探究哪一些的metaboloite-fetal relationshi可以被一些已知的epidemiological和clinical data所解释.&lt;/p&gt;
&lt;p&gt;作者考虑了以下已知的和fetal growth相关的参数:&lt;/p&gt;
&lt;p&gt;maternal clinical parameters.&lt;/p&gt;
&lt;p&gt;materna lifestyle in third trimester.&lt;/p&gt;
&lt;p&gt;dietary intake in third trimester.&lt;/p&gt;
&lt;p&gt;sociodemographic characteristics (社会人口特征).&lt;/p&gt;
&lt;p&gt;一共有38个信息.详细信息请请见该&lt;a href=&#34;https://office365stanford-my.sharepoint.com/❌/r/personal/shenxt_stanford_edu/_layouts/15/Doc.aspx?sourcedoc=%7BE1FAE2E0-2B7D-4600-A1E3-2EC7B2391350%7D&amp;amp;file=41467_2019_11881_MOESM4_ESM.xlsx&amp;amp;action=default&amp;amp;mobileredirect=true&#34;&gt;表格&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;将metabolite和maternal parameters进行spearman correlation的计算,然后化作crios plot(只保留p adjust &amp;lt; 0.05, FDR矫正).&lt;/p&gt;
&lt;p&gt;In addition, correlation adjusted scores (CAR scores) were used to measure the correlation between metabolite levels and all the Mahalanobis decorrelated predictors in one model (growth-related factors selected from epidemiological and clinical data) as implemented in the R-package ‘care’&lt;/p&gt;
&lt;p&gt;这段话没有看懂.&lt;/p&gt;
&lt;p&gt;什么是correlation adjusted scores?&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;step-4.-determinants-of-birth-weight-a-variance-decomposition-analysis&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.4.4&lt;/span&gt; Step 4. Determinants of birth weight: a variance decomposition analysis&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>怀孕基础知识总结</title>
      <link>/post/2019-11-01-pregnancy-knowledge/</link>
      <pubDate>Fri, 01 Nov 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-11-01-pregnancy-knowledge/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#孕龄gestational-agega的计算&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; 孕龄(gestational age,GA)的计算&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;因为要做跟怀孕相关的项目,所以把一些基础的怀孕知识做一下总结.&lt;/p&gt;
&lt;div id=&#34;孕龄gestational-agega的计算&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; 孕龄(gestational age,GA)的计算&lt;/h1&gt;
&lt;p&gt;整个怀孕周期为280天.10个妊娠月(每个妊娠月为28天).孕妇在妊娠38-42周内分娩,均为足月.由于每位女性月经周期长短不一,所以推测的预产期与实际预产期有1-2周的出入也是正常的.主要的计算方法有以下几种:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;根据末次月经计算:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;末次月经日期(第一天)的月份加9或减3,为预产期月份数;天数加7,为预产期日.例如:张女士的末次月经是2008年3月13日,其预产期约为:2008年12月20日.李女士的末次月经是2008年5月28日,其预产期约为:2009年3月5日.也可以从末次月经第一天起向后推算到第280天就是预产期.&lt;/p&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;根据胎动日期计算:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如不清末次月经日期,可以依据胎动日期来进行推算.一般胎动开始于怀孕后的18-20周.计算方法为:初产妇是胎动日加20周;经产妇是胎动日加22周.&lt;/p&gt;
&lt;ol start=&#34;3&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;根据基础体温曲线计算:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;将基础体温曲线的低温段的最后一天作为排卵日,从排卵日向后推算264-268天,或加38周.&lt;/p&gt;
&lt;ol start=&#34;4&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;根据B超检查推算:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;医生做B超时测得胎头双顶间径,头臀长度及股骨长度即可估算出胎龄,并推算出预产期(此方法大多作为医生B超检查诊断应用).&lt;/p&gt;
&lt;p&gt;用来预测胎儿体重(fetal birth weight)的几个参数(从超声波测量而来):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Fiparietal diameter(BPD):胎儿双顶径.为两侧顶骨隆突间的距离,是胎头最大横径,临床用B型超声检测此值判断胎儿大小,妊娠足月时平均长度约9.3cm.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Femur length(FL):胎儿股骨长度.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Head circumference (AC):胎儿头围.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Abdominal circumference (AC):胎儿腹围.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;crown–rump length:胎儿的头臀长.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;5&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;从孕吐开始的时间推算:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;反应孕吐一般出现在怀孕6周末，就是末次月经后42天，由此向后推算至280天即为预产期。&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>2019 10 31 Date Summary</title>
      <link>/post/2019-10-31-date-summary/</link>
      <pubDate>Thu, 31 Oct 2019 10:31:50 -0700</pubDate>
      <guid>/post/2019-10-31-date-summary/</guid>
      <description></description>
    </item>
    
    <item>
      <title>日期时间操作总结</title>
      <link>/post/2019-10-31-date-summary/</link>
      <pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-10-31-date-summary/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#日期格式转换&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; 日期格式转换&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#比如美国这边常见的月日年.&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1&lt;/span&gt; 比如美国这边常见的&lt;code&gt;月/日/年&lt;/code&gt;.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#国内常见常见的年月日&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.2&lt;/span&gt; 国内常见常见的&lt;code&gt;年/月/日&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#常见日期各个元素的写法及相应format的写法&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.3&lt;/span&gt; 常见日期各个元素的写法及相应format的写法&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#年&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.3.1&lt;/span&gt; 年&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#月&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.3.2&lt;/span&gt; 月&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#日&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.3.3&lt;/span&gt; 日&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#时间&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.3.4&lt;/span&gt; 时间&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;R语言中和日期时间相关的一共有三种格式,分别是日期(date),日期时间(data-times)和时间(time).&lt;/p&gt;
&lt;p&gt;一般来说,日期格式需要符合&lt;code&gt;ISO8601&lt;/code&gt;格式,这是一种国际上通用的日期时间格式,包含的内容从大到小包括:年,月,日,小时,分钟和秒.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(readr)
parse_datetime(&amp;quot;2019-11-11T2010&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2019-11-11 20:10:00 UTC&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;parse_datetime()&lt;/code&gt;是&lt;code&gt;readr&lt;/code&gt;包中的用于解析日期的函数.&lt;/p&gt;
&lt;div id=&#34;日期格式转换&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; 日期格式转换&lt;/h1&gt;
&lt;p&gt;使用&lt;code&gt;as.Date()&lt;/code&gt;函数将文本格式日期转换为date格式数据.一共需要两个参数:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;x:文本格式日期.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;format:文本格式日期的格式.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;比如美国这边常见的月日年.&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1&lt;/span&gt; 比如美国这边常见的&lt;code&gt;月/日/年&lt;/code&gt;.&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;date &amp;lt;- c(&amp;quot;8/6/2014&amp;quot;, &amp;quot;3/18/2015&amp;quot;)
class(date)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;character&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;date2 &amp;lt;- as.Date(x = date, format = &amp;quot;%m/%d/%Y&amp;quot;)
date2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2014-08-06&amp;quot; &amp;quot;2015-03-18&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;class(date2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Date&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;date &amp;lt;- c(&amp;quot;08/06/2014&amp;quot;, &amp;quot;03/18/2015&amp;quot;)
date2 &amp;lt;- as.Date(x = date, format = &amp;quot;%m/%d/%Y&amp;quot;)
date2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2014-08-06&amp;quot; &amp;quot;2015-03-18&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;class(date2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Date&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;date &amp;lt;- c(&amp;quot;08/06/14&amp;quot;, &amp;quot;03/18/15&amp;quot;)
date2 &amp;lt;- as.Date(x = date, format = &amp;quot;%m/%d/%y&amp;quot;)
date2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2014-08-06&amp;quot; &amp;quot;2015-03-18&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;class(date2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Date&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;注意可以看到,对于&lt;code&gt;年&lt;/code&gt;,有时候大家会省写,比如&lt;code&gt;2015&lt;/code&gt;写为&lt;code&gt;15&lt;/code&gt;.这时候在&lt;code&gt;format&lt;/code&gt;参数中代表年的位置应当由全写的&lt;code&gt;Y&lt;/code&gt;改为小写的&lt;code&gt;y&lt;/code&gt;.对于&lt;code&gt;月&lt;/code&gt;和&lt;code&gt;日&lt;/code&gt;则不存在这个问题.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;国内常见常见的年月日&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2&lt;/span&gt; 国内常见常见的&lt;code&gt;年/月/日&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;当然对于其他的类似使用&lt;code&gt;/&lt;/code&gt;分隔开日期形式,只要变换&lt;code&gt;format&lt;/code&gt;中的顺序即可.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;date &amp;lt;- c(&amp;quot;2015/8/6&amp;quot;, &amp;quot;3/18/15&amp;quot;)
class(date)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;character&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;date2 &amp;lt;- as.Date(x = date, format = c(&amp;quot;%Y/%m/%d&amp;quot; ,&amp;quot;%m/%d/%y&amp;quot;))
date2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2015-08-06&amp;quot; &amp;quot;2015-03-18&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;class(date2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Date&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以看到对于格式不同的数据,可以将&lt;code&gt;format&lt;/code&gt;设置为向量.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;常见日期各个元素的写法及相应format的写法&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.3&lt;/span&gt; 常见日期各个元素的写法及相应format的写法&lt;/h2&gt;
&lt;div id=&#34;年&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.3.1&lt;/span&gt; 年&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;%Y&lt;/strong&gt;: 4位完整数字的年.如&lt;code&gt;2019&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;%y&lt;/strong&gt;: 2位数字的年.如&lt;code&gt;19&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;月&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.3.2&lt;/span&gt; 月&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;%m&lt;/strong&gt;: 两位或者一位的月,如&lt;code&gt;01&lt;/code&gt;或者&lt;code&gt;10&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;%b&lt;/strong&gt;: 月份的简写,比如&lt;code&gt;Jan&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;%B&lt;/strong&gt;: 月份的全写,比如&lt;code&gt;January&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;日&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.3.3&lt;/span&gt; 日&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;%d&lt;/strong&gt;: 两位或者一位的日,比如&lt;code&gt;1&lt;/code&gt;或者&lt;code&gt;28&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;%d&lt;/strong&gt;: 两位或者一位的日,比如&lt;code&gt;1&lt;/code&gt;或者&lt;code&gt;28&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;时间&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.3.4&lt;/span&gt; 时间&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;%H&lt;/strong&gt;: 0-23小时的时间格式.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;%I&lt;/strong&gt;: 0-12小时的时间格式.必须和&lt;code&gt;%p&lt;/code&gt;联合使用.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;%p&lt;/strong&gt;: &lt;code&gt;a.m.&lt;/code&gt;和&lt;code&gt;p.m.&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;%M&lt;/strong&gt;: 分钟.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;%S&lt;/strong&gt;: 整数秒.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;%OS&lt;/strong&gt;: 真实秒.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;%Z&lt;/strong&gt;: 时区.必须是一个地名.如&lt;code&gt;America&lt;/code&gt;或者&lt;code&gt;Chicago&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## locale-specific version of the date
format(Sys.Date(), &amp;quot;%a %b %d&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Tue Nov 12&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x &amp;lt;- c(&amp;quot;1jan1960&amp;quot;, &amp;quot;2jan1960&amp;quot;, &amp;quot;31mar1960&amp;quot;, &amp;quot;30jul1960&amp;quot;)
z &amp;lt;- as.Date(x, &amp;quot;%d%b%Y&amp;quot;)
z&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;1960-01-01&amp;quot; &amp;quot;1960-01-02&amp;quot; &amp;quot;1960-03-31&amp;quot; &amp;quot;1960-07-30&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## read in date/time info in format &amp;#39;m/d/y&amp;#39;
dates &amp;lt;- c(&amp;quot;02/27/92&amp;quot;, &amp;quot;02/27/92&amp;quot;, &amp;quot;01/14/92&amp;quot;, &amp;quot;02/28/92&amp;quot;, &amp;quot;02/01/92&amp;quot;)
as.Date(dates, &amp;quot;%m/%d/%y&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;1992-02-27&amp;quot; &amp;quot;1992-02-27&amp;quot; &amp;quot;1992-01-14&amp;quot; &amp;quot;1992-02-28&amp;quot; &amp;quot;1992-02-01&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## date given as number of days since 1900-01-01 (a date in 1989)
as.Date(32768, origin = &amp;quot;1900-01-01&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;1989-09-19&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## Excel is said to use 1900-01-01 as day 1 (Windows default) or
## 1904-01-01 as day 0 (Mac default), but this is complicated by Excel
## incorrectly treating 1900 as a leap year.
## So for dates (post-1901) from Windows Excel
as.Date(35981, origin = &amp;quot;1899-12-30&amp;quot;) # 1998-07-05&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;1998-07-05&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## and Mac Excel
as.Date(34519, origin = &amp;quot;1904-01-01&amp;quot;) # 1998-07-05&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;1998-07-05&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## (these values come from http://support.microsoft.com/kb/214330)

## Experiment shows that Matlab&amp;#39;s origin is 719529 days before ours,
## (it takes the non-existent 0000-01-01 as day 1)
## so Matlab day 734373 can be imported as
as.Date(734373, origin = &amp;quot;1970-01-01&amp;quot;) - 719529 # 2010-08-23&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2010-08-23&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## (value from
## http://www.mathworks.de/de/help/matlab/matlab_prog/represent-date-and-times-in-MATLAB.html)

## Time zone effect
z &amp;lt;- ISOdate(2010, 04, 13, c(0,12)) # midnight and midday UTC
as.Date(z) # in UTC&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2010-04-13&amp;quot; &amp;quot;2010-04-13&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## these time zone names are common
as.Date(z, tz = &amp;quot;NZ&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2010-04-13&amp;quot; &amp;quot;2010-04-14&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;as.Date(z, tz = &amp;quot;HST&amp;quot;) # Hawaii&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2010-04-12&amp;quot; &amp;quot;2010-04-13&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Pregancy project participant information summary</title>
      <link>/post/pregancy-project-participant-information-summary/</link>
      <pubDate>Wed, 30 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/pregancy-project-participant-information-summary/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#maternal-dob&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; Maternal DOB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#age&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; Age&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#marital-status&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3&lt;/span&gt; Marital Status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ethinic-group&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4&lt;/span&gt; Ethinic Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#employed&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;5&lt;/span&gt; Employed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#housing&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;6&lt;/span&gt; Housing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#parity&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;7&lt;/span&gt; Parity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#pmh&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;8&lt;/span&gt; PMH&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#psh&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;9&lt;/span&gt; PSH&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ob-hx&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;10&lt;/span&gt; OB hx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#genetic-testing&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;11&lt;/span&gt; Genetic testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#section&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;12&lt;/span&gt; &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;maternal-dob&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; Maternal DOB&lt;/h1&gt;
&lt;p&gt;Maternal date of birth.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;age&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; Age&lt;/h1&gt;
&lt;p&gt;Mother age.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;marital-status&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;3&lt;/span&gt; Marital Status&lt;/h1&gt;
&lt;p&gt;Mothers’ marriage status&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;Lable&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Meaning&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Married, FOB involved&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Married, FOB involved&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unknown, FOB involved&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Unknown, FOB involved&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Single, FOB involved&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Single, FOB involved&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unknown&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Unknown&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;NA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unmarried, FOB involved&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Unmarried, FOB involved&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unmarried, FOB involved, but not living together&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Unmarried, FOB involved, but not living together&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Unmarried, FOB not involved&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Unmarried, FOB not involved&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;unknown, FOB involved but living separately&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;unknown, FOB involved but living separately&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Single&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Single&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;I don’t know what the meaning of “FOB involved”.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ethinic-group&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;4&lt;/span&gt; Ethinic Group&lt;/h1&gt;
&lt;p&gt;The ethnicity of mothers.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;Lable&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Meaning&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Afr Am&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Black&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;4 (Asian)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Asian&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;White&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Black&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Latina&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Pacific Islander&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Asian&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;employed&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;5&lt;/span&gt; Employed&lt;/h1&gt;
&lt;p&gt;The mothers’ work status.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;housing&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;6&lt;/span&gt; Housing&lt;/h1&gt;
&lt;p&gt;House status.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;parity&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;7&lt;/span&gt; Parity&lt;/h1&gt;
&lt;p&gt;Gravidity is defined as the number of times that a woman has been pregnant.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;[8] “G4P1021” “G3P1011” NA “G5P2” “G5P0” “G10P3154” “G3P2002”&lt;br /&gt;
[15] “G4P2012” “G4P0303” “G6P5005” “G14P4-1-8-4” “G4P3003” “G7P4115” “G9P4044”&lt;br /&gt;
[22] “G5P2022” “G5P2113” “G5P0040” “G8P5025”&lt;/p&gt;
&lt;p&gt;I don not understand what that means.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;pmh&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;8&lt;/span&gt; PMH&lt;/h1&gt;
&lt;p&gt;I don’t understand what this means, but it may be mothers’s diesease.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;psh&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;9&lt;/span&gt; PSH&lt;/h1&gt;
&lt;p&gt;I don’t understand what this means.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ob-hx&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;10&lt;/span&gt; OB hx&lt;/h1&gt;
&lt;p&gt;I donn’t understand what this means.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;genetic-testing&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;11&lt;/span&gt; Genetic testing&lt;/h1&gt;
&lt;p&gt;Genetic testing for mothers.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;section&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;12&lt;/span&gt; &lt;/h1&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Markdown cookbook</title>
      <link>/post/markdown-cookbook/</link>
      <pubDate>Tue, 29 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/markdown-cookbook/</guid>
      <description>


&lt;div id=&#34;markdown通用技巧&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Markdown通用技巧&lt;/h1&gt;
&lt;div id=&#34;如何在markdown中使用font&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;如何在markdown中使用font?&lt;/h2&gt;
&lt;p&gt;参考文档:&lt;a href=&#34;https://sspai.com/post/45217&#34; class=&#34;uri&#34;&gt;https://sspai.com/post/45217&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在markdown文档任意地方插入下面的代码:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;head&amp;gt; 
    &amp;lt;script defer src=&amp;quot;https://use.fontawesome.com/releases/v5.0.13/js/all.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; 
    &amp;lt;script defer src=&amp;quot;https://use.fontawesome.com/releases/v5.0.13/js/v4-shims.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; 
&amp;lt;/head&amp;gt; 
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://use.fontawesome.com/releases/v5.0.13/css/all.css&amp;quot;&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后使用下列语句插入font:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;i class=&amp;quot;fa fa-weixin&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示:&lt;i class=&#34;fa fa-weixin&#34;&gt;&lt;/i&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;rmarkdown&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Rmarkdown&lt;/h1&gt;
&lt;head&gt;
&lt;script defer src=&#34;https://use.fontawesome.com/releases/v5.0.13/js/all.js&#34;&gt;&lt;/script&gt;
&lt;script defer src=&#34;https://use.fontawesome.com/releases/v5.0.13/js/v4-shims.js&#34;&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;p&gt;&lt;link rel=&#34;stylesheet&#34; href=&#34;https://use.fontawesome.com/releases/v5.0.13/css/all.css&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>英语学习</title>
      <link>/post/english-study/</link>
      <pubDate>Tue, 29 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/english-study/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#email&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; Email&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#fare-thee-well-再会吧&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1&lt;/span&gt; Fare thee well (再会吧)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#november-3-2019-request&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.2&lt;/span&gt; November 3, 2019 Request&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#thanksgiving&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.3&lt;/span&gt; Thanksgiving&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#desktop-pc-fixing&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.4&lt;/span&gt; Desktop PC fixing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#postdoc-hike&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.5&lt;/span&gt; Postdoc hike&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#oral-communication&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; Oral communication&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#a的发音&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.1&lt;/span&gt; &lt;code&gt;A&lt;/code&gt;的发音&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;这篇博客用来记录在美国跟美国人打交道的时候学到的英语,包括口语,邮件,书面和文章等等.&lt;/p&gt;
&lt;div id=&#34;email&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; Email&lt;/h1&gt;
&lt;div id=&#34;fare-thee-well-再会吧&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1&lt;/span&gt; Fare thee well (再会吧)&lt;/h2&gt;
&lt;p&gt;Hi everyone,&lt;/p&gt;
&lt;p&gt;I’m excited and surprised to announce that I have accepted an offer to become the xxx at xxx. My last day at Stanford will be Friday, Nov 15.&lt;/p&gt;
&lt;p&gt;After nearly twelve years at Stanford – the last eight in xxx – I’m filled with gratitude and pride to have been even a small part of the remarkable work you amazing people do every day. It has been the privilege of a lifetime to work with so many dedicated and talented and tireless and splendid people. I’ve benefitted from your knowledge, your creativity, your patience, friendship, and faith, and I’ve received far more than I could ever repay. My endless thanks to you all.&lt;/p&gt;
&lt;p&gt;Yours,&lt;/p&gt;
&lt;p&gt;xxx&lt;/p&gt;
&lt;p&gt;这封邮件是系里面的一位工作人员要离开Stanford发给大家的再见信.感觉写的非常好.值得我好好学习.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;november-3-2019-request&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2&lt;/span&gt; November 3, 2019 Request&lt;/h2&gt;
&lt;p&gt;Hi Jasper,&lt;/p&gt;
&lt;p&gt;I put you on the schedule for this upcoming Sunday. I will be out of town, so please let me know as soon as possible if you are able to help out(这个用法第一次见&lt;code&gt;help out&lt;/code&gt;). Remember to come by (类似于stop by) 6:30 to welcome people, and stick around (逗留) for a few minutes afterward to help any newcomers get plugged in(这个第一次见这个意思). Let me know if you have any questions! Thanks for all you do.&lt;/p&gt;
&lt;p&gt;Thanks,&lt;/p&gt;
&lt;p&gt;xxx&lt;/p&gt;
&lt;p&gt;这封邮件是一个组织的周末聚会要求我过去当志愿者的.学到的知识,包括: help out, come by, stick around, get plugged in等.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;thanksgiving&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.3&lt;/span&gt; Thanksgiving&lt;/h2&gt;
&lt;p&gt;You are invited to xxx’s Thanksgiving Potluck &lt;code&gt;(家常便饭,美分自带一个菜的家庭聚会)&lt;/code&gt; at his home ~ xxx November 28, 2019.&lt;/p&gt;
&lt;p&gt;If you are able to attend please let us know what &lt;strong&gt;potluck item&lt;/strong&gt; you would like to bring &amp;amp; if you plan to come for football (to play or cheer from the sidelines&lt;code&gt;(球场的边线,场边)&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Please use the following link to sign up:&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;desktop-pc-fixing&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.4&lt;/span&gt; Desktop PC fixing&lt;/h2&gt;
&lt;p&gt;Hi xxx,&lt;/p&gt;
&lt;p&gt;We were able to find the drivers for the Desktop and we will start the re-imaging process.&lt;/p&gt;
&lt;p&gt;I will let you know when this is completed.&lt;/p&gt;
&lt;p&gt;Thank you.
xxx
Field Service Technician
Technology &amp;amp; Digital Solutions
Stanford Health Care&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;postdoc-hike&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.5&lt;/span&gt; Postdoc hike&lt;/h2&gt;
&lt;p&gt;Hello Postdocs,&lt;/p&gt;
&lt;p&gt;What: SURPAS Hike&lt;/p&gt;
&lt;p&gt;When: Sunday, November 17, 2019&lt;/p&gt;
&lt;p&gt;9 am at the Stanford Oval (for carpools), 9:45 am at the trailhead&lt;/p&gt;
&lt;p&gt;Where: Sweeny Ridge Loop&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;We will hike the Sweeny Ridge loop near Pacifica. This is a 5.7 mile intermediate loop hike with 954 feet of elevation (海拔) and 360-degree views. We should be able to complete the hike in around (更适合使用around而不是about) 3-4 hours. This hike is dog friendly!&lt;/p&gt;
&lt;p&gt;Please register here (more details will be provided before the hike)&lt;/p&gt;
&lt;p&gt;More info: Route description&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Please consider driving (&lt;code&gt;conder doing sth&lt;/code&gt;) a carpool for your fellow postdocs that (感觉更应该是&lt;code&gt;who&lt;/code&gt;?) don’t have cars, we will give you priority in signing up. You can drive a carpool from San Francisco area or from Stanford.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We will limit our group size to 20 participants, so please sign up soon and let us know if you can’t make it.&lt;/p&gt;
&lt;p&gt;–SURPAS Sports Committee&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;oral-communication&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; Oral communication&lt;/h1&gt;
&lt;div id=&#34;a的发音&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.1&lt;/span&gt; &lt;code&gt;A&lt;/code&gt;的发音&lt;/h2&gt;
&lt;p&gt;已知分不清&lt;code&gt;A&lt;/code&gt;什么时候是&lt;code&gt;æ&lt;/code&gt;的发音,什么时候&lt;code&gt;e&lt;/code&gt;的发音.后来问一个朋友,他说&lt;code&gt;一般&lt;/code&gt;长单词是&lt;code&gt;æ&lt;/code&gt;,短单词是&lt;code&gt;e&lt;/code&gt;.比如“Ada”,音标为&lt;code&gt;/e di e/&lt;/code&gt;,读音为&lt;a href=&#34;https://translate.google.com/?source=gtx#view=home&amp;amp;op=translate&amp;amp;sl=en&amp;amp;tl=zh-CN&amp;amp;text=ada&#34;&gt;/e di e/&lt;/a&gt;.而“Apple”,音标为&lt;code&gt;/ˈæpl/&lt;/code&gt;读音为&lt;a href=&#34;https://translate.google.com/?source=gtx#view=home&amp;amp;op=translate&amp;amp;sl=en&amp;amp;tl=zh-CN&amp;amp;text=apple&#34;&gt;/ˈæpl/&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>dplyr cookbook</title>
      <link>/post/2019-10-28-dplyr-cookbook/dplyr-cookbook/</link>
      <pubDate>Mon, 28 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-10-28-dplyr-cookbook/dplyr-cookbook/</guid>
      <description>


&lt;p&gt;test&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ggplot2主题扩充包-ggthemes</title>
      <link>/post/2019-10-28-ggplot2-ggthemes/ggplot2-ggthemes/</link>
      <pubDate>Mon, 28 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-10-28-ggplot2-ggthemes/ggplot2-ggthemes/</guid>
      <description>


&lt;p&gt;&lt;code&gt;ggthemes&lt;/code&gt;是&lt;code&gt;ggplot2&lt;/code&gt;的一个主题扩展包.含有&lt;code&gt;ggplot2&lt;/code&gt;的多个扩展主题.官网参考文档见下面链接:&lt;/p&gt;
&lt;div id=&#34;安装&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;安装&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;# 从CRAN安装
install.packages(&amp;#39;ggthemes&amp;#39;, dependencies = TRUE)
# 从github安装
library(&amp;quot;devtools&amp;quot;)
install_github(c(&amp;quot;hadley/ggplot2&amp;quot;, &amp;quot;jrnold/ggthemes&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;主题&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;主题&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;ggthemes&lt;/code&gt;提供的最直接的就是主题.可以直接在ggplot2对象后通过&lt;code&gt;+&lt;/code&gt;好添加主题.&lt;/p&gt;
&lt;div id=&#34;theme_base主题&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;theme_base()&lt;/code&gt;主题&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;ggplot2&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggplot2&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggthemes)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggthemes&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;(
p &amp;lt;- ggplot(mtcars) + geom_point(aes(x = wt, y = mpg,
     colour = factor(gear))) + facet_wrap(~am)
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p + theme_base()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-1-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;theme_base()&lt;/code&gt;有两个参数,&lt;code&gt;base_size&lt;/code&gt;和&lt;code&gt;base_family&lt;/code&gt;,分别用来设置图片中所有字体的颜色和字体.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;theme_calc主题&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;theme_calc()&lt;/code&gt;主题&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;ggplot2&amp;quot;)
library(ggthemes)
(
p &amp;lt;- ggplot(mtcars) + geom_point(aes(x = wt, y = mpg,
     colour = factor(gear))) + facet_wrap(~am)
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p + theme_calc()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-2-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;还有很多其他的主题,可以直接参考官方网站.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;颜色标度&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;颜色标度&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;ggthemes()&lt;/code&gt;同样也提供了颜色标度.&lt;/p&gt;
&lt;div id=&#34;色盲友好型颜色调色板和标度&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;色盲友好型颜色调色板和标度&lt;/h2&gt;
&lt;p&gt;可以参考如下网址:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/#a-colorblind-friendly-palette&#34; class=&#34;uri&#34;&gt;http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/#a-colorblind-friendly-palette&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一共包括四个函数:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;colorblind_pal()&lt;/code&gt;,&lt;code&gt;scale_colour_colorblind()&lt;/code&gt;,&lt;code&gt;scale_color_colorblind()&lt;/code&gt;和&lt;code&gt;scale_fill_colorblind()&lt;/code&gt;.用于分散性的数据.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;ggplot2&amp;quot;)
library(&amp;quot;scales&amp;quot;)
library(ggthemes)

show_col(colorblind_pal()(8))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##该函数用来给出最多8种颜色的名字&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;ggplot2&amp;quot;)
library(&amp;quot;scales&amp;quot;)
library(ggthemes)

show_col(colorblind_pal()(8))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##该函数用来给出最多8种颜色的名字
(
p &amp;lt;- ggplot(mtcars) + 
  geom_point(aes(x = wt, y = mpg,
     colour = factor(gear))) + 
  facet_wrap(~am)
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-4-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p + 
  theme_igray() + 
  scale_colour_colorblind()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-4-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;scale_fill_colorblind()&lt;/code&gt;函数和colour函数相同,只是用来填充.&lt;/p&gt;
&lt;p&gt;还有很多其他的颜色标度扩展,详情可以看其官方网站.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;形状标度&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;形状标度&lt;/h1&gt;
&lt;p&gt;给美学参数&lt;code&gt;shape&lt;/code&gt;来提供扩展.&lt;/p&gt;
&lt;div id=&#34;scale_shape_calc&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;scale_shape_calc()&lt;/code&gt;&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;(
p &amp;lt;- ggplot(mtcars) + 
  geom_point(aes(x = wt, y = mpg,
     shape = factor(gear))) + 
  facet_wrap(~am)
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p + scale_shape_calc()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-5-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;线性标度&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;线性标度&lt;/h1&gt;
&lt;p&gt;给美学参数&lt;code&gt;linetype&lt;/code&gt;来提供扩展.&lt;/p&gt;
&lt;div id=&#34;scale_linetype_stata&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;scale_linetype_stata()&lt;/code&gt;&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
require(ggthemes)
(
  p &amp;lt;- 
    ggplot(mtcars,aes(mpg, wt)) +
    geom_line(aes(linetype = factor(gear)))
) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p  +
    scale_linetype_stata()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-6-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;颜色形状和线性调色板&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;颜色,形状和线性&lt;code&gt;调色板&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;提供了非常多的色板,可以看官网.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggthemes)
library(scales)
show_col(few_pal(palette = &amp;quot;Light&amp;quot;)(8))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;show_col(few_pal(palette = &amp;quot;Medium&amp;quot;)(8))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-7-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;show_col(few_pal(palette = &amp;quot;Dark&amp;quot;)(8))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-7-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;几何对象和统计变换函数&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;几何对象和统计变换函数&lt;/h1&gt;
&lt;div id=&#34;range-framesgeom_rangeframe&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Range Frames&lt;code&gt;geom_rangeframe&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;该函数是用来给轴加上直线的.看以下例子.与其他几何对象参数一样,他也可以接受一些常见的参数.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;ggplot2&amp;quot;)
library(ggthemes)
(
p &amp;lt;- 
ggplot(mtcars, aes(wt, mpg)) +
 geom_point() 
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p +
   geom_rangeframe(colour = &amp;quot;red&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-8-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p +
   geom_rangeframe(colour = &amp;quot;red&amp;quot;, linetype = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-8-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p +
   geom_rangeframe(colour = &amp;quot;red&amp;quot;, linetype = 2, sides = &amp;quot;top&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-8-4.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p +
   geom_rangeframe(colour = &amp;quot;red&amp;quot;, linetype = 2, sides = c(&amp;quot;top&amp;quot;)) +
  geom_rangeframe(colour = &amp;quot;red&amp;quot;, linetype = 2, sides = c(&amp;quot;right&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-8-5.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;tuftes-box-plot&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Tufte’s Box Plot&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;ggplot2&amp;quot;)
library(ggthemes)
(
  p &amp;lt;- ggplot(mtcars, aes(factor(cyl), mpg))
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# with a point for the median and lines for whiskers
p + geom_tufteboxplot()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-9-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# with a line for the interquartile range and points for whiskers
p + geom_tufteboxplot(median.type = &amp;quot;line&amp;quot;, whisker.type = &amp;quot;point&amp;quot;, hoffset = 0)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-9-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# with a wide line for the interquartile range and lines for whiskers
p + geom_tufteboxplot(median.type = &amp;quot;line&amp;quot;, hoffset = 0, width = 3)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: position_dodge requires non-overlapping x intervals&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-9-4.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# with an offset line for the interquartile range and lines for whiskers
p + geom_tufteboxplot(median.type = &amp;quot;line&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-9-5.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# combined with theme_tufte
p + geom_tufteboxplot() +
  theme_tufte() +
  theme(axis.ticks.x = element_blank())&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-9-6.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>pubmed插件scholarscoop使用总结</title>
      <link>/post/pubmed-scholarscoop-summary/</link>
      <pubDate>Mon, 28 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/pubmed-scholarscoop-summary/</guid>
      <description>


&lt;div id=&#34;如何对某个影响因子范围内的文章进行筛选&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;如何对某个影响因子范围内的文章进行筛选?&lt;/h1&gt;
&lt;p&gt;可以参考下面的连接.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://blog.scholarscope.cn/tutorial/pubmed-filter-longterm/&#34; class=&#34;uri&#34;&gt;http://blog.scholarscope.cn/tutorial/pubmed-filter-longterm/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;如何查看期刊影响因子&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;如何查看期刊影响因子?&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://www.scholarscope.cn/tools.html&#34; class=&#34;uri&#34;&gt;https://www.scholarscope.cn/tools.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;点击该网址,然后点击&lt;code&gt;查询期刊影响因子&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R cookbook</title>
      <link>/post/2019-11-10-r-cookbook/</link>
      <pubDate>Mon, 28 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-11-10-r-cookbook/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#r一些常用小命令&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; R一些常用小命令&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#系统相关&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1&lt;/span&gt; 系统相关&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#重启r-session&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1.1&lt;/span&gt; 重启R session&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;r一些常用小命令&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; R一些常用小命令&lt;/h1&gt;
&lt;div id=&#34;系统相关&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1&lt;/span&gt; 系统相关&lt;/h2&gt;
&lt;div id=&#34;重启r-session&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.1&lt;/span&gt; 重启R session&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;.rs.restartR()&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>文献管理工具mendeley使用总结</title>
      <link>/post/mendeley-summary/</link>
      <pubDate>Mon, 28 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/mendeley-summary/</guid>
      <description>



</description>
    </item>
    
    <item>
      <title>质谱常见问题总结</title>
      <link>/post/ms-summary/</link>
      <pubDate>Mon, 28 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/ms-summary/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#ms&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; MS&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#forevacuum-presure-too-high.&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1&lt;/span&gt; Forevacuum presure too high.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;ms&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; MS&lt;/h1&gt;
&lt;div id=&#34;forevacuum-presure-too-high.&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1&lt;/span&gt; Forevacuum presure too high.&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;error1.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;几个原因:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;ion transfer tube堵了,洗一下试试.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;大概率是needle堵了,一般只能重新换个新的needle.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;温度太低,比如320度就不行,温度太低导致离子化程度不够.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;能够做的都做了,还是解决不了,然后冲了大概几个小时,自己变好了….&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R常见错误总结</title>
      <link>/post/r-error-summary/</link>
      <pubDate>Sat, 26 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/r-error-summary/</guid>
      <description>


&lt;p&gt;这篇博客用来记录R常见的错及其器解决办法.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>下载KEGG数据库</title>
      <link>/post/download-kegg-database/</link>
      <pubDate>Sat, 26 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/download-kegg-database/</guid>
      <description>


&lt;p&gt;记录使用一些R语言包下载KEGG数据库.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#get the ID of all hsa pathways
KEGGREST::listDatabases()
path_ID &amp;lt;- 
KEGGREST::keggList(organism = &amp;quot;hsa&amp;quot;, database = &amp;quot;pathway&amp;quot;) %&amp;gt;% 
  names() %&amp;gt;% 
  unique() %&amp;gt;% 
  stringr::str_replace_all(., &amp;quot;path:&amp;quot;, &amp;quot;&amp;quot;)

dir.create(path = &amp;quot;kegg_pathway&amp;quot;)
setwd(&amp;quot;kegg_pathway/&amp;quot;)


node_info &amp;lt;- vector(mode = &amp;quot;list&amp;quot;, length = length(path_ID))
edge_info &amp;lt;- vector(mode = &amp;quot;list&amp;quot;, length = length(path_ID))

for(i in i:length(path_ID)){
  cat(i, &amp;quot; &amp;quot;)
  temp_kgml &amp;lt;- 
    get_KGML(pathwayid = path_ID[i])
  if(is.na(temp_kgml)){
    next()
  }
  # slot(object = temp_kgml, name = &amp;quot;pathwayInfo&amp;quot;)
  #Download a static pathway image (png file) to working directory:
  temp_image_link &amp;lt;- slot(slot(temp_kgml, &amp;quot;pathwayInfo&amp;quot;), &amp;quot;image&amp;quot;)
  download.file(temp_image_link, basename(temp_image_link), mode = &amp;quot;wb&amp;quot;)
  temp_kegg_mappings &amp;lt;- expand_KEGG_mappings(KGML_file = temp_kgml)
  temp_kegg_edges &amp;lt;- expand_KEGG_edges(temp_kgml, temp_kegg_mappings)
  #Modify existing data sets; specify as nodes and edges
  temp_node_mapping_info &amp;lt;- node_mapping_info(temp_kegg_mappings)
  temp_edge_mapping_info &amp;lt;- edge_mapping_info(temp_kegg_edges)
  #Create an igraph object
  # kegg_graph &amp;lt;- get_graph_object(temp_node_mapping_info, temp_edge_mapping_info)
  
  edge_info[[i]] &amp;lt;- 
    temp_kegg_edges
  node_info[[i]] &amp;lt;- temp_node_mapping_info

  temp_kegg_nodes &amp;lt;- temp_node_mapping_info

}


save(node_info, file = &amp;quot;node_info&amp;quot;)
save(edge_info, file = &amp;quot;edge_info&amp;quot;)



path_name &amp;lt;- KEGGREST::keggList(organism = &amp;quot;hsa&amp;quot;, database = &amp;quot;pathway&amp;quot;) %&amp;gt;% 
  unname()

path_name_id &amp;lt;- 
  paste(path_ID, path_name, sep = &amp;quot;;&amp;quot;)


for(i in 1:length(path_name_id)){
  cat(i, &amp;quot; &amp;quot;)
  if(!is.null(node_info[[i]])){
    temp &amp;lt;- node_info[[i]]
    temp[,3] &amp;lt;- lapply(temp[,3], function(x) paste(x, collapse = &amp;quot;;&amp;quot;)) %&amp;gt;% unlist()
    temp[,4] &amp;lt;- lapply(temp[,4], function(x) paste(x, collapse = &amp;quot;;&amp;quot;)) %&amp;gt;% unlist()
    temp[,13] &amp;lt;- lapply(temp[,13], function(x) paste(x, collapse = &amp;quot;;&amp;quot;)) %&amp;gt;% unlist()
    temp[,14] &amp;lt;- lapply(temp[,14], function(x) paste(x, collapse = &amp;quot;;&amp;quot;)) %&amp;gt;% unlist()
    readr::write_csv(temp[,-c(6,7,8,9,10,11,12,13,17,18)], paste(path_ID[i], &amp;quot;_node_info.csv&amp;quot;, sep = &amp;quot;&amp;quot;))
  }
  
  if(!is.null(edge_info[[i]])){
    temp &amp;lt;- edge_info[[i]]
    # temp[,3] &amp;lt;- lapply(temp[,3], function(x) paste(x, collapse = &amp;quot;;&amp;quot;)) %&amp;gt;% unlist()
    # temp[,4] &amp;lt;- lapply(temp[,4], function(x) paste(x, collapse = &amp;quot;;&amp;quot;)) %&amp;gt;% unlist()
    # temp[,13] &amp;lt;- lapply(temp[,13], function(x) paste(x, collapse = &amp;quot;;&amp;quot;)) %&amp;gt;% unlist()
    # temp[,14] &amp;lt;- lapply(temp[,14], function(x) paste(x, collapse = &amp;quot;;&amp;quot;)) %&amp;gt;% unlist()
    readr::write_csv(temp, paste(path_ID[i], &amp;quot;_edge_info.csv&amp;quot;, sep = &amp;quot;&amp;quot;))
  }
  
}

for(i in 1:length(path_ID)){
  cat(i, &amp;quot; &amp;quot;)
  file &amp;lt;- grep(path_ID[i], dir(), value = TRUE)
  dir.create(path_ID[i])
  file.copy(from = file, to = path_ID[i]) 
}

unlink(grep(&amp;quot;csv&amp;quot;, dir(), value = TRUE))

library(igraph)

as_edgelist(GO)

vertex_attr(GO)&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>ggplot2 cookbook</title>
      <link>/post/ggplot2-cookbook/</link>
      <pubDate>Fri, 25 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/ggplot2-cookbook/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#绘图基础plot-basics&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; 绘图基础(plot basics)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#ggplot-创建一个新的ggplot图片&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1&lt;/span&gt; &lt;code&gt;ggplot()&lt;/code&gt; 创建一个新的ggplot图片&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#参数&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1.1&lt;/span&gt; 参数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#细节&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1.2&lt;/span&gt; 细节&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#例子&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1.3&lt;/span&gt; 例子&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#aes-创建美学映射&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.2&lt;/span&gt; &lt;code&gt;aes()&lt;/code&gt; 创建美学映射&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#参数-1&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.2.1&lt;/span&gt; 参数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#细节-1&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.2.2&lt;/span&gt; 细节&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#例子-1&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.2.3&lt;/span&gt; 例子&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ggsave保存ggplot2图片对象&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.3&lt;/span&gt; &lt;code&gt;ggsave()&lt;/code&gt;保存&lt;code&gt;ggplot2&lt;/code&gt;图片对象&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#参数-2&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.3.1&lt;/span&gt; 参数&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#图层layer几何对象geoms&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; 图层(Layer):几何对象(geoms)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#直线geom_ablinegeom_hline和geom_vline&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.1&lt;/span&gt; 直线&lt;code&gt;geom_abline&lt;/code&gt;,&lt;code&gt;geom_hline&lt;/code&gt;和&lt;code&gt;geom_vline&lt;/code&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#参数-3&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.1.1&lt;/span&gt; 参数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#细节-2&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.1.2&lt;/span&gt; 细节&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#美学映射aesthetics&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.1.3&lt;/span&gt; 美学映射(Aesthetics)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#例子-2&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.1.4&lt;/span&gt; 例子&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#柱形图bar-chartsgeom_bargeom_col和stat_count&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.2&lt;/span&gt; 柱形图(bar charts)&lt;code&gt;geom_bar()&lt;/code&gt;,&lt;code&gt;geom_col()&lt;/code&gt;和&lt;code&gt;stat_count&lt;/code&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#参数-4&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.2.1&lt;/span&gt; 参数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#细节-3&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.2.2&lt;/span&gt; 细节&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#美学参数aesthetics&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.2.3&lt;/span&gt; 美学参数(Aesthetics)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#计算变量-computed-variables&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.2.4&lt;/span&gt; 计算变量 (Computed variables)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#例子-3&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.2.5&lt;/span&gt; 例子&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#二维方格计数热图heatmap-of-2d-bin-countsgeom_bin2d和stat_bin_2d&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.3&lt;/span&gt; 二维方格计数热图(Heatmap of 2d bin counts)&lt;code&gt;geom_bin2d()&lt;/code&gt;和&lt;code&gt;stat_bin_2d()&lt;/code&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#参数-5&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.3.1&lt;/span&gt; 参数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#美学参数asethetics&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.3.2&lt;/span&gt; 美学参数(Asethetics)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#计算变量computed-variables&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.3.3&lt;/span&gt; 计算变量(Computed variables)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#例子-4&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.3.4&lt;/span&gt; 例子&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#空白图geom_blank&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.4&lt;/span&gt; 空白图&lt;code&gt;geom_blank()&lt;/code&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#参数-6&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.4.1&lt;/span&gt; 参数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#例子-5&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.4.2&lt;/span&gt; 例子&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#箱型图boxplot或者whiskers-plotgeom_boxplot和stat_boxplot&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.5&lt;/span&gt; 箱型图(boxplot或者whiskers plot)&lt;code&gt;geom_boxplot()&lt;/code&gt;和&lt;code&gt;stat_boxplot()&lt;/code&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#参数-7&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.5.1&lt;/span&gt; 参数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#统计总结&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.5.2&lt;/span&gt; 统计总结&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#美学参数&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.5.3&lt;/span&gt; 美学参数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#计算变量&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.5.4&lt;/span&gt; 计算变量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#例子-6&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.5.5&lt;/span&gt; 例子&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#d表面的2d等高线contoursgeom_contour和stat_contour&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.6&lt;/span&gt; 3D表面的2D等高线(contours)&lt;code&gt;geom_contour()&lt;/code&gt;和&lt;code&gt;stat_contour()&lt;/code&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#参数-8&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.6.1&lt;/span&gt; 参数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#美学参数-1&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.6.2&lt;/span&gt; 美学参数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#计算变量-1&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.6.3&lt;/span&gt; 计算变量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#例子-7&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.6.4&lt;/span&gt; 例子&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#常见问题总结&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3&lt;/span&gt; 常见问题总结&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#如何保证不同图中legend的scale一致&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.1&lt;/span&gt; 如何保证不同图中legend的scale一致&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;绘图基础plot-basics&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; 绘图基础(plot basics)&lt;/h1&gt;
&lt;p&gt;所有的ggplot2图形都开始于&lt;code&gt;ggplot()&lt;/code&gt;函数的调用.给其提供数据,以及美学映射(aesthethic mappings)(使用&lt;code&gt;aes()&lt;/code&gt;函数).然后添加图层(layers), 度量系统(scales), 坐标系(coords)以及分面(facets).添加的每个对象,都是在前一行末尾使用符号&lt;code&gt;+&lt;/code&gt;.如果需要将一个ggplot2图像保存在本地,使用&lt;code&gt;ggsave()&lt;/code&gt;函数.&lt;/p&gt;
&lt;div id=&#34;ggplot-创建一个新的ggplot图片&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1&lt;/span&gt; &lt;code&gt;ggplot()&lt;/code&gt; 创建一个新的ggplot图片&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;ggplot()&lt;/code&gt;函数是用来启动初始化一个ggplot2对象的.It can be used to declare the input data frame for a graphic and to specify the set of plot aesthetics intended to be common throughout all subsequent layers unless specifically overridden.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggplot(data = NULL, mapping = aes(), ...,
  environment = parent.frame())
Arguments&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;参数&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.1&lt;/span&gt; 参数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;data&lt;/strong&gt; 用于绘图的数据.如果数据格式不是&lt;code&gt;data.frame&lt;/code&gt;,会默认使用&lt;code&gt;fortity()&lt;/code&gt;函数转换为&lt;code&gt;data.frame&lt;/code&gt;格式.如果在该函数中不提供data,则在后面添加的每一个图层,都需要提供data.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;mapping&lt;/strong&gt; 用于美学图层映射的参数.如果在这里不提供,则后面添加的每个图层,都需要提供.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;…&lt;/strong&gt; 其他可用于该函数的参数.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;environment&lt;/strong&gt; 该参数已经淘汰了.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;细节&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.2&lt;/span&gt; 细节&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ggplot()&lt;/code&gt;用来初始化ggplot2图形对象.经常后面需要通过&lt;code&gt;+&lt;/code&gt;来添加其他的对象.一般有三种方法调用该函数:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ggplot(df, aes(x, y, other aesthetics))&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ggplot(df)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ggplot2&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果后面的所有图层使用的都是同一套数据以及美学映射,则推荐使用第一种用法.如果后面图层使用数据一致,但是美学映射不同,则推荐使用第二种方法.如果每一个图层使用的数据和美学映射都不相同,则使用第三种方法,一般用来构建比较复杂的图形.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;例子&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.3&lt;/span&gt; 例子&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggplot2&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 产生随机数据,然后计算平均值和标准差
df &amp;lt;- data.frame(
  gp = factor(rep(letters[1:3], each = 10)),
  y = rnorm(30)
)
ds &amp;lt;- do.call(rbind, lapply(split(df, df$gp), function(d) {
  data.frame(mean = mean(d$y), sd = sd(d$y), gp = d$gp)
}))

ggplot(df, aes(gp, y)) +
  geom_point() +
  geom_point(data = ds, aes(y = mean), colour = &amp;#39;red&amp;#39;, size = 3)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#注意,第一个geom_point图层使用的是ggplot中的数据和美学映射.而第二个geom_point
#图层中使用的则是不同的数据和美学映射.

# 而下面这幅图,第一个geonm_point图层因为没有提供data,因此使用的是ggplot()中的data,
#而美学映射则是自己定义的.

ggplot(df) +
  geom_point(aes(gp, y)) +
  geom_point(data = ds, aes(gp, mean), colour = &amp;#39;red&amp;#39;, size = 3)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-1-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 另外一个选择则是完全不在ggplot中定义数据和美学映射,而是在每一个图层中分别定义.
# 当你要画复杂图形的时候,这种方法就会显示的非常清晰和明了.
ggplot() +
  geom_point(data = df, aes(gp, y)) +
  geom_point(data = ds, aes(gp, mean), colour = &amp;#39;red&amp;#39;, size = 3) +
  geom_errorbar(
    data = ds,
    aes(gp, mean, ymin = mean - sd, ymax = mean + sd),
    colour = &amp;#39;red&amp;#39;,
    width = 0.4
  )&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Ignoring unknown aesthetics: y&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-1-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;aes-创建美学映射&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2&lt;/span&gt; &lt;code&gt;aes()&lt;/code&gt; 创建美学映射&lt;/h2&gt;
&lt;p&gt;美学映射指的是数据中的变量如何映射到图形的视觉特性上(也就是美学aesthetics).美学映射可以在&lt;code&gt;ggplot()&lt;/code&gt;函数以及每一个单独的图层中进行设置.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;aes(x, y, ...)&lt;/code&gt;&lt;/p&gt;
&lt;div id=&#34;参数-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2.1&lt;/span&gt; 参数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;x, y, …&lt;/strong&gt; 将变量映射到图形的视觉特性的名字.x和y分别指x轴和y轴.通常他们可以省略不写.但是其他的,如颜色(colour/color),填充颜色(fill),大小(size)等则必须写明参数名字.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;细节-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2.2&lt;/span&gt; 细节&lt;/h3&gt;
&lt;p&gt;注意的是,在ggplot2种,对于视觉特征的名字进行了规范化,因此和R base绘图函数种的并不相同,比如从&lt;code&gt;pch&lt;/code&gt;改为&lt;code&gt;shape&lt;/code&gt;,从&lt;code&gt;cex&lt;/code&gt;改为&lt;code&gt;size&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;例子-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2.3&lt;/span&gt; 例子&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;aes(x = mpg, y = wt)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Aesthetic mapping: 
## * `x` -&amp;gt; `mpg`
## * `y` -&amp;gt; `wt`&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#&amp;gt; Aesthetic mapping: 
#&amp;gt; * `x` -&amp;gt; `mpg`
#&amp;gt; * `y` -&amp;gt; `wt`
aes(mpg, wt)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Aesthetic mapping: 
## * `x` -&amp;gt; `mpg`
## * `y` -&amp;gt; `wt`&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#&amp;gt; Aesthetic mapping: 
#&amp;gt; * `x` -&amp;gt; `mpg`
#&amp;gt; * `y` -&amp;gt; `wt`

# You can also map aesthetics to functions of variables
aes(x = mpg ^ 2, y = wt / cyl)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Aesthetic mapping: 
## * `x` -&amp;gt; `mpg^2`
## * `y` -&amp;gt; `wt/cyl`&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#&amp;gt; Aesthetic mapping: 
#&amp;gt; * `x` -&amp;gt; `mpg^2`
#&amp;gt; * `y` -&amp;gt; `wt/cyl`

# Or to constants
aes(x = 1, colour = &amp;quot;smooth&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Aesthetic mapping: 
## * `x`      -&amp;gt; 1
## * `colour` -&amp;gt; &amp;quot;smooth&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#&amp;gt; Aesthetic mapping: 
#&amp;gt; * `x`      -&amp;gt; 1
#&amp;gt; * `colour` -&amp;gt; &amp;quot;smooth&amp;quot;

# Aesthetic names are automatically standardised
aes(col = x)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Aesthetic mapping: 
## * `colour` -&amp;gt; `x`&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#&amp;gt; Aesthetic mapping: 
#&amp;gt; * `colour` -&amp;gt; `x`
aes(fg = x)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Aesthetic mapping: 
## * `colour` -&amp;gt; `x`&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#&amp;gt; Aesthetic mapping: 
#&amp;gt; * `colour` -&amp;gt; `x`
aes(color = x)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Aesthetic mapping: 
## * `colour` -&amp;gt; `x`&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#&amp;gt; Aesthetic mapping: 
#&amp;gt; * `colour` -&amp;gt; `x`
aes(colour = x)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Aesthetic mapping: 
## * `colour` -&amp;gt; `x`&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#&amp;gt; Aesthetic mapping: 
#&amp;gt; * `colour` -&amp;gt; `x`

# aes() is passed to either ggplot() or specific layer. Aesthetics supplied
# to ggplot() are used as defaults for every layer.
ggplot(mpg, aes(displ, hwy)) + geom_point()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mpg) + geom_point(aes(displ, hwy))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-2-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Tidy evaluation ----------------------------------------------------
# aes() automatically quotes all its arguments, so you need to use tidy
# evaluation to create wrappers around ggplot2 pipelines. The
# simplest case occurs when your wrapper takes dots:
scatter_by &amp;lt;- function(data, ...) {
  ggplot(data) + geom_point(aes(...))
}
scatter_by(mtcars, disp, drat)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-2-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# If your wrapper has a more specific interface with named arguments,
# you need &amp;quot;enquote and unquote&amp;quot;:
scatter_by &amp;lt;- function(data, x, y) {
  x &amp;lt;- enquo(x)
  y &amp;lt;- enquo(y)

  ggplot(data) + geom_point(aes(!!x, !!y))
}
scatter_by(mtcars, disp, drat)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-2-4.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Note that users of your wrapper can use their own functions in the
# quoted expressions and all will resolve as it should!
cut3 &amp;lt;- function(x) cut_number(x, 3)
scatter_by(mtcars, cut3(disp), drat)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-2-5.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;ggsave保存ggplot2图片对象&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.3&lt;/span&gt; &lt;code&gt;ggsave()&lt;/code&gt;保存&lt;code&gt;ggplot2&lt;/code&gt;图片对象&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;ggsave()&lt;/code&gt;默认会保存当前最后一幅&lt;code&gt;ggplot2&lt;/code&gt;图片.如果不设置尺寸,则使用当前设备尺寸.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggsave(filename, plot = last_plot(), device = NULL, path = NULL,
  scale = 1, width = NA, height = NA, units = c(&amp;quot;in&amp;quot;, &amp;quot;cm&amp;quot;, &amp;quot;mm&amp;quot;),
  dpi = 300, limitsize = TRUE, ...)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;参数-2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.3.1&lt;/span&gt; 参数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;filename&lt;/strong&gt; 要保存的图片的名字,注意不包括后缀名.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;plot&lt;/strong&gt; 要保存的&lt;code&gt;ggplot2&lt;/code&gt;图片.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;device&lt;/strong&gt; 要保存的图片的类型.包括以下:“eps”, “ps”, “tex” (pictex), “pdf”, “jpeg”, “tiff”, “png”, “bmp”, “svg” or “wmf” (windows only).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;path&lt;/strong&gt; 图片所要保存的路径.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;scale&lt;/strong&gt; Multiplicative scaling factor.暂时不知道什么意思?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;width, height, units&lt;/strong&gt; 要保存图片的宽和高,以及其单位.单位包括:“in”(英寸), “cm”, or “mm”.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;dpi&lt;/strong&gt; 图片分辨率.一般是数字.也可以使用文字符:“retina” (320), “print” (300), or “screen” (72).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;limitsize&lt;/strong&gt; 如果设置为TRUE,则&lt;code&gt;ggsave&lt;/code&gt;不会保存尺寸大于50×50 inch的图片.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;…&lt;/strong&gt; 其他可以用于图形设备(graphics device function)的参数.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;图层layer几何对象geoms&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; 图层(Layer):几何对象(geoms)&lt;/h1&gt;
&lt;p&gt;一个图层包括了数据(data),美学映射(aesthetic mapping),几何对象(geometric object),统计转换(statistical transformation),以及位置调整(position adjustment).一般来说,应该使用&lt;code&gt;geom_xxx()&lt;/code&gt;函数来创建图层.必要情况下,需要手动设置去覆盖默认的位置和统计转换.&lt;/p&gt;
&lt;div id=&#34;直线geom_ablinegeom_hline和geom_vline&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.1&lt;/span&gt; 直线&lt;code&gt;geom_abline&lt;/code&gt;,&lt;code&gt;geom_hline&lt;/code&gt;和&lt;code&gt;geom_vline&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;这三个函数(几何对象)分别用来画对角线,水平和垂直直线.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;geom_abline(mapping = NULL, data = NULL, ..., slope, intercept,
  na.rm = FALSE, show.legend = NA)

geom_hline(mapping = NULL, data = NULL, ..., yintercept,
  na.rm = FALSE, show.legend = NA)

geom_vline(mapping = NULL, data = NULL, ..., xintercept,
  na.rm = FALSE, show.legend = NA)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;参数-3&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.1.1&lt;/span&gt; 参数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;mapping&lt;/strong&gt; 美学映射,使用&lt;code&gt;aes()&lt;/code&gt;函数设置.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;data&lt;/strong&gt; 用于创建该图层的数据.有三种选择: 1)如果设置为&lt;code&gt;NULL&lt;/code&gt;,也是默认设置.则该数据继承自&lt;code&gt;ggplot()&lt;/code&gt;函数中的数据.2)一个&lt;code&gt;data.frame&lt;/code&gt;,或者其他的对象,如&lt;code&gt;tibble&lt;/code&gt;,这将会覆盖&lt;code&gt;ggplot()&lt;/code&gt;中的数据.3)也可以是一个&lt;code&gt;function()&lt;/code&gt;,但是该function最后返回的对象应该是&lt;code&gt;data.frame&lt;/code&gt;.&lt;code&gt;function&lt;/code&gt;可以使用&lt;code&gt;formula&lt;/code&gt;格式进行创建,如:&lt;code&gt;head(.x, 10)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;…&lt;/strong&gt; 其他的可以传入&lt;code&gt;layer()&lt;/code&gt;的参数.一般是美学对象,如&lt;code&gt;colour = &#34;red&#34;&lt;/code&gt;或者&lt;code&gt;size = 3&lt;/code&gt;.也可以是一些一些能够传入到和&lt;code&gt;geom_&lt;/code&gt;配对的geom/stat的参数.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;na.rm&lt;/strong&gt; 默认为&lt;code&gt;FALSE&lt;/code&gt;, missing value会被去除掉,但是会给出&lt;code&gt;warning&lt;/code&gt;,如果设置为&lt;code&gt;TRUE&lt;/code&gt;,missing value也会被去除掉,但是不会给&lt;code&gt;warning&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;show.legend&lt;/strong&gt; 该图层是否要显示在legend上.默认为&lt;code&gt;NA&lt;/code&gt;,则该图层中所有的映射到图形属性的变量都会显示在legend中.&lt;code&gt;FALSE&lt;/code&gt;则永远不显示,&lt;code&gt;TRUE&lt;/code&gt;则永远显示.如果该图形有多个变量映射到不同的图形属性,则可以将其设置为一个vector,分别控制不同的变量是否显示.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;xintercept/yintercept/slope/intercept&lt;/strong&gt; 控制直线的位置参数.如果这些设置了,则&lt;code&gt;data&lt;/code&gt;,&lt;code&gt;mapping&lt;/code&gt;和&lt;code&gt;show.legend&lt;/code&gt;则会被覆盖掉.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;细节-2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.1.2&lt;/span&gt; 细节&lt;/h3&gt;
&lt;p&gt;这些几何对象和其他的几何对象稍微有些不同.可以通过两种方法提供参数:1)给layer函数提供参数,或者2)通过美学对象提供参数.如果你使用参数,例如&lt;code&gt;geom_abline(intercept = 0, slope = 1)&lt;/code&gt;,然后几何对象(&lt;code&gt;geom_&lt;/code&gt;)会创建一个新的data frame,这个data rame只包括了你所提供的数据.这意味着在所有的分面中,直线都是相同的.如果你想在不同的分面中,直线不相同,你需要自己创建一个data frame,然后再美学映射(aesthetics)中设置.&lt;/p&gt;
&lt;p&gt;与其他的几何对象不同,这些几何对象不会从&lt;code&gt;ggplot&lt;/code&gt;中继承data.他们也不会影响到x和y的scale.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;美学映射aesthetics&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.1.3&lt;/span&gt; 美学映射(Aesthetics)&lt;/h3&gt;
&lt;p&gt;这三个几何对象(geom)其实都是使用&lt;code&gt;geom_line()&lt;/code&gt;函数来画直线的,因此他们都支持&lt;code&gt;geom_line()&lt;/code&gt;的美学参数,如&lt;code&gt;alpha&lt;/code&gt;,&lt;code&gt;colour&lt;/code&gt;,&lt;code&gt;linetype&lt;/code&gt;和&lt;code&gt;size&lt;/code&gt;.对于每个几何对象都有,都有单独的参数用来控制直线的位置:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;geom_vline&lt;/code&gt;:&lt;code&gt;xintercept&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;geom_hline&lt;/code&gt;:&lt;code&gt;yintercept&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;geom_vline&lt;/code&gt;:&lt;code&gt;slope&lt;/code&gt;(斜率)和&lt;code&gt;intercept&lt;/code&gt;(截距).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;例子-2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.1.4&lt;/span&gt; 例子&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
p &amp;lt;- 
  ggplot(mtcars, aes(wt, mpg)) + 
  geom_point()

# 添加垂直直线
p + 
  geom_vline(xintercept = 5)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p + 
  geom_vline(xintercept = 1:5)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-3-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 添加水平直线
p + 
  geom_hline(yintercept = 20)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-3-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 添加对角线,默认斜率为1
p + 
  geom_abline(intercept = 20)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-3-4.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 计算直线回归的斜率和截距
coef(lm(mpg ~ wt, data = mtcars))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## (Intercept)          wt 
##   37.285126   -5.344472&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p + 
  geom_abline(intercept = 37, slope = -5)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-3-5.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 但是使用geom_smooth更加简单h:
p + 
  geom_smooth(method = &amp;quot;lm&amp;quot;, se = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-3-6.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 如果想要再不同分面显示不同的直线,则使用美学对象,也就是需要自己创建
p &amp;lt;- ggplot(mtcars, aes(mpg, wt)) +
  geom_point() +
  facet_wrap(~ cyl)

mean_wt &amp;lt;- 
  data.frame(cyl = c(4, 6, 8), wt = c(2.28, 3.11, 4.00))
mean_wt&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   cyl   wt
## 1   4 2.28
## 2   6 3.11
## 3   8 4.00&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p + 
  geom_hline(mapping = aes(x = cyl, yintercept = wt), 
             data = mean_wt)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Ignoring unknown aesthetics: x&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-3-7.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##如果不使用美学对象,则在每一个分面上都是一样的
p +
  geom_hline(yintercept = mean_wt$wt)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-3-8.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 控制其他美学对象
ggplot(mtcars, aes(mpg, wt, colour = wt)) +
  geom_point() +
  geom_hline(aes(yintercept = wt, colour = wt), mean_wt) +
  facet_wrap(~ cyl)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-3-9.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;柱形图bar-chartsgeom_bargeom_col和stat_count&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.2&lt;/span&gt; 柱形图(bar charts)&lt;code&gt;geom_bar()&lt;/code&gt;,&lt;code&gt;geom_col()&lt;/code&gt;和&lt;code&gt;stat_count&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;一共有两种类型的函数用来绘制柱形图:&lt;code&gt;geom_bar()&lt;/code&gt;和&lt;code&gt;geom_col()&lt;/code&gt;函数.&lt;code&gt;geom_bar()&lt;/code&gt;配对的统计转换函数为&lt;code&gt;stat_count()&lt;/code&gt;函数,所以他会自动将每个group的case个数计算出来,然后转为新的data frame,也就是group和数目,然后映射到x和y轴上.而&lt;code&gt;geom_bar()&lt;/code&gt;则和R base的bar plot函数相似(默认配对统计转换函数为&lt;code&gt;stat_identify()&lt;/code&gt;函数),需要指定x和y轴变量,然后直接将指定的y轴变量映射为bar的高度.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;geom_bar(mapping = NULL, data = NULL, stat = &amp;quot;count&amp;quot;,
  position = &amp;quot;stack&amp;quot;, ..., width = NULL, binwidth = NULL,
  na.rm = FALSE, show.legend = NA, inherit.aes = TRUE)

geom_col(mapping = NULL, data = NULL, position = &amp;quot;stack&amp;quot;, ...,
  width = NULL, na.rm = FALSE, show.legend = NA,
  inherit.aes = TRUE)

stat_count(mapping = NULL, data = NULL, geom = &amp;quot;bar&amp;quot;,
  position = &amp;quot;stack&amp;quot;, ..., width = NULL, na.rm = FALSE,
  show.legend = NA, inherit.aes = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;参数-4&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.2.1&lt;/span&gt; 参数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;mapping&lt;/strong&gt; 美学映射,使用&lt;code&gt;aes()&lt;/code&gt;函数设置.如果设置参数&lt;code&gt;inherit.aes = TRUE&lt;/code&gt;(默认),则该图层会从&lt;code&gt;ggplot()&lt;/code&gt;函数继承美学映射的参数.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;data&lt;/strong&gt; 用于创建该图层的数据.有三种选择: 1)如果设置为&lt;code&gt;NULL&lt;/code&gt;,也是默认设置.则该数据继承自&lt;code&gt;ggplot()&lt;/code&gt;函数中的数据.2)一个&lt;code&gt;data.frame&lt;/code&gt;,或者其他的对象,如&lt;code&gt;tibble&lt;/code&gt;,这将会覆盖&lt;code&gt;ggplot()&lt;/code&gt;中的数据.3)也可以是一个&lt;code&gt;function()&lt;/code&gt;,但是该function最后返回的对象应该是&lt;code&gt;data.frame&lt;/code&gt;.&lt;code&gt;function&lt;/code&gt;可以使用&lt;code&gt;formula&lt;/code&gt;格式进行创建,如:&lt;code&gt;head(.x, 10)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;position&lt;/strong&gt; 位置调整(position adjustment).可以是字符,也可以是使用位置调整参数返回的对象.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;…&lt;/strong&gt; 其他的可以传入&lt;code&gt;layer()&lt;/code&gt;的参数.一般是美学对象,如&lt;code&gt;colour = &#34;red&#34;&lt;/code&gt;或者&lt;code&gt;size = 3&lt;/code&gt;.也可以是一些一些能够传入到和&lt;code&gt;geom_&lt;/code&gt;配对的geom/stat的参数.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;width&lt;/strong&gt; 柱形图的宽度. 默认设置为数据“分辨率”的90%(0.9).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;na.rm&lt;/strong&gt; 默认为&lt;code&gt;FALSE&lt;/code&gt;, missing value会被去除掉,但是会给出&lt;code&gt;warning&lt;/code&gt;,如果设置为&lt;code&gt;TRUE&lt;/code&gt;,missing value也会被去除掉,但是不会给&lt;code&gt;warning&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;show.legend&lt;/strong&gt; 该图层是否要显示在legend上.默认为&lt;code&gt;NA&lt;/code&gt;,则该图层中所有的映射到图形属性的变量都会显示在legend中.&lt;code&gt;FALSE&lt;/code&gt;则永远不显示,&lt;code&gt;TRUE&lt;/code&gt;则永远显示.如果该图形有多个变量映射到不同的图形属性,则可以将其设置为一个vector,分别控制不同的变量是否显示.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;inherit.aes&lt;/strong&gt; 如果设置为&lt;code&gt;FALSE&lt;/code&gt;,覆盖掉而不是结合默认美学参数. This is most useful for helper functions that define both data and aesthetics and shouldn’t inherit behaviour from the default plot specification, e.g. borders().不太明白这个意思?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;geom, stat&lt;/strong&gt; 覆盖掉默认的&lt;code&gt;geom_()&lt;/code&gt;和&lt;code&gt;stat_()&lt;/code&gt;函数.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;细节-3&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.2.2&lt;/span&gt; 细节&lt;/h3&gt;
&lt;p&gt;柱形图使用高度来表示数值.所以一般柱形图是用来进行对比展示的.这也是为什么如果你将数据log之后,使用柱形图就不太合适.&lt;/p&gt;
&lt;p&gt;默认,对于同个x轴位置有着多个柱子,则他们会堆积在一起.也就输堆积柱形图,这是由默认的位置调整函数&lt;code&gt;position_stack()&lt;/code&gt;实现的.如果你想要让他们并排排列,则需要使用&lt;code&gt;position_dodge()&lt;/code&gt;或者&lt;code&gt;position_dodge2()&lt;/code&gt;函数.当然,如果你想要堆叠柱形图,而显示的是比例而不是真实数值,则需要使用&lt;code&gt;position_fill()&lt;/code&gt;函数.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;美学参数aesthetics&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.2.3&lt;/span&gt; 美学参数(Aesthetics)&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;geom_bar()&lt;/code&gt;可以接受以下美学参数(粗体为必须参数).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;x&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;y&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;alpha&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;colour&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;fill&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;group&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;linetype&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;size&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;geom_col()&lt;/code&gt;可以接受以下美学参数(粗体为必须参数).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;x&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;y&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;alpha&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;colour&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;fill&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;group&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;linetype&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;size&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;stat_count()&lt;/code&gt;可以接受以下美学参数(粗体为必须参数).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;x&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;y&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;group&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;weight&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;计算变量-computed-variables&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.2.4&lt;/span&gt; 计算变量 (Computed variables)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;count&lt;/strong&gt; 每一个grou中的数目&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;prop&lt;/strong&gt; 每组的比例&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;例子-3&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.2.5&lt;/span&gt; 例子&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
## 首先创建一个ggplot2对象
g &amp;lt;- ggplot(mpg, aes(class))
# 然后使用geom_bar来展示每个class的case的数目
g + geom_bar()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 可以通过设置weight参数,将每个柱子的高度改为该变量的和
g + geom_bar(aes(weight = displ))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-4-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 当每一个柱子又可以分为不同的group时,默认是堆积在一起的.
g + geom_bar(aes(fill = drv))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-4-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 如果想要翻转类别的顺序,可以在position参数中设置
g +
 geom_bar(aes(fill = drv), 
          position = position_stack(reverse = TRUE)) +
 coord_flip() +
 theme(legend.position = &amp;quot;top&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-4-4.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 如果只是想要柱子高度显示某个变量的值,使用geom_col函数
df &amp;lt;- data.frame(trt = c(&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot;), outcome = c(2.3, 1.9, 3.2))
ggplot(df, aes(trt, outcome)) +
  geom_col()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-4-5.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 当然,geom_bar函数也可以用来显示连续性的变量
df &amp;lt;- data.frame(x = rep(c(2.9, 3.1, 4.5), c(5, 10, 4)))
ggplot(df, aes(x)) + geom_bar()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-4-6.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# cf. a histogram of the same data
ggplot(df, aes(x)) + geom_histogram(binwidth = 0.5)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-4-7.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;二维方格计数热图heatmap-of-2d-bin-countsgeom_bin2d和stat_bin_2d&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.3&lt;/span&gt; 二维方格计数热图(Heatmap of 2d bin counts)&lt;code&gt;geom_bin2d()&lt;/code&gt;和&lt;code&gt;stat_bin_2d()&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;将平面划分为放个,然后计算每个方格中case的数目,然后将小方格内的case的数目映射到小方格的填充颜色上(默认).这种作图方法与&lt;code&gt;geom_point()&lt;/code&gt;相比,好处是可以有效的避免重叠.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;geom_bin2d(mapping = NULL, data = NULL, stat = &amp;quot;bin2d&amp;quot;,
  position = &amp;quot;identity&amp;quot;, ..., na.rm = FALSE, show.legend = NA,
  inherit.aes = TRUE)

stat_bin_2d(mapping = NULL, data = NULL, geom = &amp;quot;tile&amp;quot;,
  position = &amp;quot;identity&amp;quot;, ..., bins = 30, binwidth = NULL,
  drop = TRUE, na.rm = FALSE, show.legend = NA, inherit.aes = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;参数-5&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.3.1&lt;/span&gt; 参数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;mapping&lt;/strong&gt; 美学映射参数,使用&lt;code&gt;aes()&lt;/code&gt;建立.如果在该图层进行设置,并且&lt;code&gt;inherit.aes = TRUE&lt;/code&gt;(默认), it is combined with the default mapping at the top level of the plot. You must supply mapping if there is no plot mapping?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;data&lt;/strong&gt; 用于创建该图层的数据.有三种选择: 1)如果设置为&lt;code&gt;NULL&lt;/code&gt;,也是默认设置.则该数据继承自&lt;code&gt;ggplot()&lt;/code&gt;函数中的数据.2)一个&lt;code&gt;data.frame&lt;/code&gt;,或者其他的对象,如&lt;code&gt;tibble&lt;/code&gt;,这将会覆盖&lt;code&gt;ggplot()&lt;/code&gt;中的数据.3)也可以是一个&lt;code&gt;function()&lt;/code&gt;,但是该function最后返回的对象应该是&lt;code&gt;data.frame&lt;/code&gt;.&lt;code&gt;function&lt;/code&gt;可以使用&lt;code&gt;formula&lt;/code&gt;格式进行创建,如:&lt;code&gt;head(.x, 10)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;position&lt;/strong&gt; 位置调整(position adjustment).可以是字符,也可以是使用位置调整参数返回的对象.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;…&lt;/strong&gt; 其他的可以传入&lt;code&gt;layer()&lt;/code&gt;的参数.一般是美学对象,如&lt;code&gt;colour = &#34;red&#34;&lt;/code&gt;或者&lt;code&gt;size = 3&lt;/code&gt;.也可以是一些一些能够传入到和&lt;code&gt;geom_&lt;/code&gt;配对的geom/stat的参数.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;na.rm&lt;/strong&gt; 默认为&lt;code&gt;FALSE&lt;/code&gt;, missing value会被去除掉,但是会给出&lt;code&gt;warning&lt;/code&gt;,如果设置为&lt;code&gt;TRUE&lt;/code&gt;,missing value也会被去除掉,但是不会给&lt;code&gt;warning&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;show.legend&lt;/strong&gt; 该图层是否要显示在legend上.默认为&lt;code&gt;NA&lt;/code&gt;,则该图层中所有的映射到图形属性的变量都会显示在legend中.&lt;code&gt;FALSE&lt;/code&gt;则永远不显示,&lt;code&gt;TRUE&lt;/code&gt;则永远显示.如果该图形有多个变量映射到不同的图形属性,则可以将其设置为一个vector,分别控制不同的变量是否显示.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;inherit.aes&lt;/strong&gt; 如果设置为&lt;code&gt;FALSE&lt;/code&gt;,覆盖掉而不是结合默认美学参数. This is most useful for helper functions that define both data and aesthetics and shouldn’t inherit behaviour from the default plot specification, e.g. borders().不太明白这个意思?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;geom, stat&lt;/strong&gt; 覆盖掉默认的&lt;code&gt;geom_()&lt;/code&gt;和&lt;code&gt;stat_()&lt;/code&gt;函数.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;bins&lt;/strong&gt; 数值型的向量,用来分别设置垂直和水平方向上的bin的数目,默认都是30.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;binwidth&lt;/strong&gt; 数值型向量,用于设置在垂直和水平方向上的bin的宽度.如果该参数设置,则会覆盖掉bins参数.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;drop&lt;/strong&gt; 如果设置为&lt;code&gt;TRUE&lt;/code&gt;,则会去除掉count为0的方格.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;美学参数asethetics&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.3.2&lt;/span&gt; 美学参数(Asethetics)&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;stat_bind2d()&lt;/code&gt;接受以下美学参数(黑体为必须参数):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;x&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;y&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;fill&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;*group&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;计算变量computed-variables&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.3.3&lt;/span&gt; 计算变量(Computed variables)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;count&lt;/strong&gt; bin中的数据点的个数.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;density&lt;/strong&gt; bin中数据点的密度(density),整体数据点数目为1,所有其他bin内数据点数目与之scale.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ncount&lt;/strong&gt; count, scaled to maximum of 1?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ndensity&lt;/strong&gt; density, scaled to maximum of 1&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;例子-4&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.3.4&lt;/span&gt; 例子&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
d &amp;lt;- ggplot(diamonds, aes(x, y)) + 
  xlim(4, 10) + 
  ylim(4, 10)
d + geom_bin2d()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Removed 478 rows containing non-finite values (stat_bin2d).&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;空白图geom_blank&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.4&lt;/span&gt; 空白图&lt;code&gt;geom_blank()&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;geom_blank()&lt;/code&gt;函数不绘制任何东西,但是可以用来绘制一个空的plot来保持一定的刻度.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;geom_blank(mapping = NULL, data = NULL, stat = &amp;quot;identity&amp;quot;,
  position = &amp;quot;identity&amp;quot;, ..., show.legend = NA, inherit.aes = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;参数-6&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.4.1&lt;/span&gt; 参数&lt;/h3&gt;
&lt;p&gt;所有参数可以参考上面所有的函数.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;例子-5&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.4.2&lt;/span&gt; 例子&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p &amp;lt;- 
  ggplot(mtcars, aes(wt, mpg))
p&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p + 
  geom_blank()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-6-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;箱型图boxplot或者whiskers-plotgeom_boxplot和stat_boxplot&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.5&lt;/span&gt; 箱型图(boxplot或者whiskers plot)&lt;code&gt;geom_boxplot()&lt;/code&gt;和&lt;code&gt;stat_boxplot()&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;箱型图用来展示连续性变量的分布.它可以展示5个统计量(中位值,two hinges and two whiskers), 以及所有的outlier值.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;geom_boxplot(mapping = NULL, data = NULL, stat = &amp;quot;boxplot&amp;quot;,
  position = &amp;quot;dodge2&amp;quot;, ..., outlier.colour = NULL,
  outlier.color = NULL, outlier.fill = NULL, outlier.shape = 19,
  outlier.size = 1.5, outlier.stroke = 0.5, outlier.alpha = NULL,
  notch = FALSE, notchwidth = 0.5, varwidth = FALSE, na.rm = FALSE,
  show.legend = NA, inherit.aes = TRUE)

stat_boxplot(mapping = NULL, data = NULL, geom = &amp;quot;boxplot&amp;quot;,
  position = &amp;quot;dodge2&amp;quot;, ..., coef = 1.5, na.rm = FALSE,
  show.legend = NA, inherit.aes = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;参数-7&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.5.1&lt;/span&gt; 参数&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;mapping&lt;/strong&gt;,&lt;strong&gt;data&lt;/strong&gt;,&lt;strong&gt;position&lt;/strong&gt;和&lt;strong&gt;…&lt;/strong&gt;参数可以参考前面的参数.都是一致的.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;outlier.colour&lt;/strong&gt;,&lt;strong&gt;outlier.fill&lt;/strong&gt;,&lt;strong&gt;outlier.shape&lt;/strong&gt;,&lt;strong&gt;outlier.size&lt;/strong&gt;,&lt;strong&gt;outlier.stroke&lt;/strong&gt;,&lt;strong&gt;outlier.alpha&lt;/strong&gt;:离群点的美学参数.如果想要隐藏outlier,则可以将&lt;strong&gt;outlier.shape&lt;/strong&gt;设置为NA.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;notch&lt;/strong&gt;:默认为&lt;code&gt;FALSE&lt;/code&gt;,一个标准的box plot,如果设置为&lt;code&gt;TRUE&lt;/code&gt;,则是一个有缺口的box plot.有缺口的box plot可以方便多组数据进行比较.因为缺口处就是中位值所在位置.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;notchwidth&lt;/strong&gt;:缺口box plot的缺口处的宽度和整体宽度的比值,默认为0.5.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;varwidth&lt;/strong&gt;:默认为&lt;code&gt;FALSE&lt;/code&gt;,一个标准的box plot.如果设置为&lt;code&gt;TRUE&lt;/code&gt;,则每组的box的宽度和该组的变量的个数的平方根成正比.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;coef&lt;/strong&gt;:默认为1.5.也就是上下边框扩展出的上下晶须的距离为1.5倍的IQR.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;统计总结&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.5.2&lt;/span&gt; 统计总结&lt;/h3&gt;
&lt;p&gt;box plot框的上下边界(hinge)分别代表第一和第三分位数.&lt;/p&gt;
&lt;p&gt;从框上边界扩展出的上晶须(whisker)的距离为1.5倍的IQR(IQR为inter quartile range,也就是第三分位数和第一份位数之差).从框下边界扩展出的下晶须(whisker)的距离为1.5倍的IQR.在上下晶须范围以外的,就是outlier.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;美学参数&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.5.3&lt;/span&gt; 美学参数&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;geom_boxplot()&lt;/code&gt;接收以下美学参数(黑体为必须参数):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;x&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;lower&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;upper&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;umiddle&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ymin&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;yax&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;alpha&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;colour&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;fill&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;group&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;linetype&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;shape&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;size&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;weight&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;计算变量&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.5.4&lt;/span&gt; 计算变量&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;width box plot宽度.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ymin:下晶须==下框边界-1.5*IQR&lt;/p&gt;
&lt;p&gt;lower:下框边界.默认为25% quantile.&lt;/p&gt;
&lt;p&gt;notchlower:对于有缺口box plot的下框边界.默认为median - 1.58 * IQR / sqrt(n)&lt;/p&gt;
&lt;p&gt;middle:中位值,默认为50%分位数.&lt;/p&gt;
&lt;p&gt;notchupper:对于有缺口box plot的上框边界.默认为median + 1.58 * IQR / sqrt(n)&lt;/p&gt;
&lt;p&gt;upper:上框边界,默认为75%分位数.&lt;/p&gt;
&lt;p&gt;ymax上晶须==上框边界+1.5*IQR&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;例子-6&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.5.5&lt;/span&gt; 例子&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
p &amp;lt;- ggplot(mpg, aes(class, hwy))

p +
    geom_boxplot()  &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 交换x轴和y轴
p + geom_boxplot() + 
  coord_flip()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-7-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 有缺口的box plot,注意此时上下晶须距离是有变化的.
p +
  geom_boxplot(notch = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## notch went outside hinges. Try setting notch=FALSE.
## notch went outside hinges. Try setting notch=FALSE.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-7-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# box宽度和每组数目n的平方根成正比
p + geom_boxplot(varwidth = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-7-4.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p + geom_boxplot(fill = &amp;quot;white&amp;quot;, colour = &amp;quot;#3366FF&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-7-5.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 设置outlier的美学参数
p + geom_boxplot(outlier.colour = &amp;quot;red&amp;quot;, outlier.shape = 1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-7-6.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 将点和boxplot画在一起,这时候需要把outlier去除掉,因为和原始点会有重叠
p + geom_boxplot(outlier.shape = NA) + 
  geom_jitter(width = 0.2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-7-7.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 如果每组的box plot再分类,则默认是并列排在一起的
p + geom_boxplot(aes(colour = drv))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-7-8.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# x轴不是分类数据,而是连续数据也是可以的.但是需要提供如何对x轴进行分类,比如通过
#cut_width函数将连续性变量进行分类
ggplot(diamonds, aes(x = carat, y = price)) +
  geom_boxplot()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Continuous x aesthetic -- did you forget aes(group=...)?&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-7-9.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(diamonds, aes(carat, price)) +
  geom_boxplot(aes(colour = cut_width(carat, 0.25)), show.legend = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-7-10.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(diamonds, aes(carat, price)) +
  geom_boxplot(aes(group = cut_width(carat, 0.25)), show.legend = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-7-11.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 如果你自己定义了boxplot的各个元素,也可以通过设置stat=`identify`来画boxplot
y &amp;lt;- rnorm(100)
df &amp;lt;- data.frame(
  x = 1,
  y0 = min(y),
  y25 = quantile(y, 0.25),
  y50 = median(y),
  y75 = quantile(y, 0.75),
  y100 = max(y)
)
ggplot(df, aes(x)) +
  geom_boxplot(
   aes(ymin = y0, lower = y25, middle = y50, upper = y75, ymax = y100),
   stat = &amp;quot;identity&amp;quot;
 )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-7-12.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;d表面的2d等高线contoursgeom_contour和stat_contour&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.6&lt;/span&gt; 3D表面的2D等高线(contours)&lt;code&gt;geom_contour()&lt;/code&gt;和&lt;code&gt;stat_contour()&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;ggplot2&lt;/code&gt;并不能画3D图形,但是可以使用&lt;code&gt;geom_contour()&lt;/code&gt;和&lt;code&gt;geom_tile()&lt;/code&gt;(tile是瓷砖的意思)画等高线. To be a valid surface, the data must contain only a single row for each unique combination of the variables mapped to the x and y aesthetics. Contouring tends to work best when x and y form a (roughly) evenly spaced grid. If your data is not evenly spaced, you may want to interpolate to a grid before visualising.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;geom_contour(mapping = NULL, data = NULL, stat = &amp;quot;contour&amp;quot;,
  position = &amp;quot;identity&amp;quot;, ..., lineend = &amp;quot;butt&amp;quot;, linejoin = &amp;quot;round&amp;quot;,
  linemitre = 10, na.rm = FALSE, show.legend = NA,
  inherit.aes = TRUE)

stat_contour(mapping = NULL, data = NULL, geom = &amp;quot;contour&amp;quot;,
  position = &amp;quot;identity&amp;quot;, ..., na.rm = FALSE, show.legend = NA,
  inherit.aes = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;参数-8&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.6.1&lt;/span&gt; 参数&lt;/h3&gt;
&lt;p&gt;很多参数跟前面是一样的.其他不同的见下:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;lineend&lt;/strong&gt; 线条末端的形式(round, butt, square)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;linejoin&lt;/strong&gt; 线条交界处的形式(round, butt, square)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;linemitre&lt;/strong&gt; Line mitre limit (number greater than 1).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;美学参数-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.6.2&lt;/span&gt; 美学参数&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;geom_contour()&lt;/code&gt;接受以下参数(黑体为必须参数):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;x&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;y&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;alpha&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;colour&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;group&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;linetype&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;size&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;weight&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;stat_contour()&lt;/code&gt;接受以下参数(黑体为必须参数):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;x&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;y&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;z&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;group&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;order&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;计算变量-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.6.3&lt;/span&gt; 计算变量&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;level:等高线的高度&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;nlevel:等高线的高度,最大值scale到1.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;piece:contour piece (整数).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;例子-7&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.6.4&lt;/span&gt; 例子&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 基础图形
library(ggplot2)
## 先看看数据
head(faithfuld)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 3
##   eruptions waiting density
##       &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;
## 1      1.6       43 0.00322
## 2      1.65      43 0.00384
## 3      1.69      43 0.00444
## 4      1.74      43 0.00498
## 5      1.79      43 0.00542
## 6      1.84      43 0.00574&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;v &amp;lt;- ggplot(faithfuld, aes(waiting, eruptions, z = density))
v + geom_contour()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 也可以通过设置参数bins,来确定有几个等高线.
v + geom_contour(bins = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-8-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;v + geom_contour(bins = 10)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-8-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 当然,也可以设置等高线之间的距离
v + geom_contour(binwidth = 0.01)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-8-4.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;v + geom_contour(binwidth = 0.001)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-8-5.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 其他的参数
##level就是stat_contour的其中一个计算变量,level.
v + geom_contour(aes(colour = ..level..))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-8-6.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##下面与上面相同.
v + geom_contour(aes(colour = stat(level)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-8-7.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;v + geom_contour(colour = &amp;quot;red&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-8-8.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# geom_rect用来画矩形

v + geom_raster(aes(fill = density)) +
  geom_contour(colour = &amp;quot;white&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-8-9.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;v + geom_raster(aes(fill = density)) +
  scale_fill_gradient(low = &amp;quot;white&amp;quot;, high = &amp;quot;red&amp;quot;) +
  geom_contour(colour = &amp;quot;white&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-8-10.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;常见问题总结&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;3&lt;/span&gt; 常见问题总结&lt;/h1&gt;
&lt;div id=&#34;如何保证不同图中legend的scale一致&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.1&lt;/span&gt; 如何保证不同图中legend的scale一致&lt;/h2&gt;
&lt;p&gt;比如两个图中,我们想保证legend对应的size的粗细是和数据一致的.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tidyverse&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tibble&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tidyr&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;dplyr&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;  data.frame(x = 1:5, y = 1:5) %&amp;gt;% 
  ggplot() +
  geom_point(aes(x = x, y = y, size = x))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;scale_size_...()&lt;/code&gt;函数来进行设置.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;  data.frame(x = 1:5, y = 1:5) %&amp;gt;% 
  ggplot() +
  geom_point(aes(x = x, y = y, size = x)) +
  scale_size_continuous(limits = c(1,5), range = c(1,5))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data.frame(x = 1:5, y = 1:5) %&amp;gt;% 
  ggplot() +
  geom_point(aes(x = x, y = y, size = x)) +
  scale_size_continuous(limits = c(1,5), range = c(5,6))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-cookbook/index_files/figure-html/unnamed-chunk-10-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;其中参数&lt;code&gt;limits&lt;/code&gt;是一个两个的数值vector,用来设置是指的最小和最大值.而参数&lt;code&gt;range&lt;/code&gt;也是一个两个数值的vector,用来设置point的size的最小值和最大值.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>ggplot2扩展之黑暗主题</title>
      <link>/post/ggplot2-dark-theme/</link>
      <pubDate>Fri, 25 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/ggplot2-dark-theme/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#安装&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.1&lt;/span&gt; 安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#使用&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.2&lt;/span&gt; 使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#制作自己的暗黑主题&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.3&lt;/span&gt; 制作自己的暗黑主题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;今天介绍一个&lt;code&gt;ggplot2&lt;/code&gt;的扩展包,也是一个主题包,叫做&lt;code&gt;ggdark&lt;/code&gt;.&lt;/p&gt;
&lt;div id=&#34;安装&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1&lt;/span&gt; 安装&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#可以直接从cran安装
# if(!require(ggdark)){
#  install.packages(&amp;quot;ggdark&amp;quot;) 
# }
#也可以从github安装
# if(!require(ggdark)){
#  devtools::install_github(&amp;quot;nsgrantham/ggdark&amp;quot;)
# }&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;使用&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.2&lt;/span&gt; 使用&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ggdark&lt;/code&gt;中的函数可以分为两大类,一类就是提供与&lt;code&gt;ggplot2&lt;/code&gt;主题相对应的暗黑模式.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggdark)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggdark&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggplot2&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p &amp;lt;- 
  ggplot(diamonds) + 
  geom_point(aes(carat, price, color = cut)) + 
  scale_y_continuous(label = scales::dollar) +
  guides(color = guide_legend(reverse = TRUE)) +
  labs(title = &amp;quot;Prices of 50,000 round cut diamonds by carat and cut&amp;quot;,
       x = &amp;quot;Weight (carats)&amp;quot;,
       y = &amp;quot;Price in US dollars&amp;quot;,
       color = &amp;quot;Quality of the cut&amp;quot;)
p&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-dark-theme/index_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#使用ggdark的各种暗黑主题
p + ggdark::dark_theme_bw()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Inverted geom defaults of fill and color/colour.
## To change them back, use invert_geom_defaults().&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-dark-theme/index_files/figure-html/unnamed-chunk-2-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p + ggdark::dark_theme_classic()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-dark-theme/index_files/figure-html/unnamed-chunk-2-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p + ggdark::dark_theme_dark()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-dark-theme/index_files/figure-html/unnamed-chunk-2-4.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p + ggdark::dark_theme_gray()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-dark-theme/index_files/figure-html/unnamed-chunk-2-5.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p + ggdark::dark_theme_light()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-dark-theme/index_files/figure-html/unnamed-chunk-2-6.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p + ggdark::dark_theme_linedraw()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-dark-theme/index_files/figure-html/unnamed-chunk-2-7.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p + ggdark::dark_theme_minimal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-dark-theme/index_files/figure-html/unnamed-chunk-2-8.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p + ggdark::dark_theme_test()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-dark-theme/index_files/figure-html/unnamed-chunk-2-9.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p + ggdark::dark_theme_void()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-dark-theme/index_files/figure-html/unnamed-chunk-2-10.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;制作自己的暗黑主题&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.3&lt;/span&gt; 制作自己的暗黑主题&lt;/h3&gt;
&lt;p&gt;对于任意其他的主题,只需将主题放入到&lt;code&gt;dark_mode()&lt;/code&gt;函数中,就可以将其转变为暗黑款的主题.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggdark::invert_geom_defaults()  # change geom defaults back to black

# if(!require(gapminder)){
#   install.packages(&amp;quot;gapminder&amp;quot;)
# }
library(gapminder)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;gapminder&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p &amp;lt;- 
  ggplot(subset(gapminder, continent != &amp;quot;Oceania&amp;quot;)) +
  geom_line(aes(year, lifeExp, group = country, color = country), lwd = 1, show.legend = FALSE) + 
  facet_wrap(~ continent) +
  scale_color_manual(values = country_colors) +
  labs(title = &amp;quot;Life expectancy has increased worldwide&amp;quot;)

# if(!require(ggthemes)){
#   install.packages(&amp;quot;ggthemes&amp;quot;)
# }
library(ggthemes)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggthemes&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p + theme_fivethirtyeight()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-dark-theme/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##暗黑版主题
p + dark_mode(theme_fivethirtyeight())&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Inverted geom defaults of fill and color/colour.
## To change them back, use invert_geom_defaults().&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-ggplot2-dark-theme/index_files/figure-html/unnamed-chunk-3-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R data visulization cookbook</title>
      <link>/post/r-data-visulization-cookbook/</link>
      <pubDate>Fri, 25 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/r-data-visulization-cookbook/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#ggplot2中如何反转坐标轴&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.1&lt;/span&gt; &lt;code&gt;ggplot2&lt;/code&gt;中如何反转坐标轴?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ggplot2中如何修改绘图区域的边界&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.2&lt;/span&gt; &lt;code&gt;ggplot2&lt;/code&gt;中如何修改绘图区域的边界?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#如何获得合适的配色组合&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.3&lt;/span&gt; 如何获得合适的配色组合?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ggplot2中如何反转坐标轴-1&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.4&lt;/span&gt; &lt;code&gt;ggplot2&lt;/code&gt;中如何反转坐标轴?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;ggplot2中如何反转坐标轴&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1&lt;/span&gt; &lt;code&gt;ggplot2&lt;/code&gt;中如何反转坐标轴?&lt;/h3&gt;
&lt;p&gt;使用&lt;code&gt;scale_x_reverse()/scale_y_reverse()&lt;/code&gt;函数.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggplot2&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(magrittr)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;magrittr&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p &amp;lt;- 
mtcars %&amp;gt;% 
  ggplot(aes(mpg, disp)) +
  geom_point() 
p&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-r-data-visulization-cookbook/index_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##反转X坐标轴
p + 
  scale_x_reverse()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-r-data-visulization-cookbook/index_files/figure-html/unnamed-chunk-1-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 反转y坐标轴
p + 
  scale_y_reverse()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-r-data-visulization-cookbook/index_files/figure-html/unnamed-chunk-1-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ggplot2中如何修改绘图区域的边界&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.2&lt;/span&gt; &lt;code&gt;ggplot2&lt;/code&gt;中如何修改绘图区域的边界?&lt;/h3&gt;
&lt;p&gt;在&lt;code&gt;theme()&lt;/code&gt;函数中设置&lt;code&gt;plot.margin&lt;/code&gt;参数,且该参数应该是一个&lt;code&gt;margin()&lt;/code&gt;函数构建的对象.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
library(magrittr)
p &amp;lt;- 
mtcars %&amp;gt;% 
  ggplot(aes(mpg, disp)) +
  geom_point(size = 2, colour = &amp;quot;skyblue&amp;quot;) +
  theme_bw() +
  theme(plot.margin = margin(t = 0, r = 0, b = 0, l = 0, unit = &amp;quot;pt&amp;quot;))
p&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-r-data-visulization-cookbook/index_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;如何获得合适的配色组合&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.3&lt;/span&gt; 如何获得合适的配色组合?&lt;/h3&gt;
&lt;p&gt;比较常见的配色工具包括&lt;code&gt;ggsci&lt;/code&gt;,&lt;code&gt;RColorBrewer&lt;/code&gt;等.且可以使用&lt;code&gt;scales&lt;/code&gt;包中的&lt;code&gt;show_col()&lt;/code&gt;函数来展示颜色.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggsci)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggsci&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(scales)

test_colour &amp;lt;- 
  ggsci::pal_jama()(7)

show_col(test_colour)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-r-data-visulization-cookbook/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;test_colour &amp;lt;- 
  ggsci::pal_jama(alpha = 0.5)(7)

show_col(test_colour)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-r-data-visulization-cookbook/index_files/figure-html/unnamed-chunk-3-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;另外,&lt;code&gt;RColorBrewer&lt;/code&gt;包也非常方便.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(RColorBrewer)
##显示所有的配色
RColorBrewer::display.brewer.all()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-r-data-visulization-cookbook/index_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##可以扩大弄每一种配色左边都有该配色的名字,因此如果想要单独显示该配色,直接使用下列命令.
RColorBrewer::display.brewer.pal(n = 9, name = &amp;quot;Set1&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-25-r-data-visulization-cookbook/index_files/figure-html/unnamed-chunk-4-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##两个参数分别用来设置需要显示的颜色的个数以及配色的名字.
#如果需要将该配色名字提出来,使用下面命令
RColorBrewer::brewer.pal(n = 9, name = &amp;quot;Set1&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;#E41A1C&amp;quot; &amp;quot;#377EB8&amp;quot; &amp;quot;#4DAF4A&amp;quot; &amp;quot;#984EA3&amp;quot; &amp;quot;#FF7F00&amp;quot; &amp;quot;#FFFF33&amp;quot; &amp;quot;#A65628&amp;quot;
## [8] &amp;quot;#F781BF&amp;quot; &amp;quot;#999999&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;ggplot2中如何反转坐标轴-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.4&lt;/span&gt; &lt;code&gt;ggplot2&lt;/code&gt;中如何反转坐标轴?&lt;/h3&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>快速回到R project所在的工作目录</title>
      <link>/post/r-project-work-directory/</link>
      <pubDate>Fri, 25 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/r-project-work-directory/</guid>
      <description>


&lt;p&gt;&lt;code&gt;Rstudio&lt;/code&gt;的&lt;code&gt;Rproject&lt;/code&gt;可以用来方便的管理自己的某个项目的所有代码,文件等等.另外的一个好处是打开该项目文件之后,路径自动设置为该project所在的工作目录,因此在该项目下可以通过相对路径来设置后续分析文件所在的工作目录.从未方便代码的移植和分享.&lt;/p&gt;
&lt;p&gt;但是如何快速回到自己&lt;code&gt;Rproject&lt;/code&gt;所在的目录呢?比如在某个项目中,我的&lt;code&gt;Rproject&lt;/code&gt;所在目录为&lt;code&gt;A&lt;/code&gt;,而我的某个数据分析的文件在路径&lt;code&gt;A/B/C&lt;/code&gt;,当我通过相对路径设置在该目录下,另外一个分析所在的目录为&lt;code&gt;A/E/F&lt;/code&gt;,这时候我就需要先将路径设置到&lt;code&gt;A&lt;/code&gt;,然后才可以再通过设置相对路径将目录修改为&lt;code&gt;A/E/F&lt;/code&gt;.所以可以看到,需要经常将目录设置为&lt;code&gt;Rproject&lt;/code&gt;所在的根目录.因此,写了一个小的函数,可以用来快速的目录切换为&lt;code&gt;Rproject&lt;/code&gt;所在目录.&lt;/p&gt;
&lt;p&gt;代码如下:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;setwd_project &amp;lt;- function() {
  currect_wd &amp;lt;-
    getwd()

  candidate_wd &amp;lt;-
    currect_wd %&amp;gt;%
    stringr::str_split(&amp;quot;/&amp;quot;) %&amp;gt;%
    unlist()

  if (length(candidate_wd) == 1) {
    candidate_wd &amp;lt;- currect_wd
  } else{
    candidate_wd &amp;lt;-
      lapply(2:length(candidate_wd), function(i) {
        paste(candidate_wd[1:i], collapse = &amp;quot;/&amp;quot;)
      })
  }

  candidate_wd &amp;lt;-
    rev(candidate_wd)

  for (i in 1:length(candidate_wd)) {
    wd &amp;lt;- candidate_wd[[i]]
    file_name &amp;lt;-
      list.files(wd,
                 recursive = ifelse(wd == currect_wd, TRUE, FALSE),
                 full.names = TRUE)
    project_index &amp;lt;-
      grep(&amp;quot;.Rproj&amp;quot;, file_name)

    if (length(project_index) != 0) {
      project_wd &amp;lt;-
        file_name[project_index[1]] %&amp;gt;%
        stringr::str_split(&amp;quot;/&amp;quot;) %&amp;gt;%
        unlist() %&amp;gt;%
        head(-1) %&amp;gt;%
        paste(collapse = &amp;quot;/&amp;quot;)
      cat(
        &amp;quot;The project name is:&amp;quot;,
        file_name[project_index[1]] %&amp;gt;%
          stringr::str_split(&amp;quot;/&amp;quot;) %&amp;gt;%
          unlist() %&amp;gt;%
          tail(1),
        &amp;quot;\n&amp;quot;
      )
      cat(&amp;quot;The project wd is:&amp;quot;,
          project_wd, &amp;quot;\n&amp;quot;)

      setwd(project_wd)
      break()
    }
  }
  if (length(project_index) == 0) {
    cat(&amp;quot;There are no .Rproj in your file. No change for wd.\n&amp;quot;)
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;思路和代码都很简单,这个函数也在我自己常用的小工具集合&lt;code&gt;sxtTools&lt;/code&gt;包中,所过想要直接使用,可以考虑安装这个包.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;devtools::install_github(&amp;quot;jaspershen/sxtTools&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>斯坦福资源总结</title>
      <link>/post/stanford-resource-summary/</link>
      <pubDate>Fri, 25 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/stanford-resource-summary/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#adobe软件&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.1&lt;/span&gt; Adobe软件&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;这篇博文主要用来记录斯坦福校内的一些资源和手续的办理事项.&lt;/p&gt;
&lt;div id=&#34;adobe软件&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1&lt;/span&gt; Adobe软件&lt;/h3&gt;
&lt;p&gt;斯坦福医学院是有免费的Adobe软件可以使用的,包括Illustrator,photoshop等.网址如下:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://csbf.stanford.edu/software/&#34; class=&#34;uri&#34;&gt;https://csbf.stanford.edu/software/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;叫CSBF.点进去之后,点击&lt;code&gt;(Sign your lab up here)&lt;/code&gt;,然后输入信息,注册账号,会收到邮件,提示注册成功,一般账号就是SunetID.然后再次登录CSBF网站,下载软件,安装即可.但是该软件只能在斯坦福网络条件下使用.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./csbf.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Machine for genomics conference</title>
      <link>/post/machine-for-genomics-conference/</link>
      <pubDate>Thu, 17 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/machine-for-genomics-conference/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#machine-learning-for-biomedical-information&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.1&lt;/span&gt; Machine learning for biomedical information&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;freenome&lt;/p&gt;
&lt;p&gt;freenome intergateing innovative science to develop a blood-based cancer test starting with CRC.&lt;/p&gt;
&lt;p&gt;cfDNA (cell free DNA).&lt;/p&gt;
&lt;p&gt;Interpreting deep learning models of regulatory DNA&lt;/p&gt;
&lt;p&gt;Anshul Kundaje&lt;/p&gt;
&lt;p&gt;decoding genome function&lt;/p&gt;
&lt;p&gt;control elements gene&lt;/p&gt;
&lt;p&gt;ATAC-seq/DNase-seq&lt;/p&gt;
&lt;p&gt;ChIP-seq&lt;/p&gt;
&lt;p&gt;prediCtive model of regularity DNA&lt;/p&gt;
&lt;p&gt;Just transform DNA sequence to dummy matrxi.&lt;/p&gt;
&lt;div id=&#34;machine-learning-for-biomedical-information&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1&lt;/span&gt; Machine learning for biomedical information&lt;/h3&gt;
&lt;p&gt;hierarchical latent variable models?&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Machine for genomics conference</title>
      <link>/post/machine-for-genomics-conference/</link>
      <pubDate>Thu, 17 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/machine-for-genomics-conference/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#machine-learning-for-biomedical-information&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.1&lt;/span&gt; Machine learning for biomedical information&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;freenome&lt;/p&gt;
&lt;p&gt;freenome intergateing innovative science to develop a blood-based cancer test starting with CRC.&lt;/p&gt;
&lt;p&gt;cfDNA (cell free DNA).&lt;/p&gt;
&lt;p&gt;Interpreting deep learning models of regulatory DNA&lt;/p&gt;
&lt;p&gt;Anshul Kundaje&lt;/p&gt;
&lt;p&gt;decoding genome function&lt;/p&gt;
&lt;p&gt;control elements gene&lt;/p&gt;
&lt;p&gt;ATAC-seq/DNase-seq&lt;/p&gt;
&lt;p&gt;ChIP-seq&lt;/p&gt;
&lt;p&gt;prediCtive model of regularity DNA&lt;/p&gt;
&lt;p&gt;Just transform DNA sequence to dummy matrxi.&lt;/p&gt;
&lt;div id=&#34;machine-learning-for-biomedical-information&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1&lt;/span&gt; Machine learning for biomedical information&lt;/h3&gt;
&lt;p&gt;hierarchical latent variable models?&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Docker的安装使用和配置</title>
      <link>/post/docker/</link>
      <pubDate>Wed, 16 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/docker/</guid>
      <description>


&lt;p&gt;将自己安装docker,使用以及配置记录下来,主要还包括常用的命令总结以及一些bug的处理,以及一些常见资源.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>R语言常见统计预测模型</title>
      <link>/post/r-ml-model/</link>
      <pubDate>Wed, 16 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/r-ml-model/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#lasso模型&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.1&lt;/span&gt; lasso模型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#references&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.2&lt;/span&gt; References&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;lasso模型&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1&lt;/span&gt; lasso模型&lt;/h3&gt;
&lt;p&gt;LASSO回归的特点是在拟合广义线性模型的同时进行变量筛选(variable selection)和复杂度调整(regularization).因此,不论因变量(dependent/response varaible)是连续的(continuous),还是二元或者多元离散的（discrete）,都可以用LASSO回归建模然后预测.这里的变量筛选是指不把所有的变量都放入模型中进行拟合,而是有选择的把变量放入模型从而得到更好的性能参数. 复杂度调整是指通过一系列参数控制模型的复杂度,从而避免过拟合(overfitting). 对于线性模型来说,复杂度与模型的变量数有直接关系,变量数越多,模型复杂度就越高. 更多的变量在拟合时往往可以给出一个看似更好的模型,但是同时也面临过度拟合的危险.此时如果用全新的数据去验证模型(validation),通常效果很差. 一般来说,变量数大于数据点数量很多,或者某一个离散变量有太多独特值时,都有可能过度拟合.&lt;/p&gt;
&lt;p&gt;LASSO回归的复杂度主要由参数&lt;span class=&#34;math inline&#34;&gt;\(\lambda\)&lt;/span&gt;(lambda)来控制.lambda越大,对变量较多的线性模型的惩罚力度就越大.最终获得一个变量较少的模型.&lt;/p&gt;
&lt;p&gt;另外还有一个参数&lt;span class=&#34;math inline&#34;&gt;\(\alpha\)&lt;/span&gt;(alpha)用来控制高度相关性模型的性状.LASSO回归时,alpha设置为1.&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;glmnet&lt;/code&gt;包可以进行LASSO回归.它可以对一系列不同的lambda值进行拟合,每次拟合都用到上一个lambda拟合的结果,从而大大提高了运行效率.&lt;/p&gt;
&lt;div id=&#34;常用参数如下&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1.1&lt;/span&gt; 常用参数如下:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;x&lt;/code&gt;: 自变量数据集,需要为matrix格式,行为观测列为变量.&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;y&lt;/code&gt;: 因变量数据集,需要为matrix格式,只有一列.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;family&lt;/code&gt;: 应变量类型.如果时连续性变量(也就是要做回归分析),&lt;code&gt;family&lt;/code&gt;应该为&lt;code&gt;gussian&lt;/code&gt;(高斯分布/正态分布)或者&lt;code&gt;poisson&lt;/code&gt;(泊松分布).如果为两分类不连续变量(factor类型,且只有两个levels),应设置为&lt;code&gt;binomial&lt;/code&gt;.如果时多分类不连续变量(factor类型,且多个levels),则应设置为&lt;code&gt;multinomial&lt;/code&gt;.如果设置为&lt;code&gt;cox&lt;/code&gt;,则y应当为一个两列的matrix,列名分别为&lt;code&gt;time&lt;/code&gt;和&lt;code&gt;status&lt;/code&gt;,&lt;code&gt;tiem&lt;/code&gt;为存活时间,&lt;code&gt;status&lt;/code&gt;为结局状态(1代表死亡,0代表还未死亡).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;alpha&lt;/code&gt;: 在LASSO回归中,将其设置为1.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nlambda&lt;/code&gt;: 选取多少个lambda进行优化,默认为100.也就是使用100个lambda值拟合出100个系数不同的模型.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lambda&lt;/code&gt;: 提供lambda值,如果设置该值(一个或者多个),则会覆盖掉自动选择的lambda值.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;standardize&lt;/code&gt;: 是否对数据进行标准化(scale),默认为TRUE.推荐自己对数据进行标准化,如果自己做过sca了,这里需要设置为FALSE.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;构建模型&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1.2&lt;/span&gt; 构建模型&lt;/h4&gt;
&lt;p&gt;构建模型之后,可以将其打印出来观察具体信息.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.2&lt;/span&gt; References&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cosx.org/2016/10/data-mining-1-lasso/&#34; class=&#34;uri&#34;&gt;https://cosx.org/2016/10/data-mining-1-lasso/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>网络分析之igraph</title>
      <link>/post/igraph/</link>
      <pubDate>Tue, 15 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/igraph/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#安装&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.1&lt;/span&gt; 安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#常用功能总结&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.2&lt;/span&gt; 常用功能总结&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#从data-frame转变为igraph对象&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.3&lt;/span&gt; 从data frame转变为``igraph对象&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code&gt;igraph&lt;/code&gt;是一些列网络分析工具的集合.开源且免费,拥有R, Python以及C/C++等语言接口.我们主要介绍R语言中的&lt;code&gt;igraph&lt;/code&gt;包.其官网如下:
&lt;a href=&#34;https://igraph.org/r/doc/plot.common.html&#34; class=&#34;uri&#34;&gt;https://igraph.org/r/doc/plot.common.html&lt;/a&gt;&lt;/p&gt;
&lt;div id=&#34;安装&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1&lt;/span&gt; 安装&lt;/h3&gt;
&lt;/div&gt;
&lt;div id=&#34;常用功能总结&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.2&lt;/span&gt; 常用功能总结&lt;/h3&gt;
&lt;/div&gt;
&lt;div id=&#34;从data-frame转变为igraph对象&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.3&lt;/span&gt; 从data frame转变为``igraph对象&lt;/h3&gt;
&lt;p&gt;使用&lt;code&gt;graph_from_data_frame()&lt;/code&gt;函数.一共三个参数:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;d&lt;/code&gt;:&lt;code&gt;data.frame&lt;/code&gt;,前两列必须是一条边的两个顶点,比如第一列为&lt;code&gt;from&lt;/code&gt;,第二列为&lt;code&gt;to&lt;/code&gt;.其余的列会作为edge的属性.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;directed&lt;/code&gt;:是否为有向图,默认为TRUE.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;vertices&lt;/code&gt;:需要是一个data.frame.第一列是vertex的名字,然后其他列是vertex的属性.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(igraph)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;igraph&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:stats&amp;#39;:
## 
##     decompose, spectrum&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following object is masked from &amp;#39;package:base&amp;#39;:
## 
##     union&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;actors &amp;lt;- data.frame(name=c(&amp;quot;Alice&amp;quot;, &amp;quot;Bob&amp;quot;, &amp;quot;Cecil&amp;quot;, &amp;quot;David&amp;quot;,
                            &amp;quot;Esmeralda&amp;quot;),
                     age=c(48,33,45,34,21),
                     gender=c(&amp;quot;F&amp;quot;,&amp;quot;M&amp;quot;,&amp;quot;F&amp;quot;,&amp;quot;M&amp;quot;,&amp;quot;F&amp;quot;))

relations &amp;lt;- data.frame(from=c(&amp;quot;Bob&amp;quot;, &amp;quot;Cecil&amp;quot;, &amp;quot;Cecil&amp;quot;, &amp;quot;David&amp;quot;,
                               &amp;quot;David&amp;quot;, &amp;quot;Esmeralda&amp;quot;),
                        to=c(&amp;quot;Alice&amp;quot;, &amp;quot;Bob&amp;quot;, &amp;quot;Alice&amp;quot;, &amp;quot;Alice&amp;quot;, &amp;quot;Bob&amp;quot;, &amp;quot;Alice&amp;quot;),
                        same.dept=c(FALSE,FALSE,TRUE,FALSE,FALSE,TRUE),
                        friendship=c(4,5,5,2,1,1), advice=c(4,5,5,4,2,3))
g &amp;lt;- graph_from_data_frame(relations, directed = TRUE, vertices = actors)
g&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## IGRAPH 9e0c0ea DN-- 5 6 -- 
## + attr: name (v/c), age (v/n), gender (v/c), same.dept (e/l),
## | friendship (e/n), advice (e/n)
## + edges from 9e0c0ea (vertex names):
## [1] Bob      -&amp;gt;Alice Cecil    -&amp;gt;Bob   Cecil    -&amp;gt;Alice David    -&amp;gt;Alice
## [5] David    -&amp;gt;Bob   Esmeralda-&amp;gt;Alice&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(g)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/en/post/2019-10-15-igraph/index_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;div id=&#34;寻找某个vertex的neighbor&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.3.1&lt;/span&gt; 寻找某个vertex的neighbor&lt;/h4&gt;
&lt;p&gt;使用&lt;code&gt;neighbors()&lt;/code&gt;函数.一共两个参数:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;graph&lt;/code&gt;:&lt;code&gt;igraph&lt;/code&gt;类对象.&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;V&lt;/code&gt;:某vertex的名字(name).&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mode&lt;/code&gt;: 对于有向图来说,是寻找从该vertex出发的neighbors(‘out’),还是指向该vertex的neighbors(‘in’),还是两种都寻找(‘both’).&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;设置graph中vertex的属性&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.3.2&lt;/span&gt; 设置graph中vertex的属性&lt;/h4&gt;
&lt;p&gt;如果需要给graph中的vertex增加或者修改属性,可以使用&lt;code&gt;ste_vertex_attr()&lt;/code&gt;函数.一共四个参数:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;graph&lt;/code&gt;:&lt;code&gt;igraph&lt;/code&gt;类对象.&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;name&lt;/code&gt;:设置的新的属性的名字.&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;index&lt;/code&gt;:设置vertex属性时的vertex的index.默认按照graph中vertex的默认index(V(graph))来设置.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;value&lt;/code&gt;:设置的属性的值.需要和vertex的长度一致.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;将igraph对象转变为data.frame格式&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.3.3&lt;/span&gt; 将&lt;code&gt;igraph&lt;/code&gt;对象转变为data.frame格式&lt;/h4&gt;
&lt;p&gt;使用&lt;code&gt;as_long_data_frame()&lt;/code&gt;函数可以将&lt;code&gt;igraph&lt;/code&gt;转换为data.frame格式.只有一个参数,就是&lt;code&gt;graph&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;从一个graph提取子graphsubgraph&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.3.4&lt;/span&gt; 从一个graph提取子graph(subgraph)&lt;/h4&gt;
&lt;p&gt;使用&lt;code&gt;subgraph()&lt;/code&gt;函数.一共两个参数:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;graph&lt;/code&gt;:&lt;code&gt;igraph&lt;/code&gt;类对象.&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;V&lt;/code&gt;:要提取的subgraph的所有的vertex的名字(name).&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;获取vertex属性&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.3.5&lt;/span&gt; 获取vertex属性&lt;/h4&gt;
&lt;p&gt;使用&lt;code&gt;vertex_attr()&lt;/code&gt;函数.一共4个参数.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;graph&lt;/code&gt;:&lt;code&gt;igraph&lt;/code&gt;类对象.&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;name&lt;/code&gt;:需要获取的属性的名字,默认提取所有属性.&lt;/li&gt;
&lt;li&gt;index:需要获取那些vertex的属性,默认提取所有的vertex.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>一点感想</title>
      <link>/post/20191014/</link>
      <pubDate>Mon, 14 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/20191014/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#远程连接&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.1&lt;/span&gt; 远程连接&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#安装虚拟机&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.2&lt;/span&gt; 安装虚拟机&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#网络连接问题&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.3&lt;/span&gt; 网络连接问题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;实验室新买了一台workstation.因为有软件需要在windows上运行,因此本来需要安装windows server版本.但是后来问了一下学校的IT部门,安装一台服务器非常麻烦,需要学校IT部门来关理,每月收费350刀.如果是自己关理,也可以,但是如果有数据外漏的话,责任需要自己负责.因此最后考虑安装普通的window10版本,然后可以远程连接.我自己再看看能够在上面的虚拟机上安装linux系统,实现多人同时远程练级额.&lt;/p&gt;
&lt;div id=&#34;远程连接&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1&lt;/span&gt; 远程连接&lt;/h3&gt;
&lt;p&gt;连接上Stanford的VPN之后,远程连接并不起作用.当时推测的可能就是这台电脑属于某个group,需要把我们的SunetID加入刀该group内,然后才能进去.但是来的IT人员搞了好几天也没搞定,我也是略微无语.随后不在管他,我在IT online提交了ticket,过了大概一个星期,终于查到了解决办法,就是说需要加入某个group.将邮件记录如下:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Xiaotao,
Your device is connected to Genetics VLAN 3020, CIDR 171.65.76.0/23. Users who need to have VPN/RDP access to the device need to be added to workgroup: net-access-som-vpn-genetics.&lt;br /&gt;
Please reach out to one of the admins below (to request access):&lt;br /&gt;
Chris Probert&lt;br /&gt;
Jin Wook Lee&lt;br /&gt;
Anna Scherbina&lt;br /&gt;
Please let me know if you have any questions.&lt;br /&gt;
Best regards,&lt;br /&gt;
Brian, Med T&amp;amp;DS&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;但是非常奇怪的是,这几个人我们都不认识,google一下,竟然是Biomedicine Informatics实验室的.然后赶紧给他们发了邮件,没想到很快就给了回复,说已经把我们的SunetID加入到该group中,大约20分钟之后可以连接.随后果然可以.&lt;/p&gt;
&lt;p&gt;使用Windows上的&lt;code&gt;Remote Desktop Connection&lt;/code&gt;软件进行连接时,注意&lt;code&gt;User name&lt;/code&gt;时需要在用户名前面加上&lt;code&gt;win\&lt;/code&gt;,也就是写&lt;code&gt;win\shenxt&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;安装虚拟机&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.2&lt;/span&gt; 安装虚拟机&lt;/h3&gt;
&lt;p&gt;原本想要安装VMware软件的,后来发现这个软件跟win10自带的&lt;code&gt;Hyper-V&lt;/code&gt;软件是冲突的.后来就放弃使用VMware,直接使用Hyper-V软件.&lt;/p&gt;
&lt;p&gt;最开始下载的&lt;code&gt;CentOS-8&lt;/code&gt;系统,但是安装的时候,遇到了问题,安装成功之后,重启之后没有进入登录界面,反而又重新到了安装界面!查了很多,都没有找到解决办法.&lt;/p&gt;
&lt;p&gt;后来,觉得有可能是系统版本的问题,因此在CentOS官网上找到了CentOS-7版本.重新走了一遍安装程序,终于成功了.&lt;/p&gt;
&lt;p&gt;安装之后没有图形界面,只有命令行形式.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;网络连接问题&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.3&lt;/span&gt; 网络连接问题&lt;/h3&gt;
&lt;p&gt;直接安装之后,并没有网络连接.需要进行设置.查了一些资料,首先需要在Hyper-V软件上创建虚拟交换机,但是我在创建的时候,总是报错,无法创建,然后又开始google.结果找到了这样一个网页:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://support.microsoft.com/zh-cn/help/3101106/you-cannot-create-a-hyper-v-virtual-switch-on-64-bit-versions-of-windo&#34; class=&#34;uri&#34;&gt;https://support.microsoft.com/zh-cn/help/3101106/you-cannot-create-a-hyper-v-virtual-switch-on-64-bit-versions-of-windo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;然后就下载软件,运行,重启,然后就没有网络连接了!而且是所有的网络都没有了,查了一下感觉应该是驱动的问题,然后在官网上下载了Intel的驱动,走的时候还没有安装好,看看明天结果如何.&lt;/p&gt;
&lt;p&gt;并不是driver的问题,第二天IT过来瞅了一眼,又重新搞了一会driver,还是不行,最后拉走了,说需要慢慢检查.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>blogdown创建博客总结</title>
      <link>/post/blogdown/</link>
      <pubDate>Sun, 13 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/blogdown/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#如何修改网站icon&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; 如何修改网站icon?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#如何将个人网站作为图床使用&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; 如何将个人网站作为图床使用?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#如何将某个部分如博客blog不显示在主页home上而是点击之后打开一个单独的page&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3&lt;/span&gt; 如何将某个部分(如博客blog)不显示在主页(home)上,而是点击之后,打开一个单独的page?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#如何添加新的页面&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4&lt;/span&gt; 如何添加新的页面?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#如何在post中添加本地图片&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;5&lt;/span&gt; 如何在post中添加本地图片?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#如何在rmarkdown中添加table-of-contents&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;6&lt;/span&gt; 如何在Rmarkdown中添加table of contents?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#netlify自动部署deployfailed的问题&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;7&lt;/span&gt; netlify自动部署(deploy)failed的问题&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#打开netlify网站&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;7.1&lt;/span&gt; 打开netlify网站:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#点击site-settings&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;7.2&lt;/span&gt; 点击&lt;code&gt;Site settings&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#点击build-deploy&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;7.3&lt;/span&gt; 点击&lt;code&gt;Build &amp;amp; deploy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#修改hugo-version&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;7.4&lt;/span&gt; 修改&lt;code&gt;Hugo version&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#将网站改为中英双文之后新建post报错&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;8&lt;/span&gt; 将网站改为中英双文之后,新建&lt;code&gt;post&lt;/code&gt;报错&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#新建blog的yaml如下&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;8.1&lt;/span&gt; 新建blog的&lt;code&gt;YAML&lt;/code&gt;如下:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#常用的categories&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;8.2&lt;/span&gt; 常用的categories:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#常用的tags&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;8.3&lt;/span&gt; 常用的tags:&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#如何在postmarkdown中插入emojis&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;9&lt;/span&gt; 如何在post(markdown)中插入Emojis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#如何在post中插入视频&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;10&lt;/span&gt; 如何在post中插入视频?&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#如何插入b站视频&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;10.1&lt;/span&gt; 如何插入B站视频?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#在markdown中&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;10.2&lt;/span&gt; 在markdown中&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#a-video-from-your-staticimg-media-library&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;10.2.1&lt;/span&gt; A video from your static/img/ media library:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#a-video-within-a-pages-folder-e.g.-contentposthello&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;10.2.2&lt;/span&gt; A video within a page’s folder (e.g. content/post/hello/):&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#youtube&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;10.2.3&lt;/span&gt; Youtube:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#vimeo&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;10.2.4&lt;/span&gt; Vimeo:&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#在rmarkdown中&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;10.3&lt;/span&gt; 在Rmarkdown中&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#本地视频&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;10.3.1&lt;/span&gt; 本地视频&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#youtube视频&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;10.3.2&lt;/span&gt; Youtube视频&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#如何在post中插入icon&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;11&lt;/span&gt; 如何在post中插入icon?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;如何修改网站icon&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; 如何修改网站icon?&lt;/h1&gt;
&lt;p&gt;将自己的logo图片截取为192x192像素(长款分别为0.21cm).然后将其命名为’icon-192.png’放置于&lt;code&gt;static/img&lt;/code&gt;文件夹中即可.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;如何将个人网站作为图床使用&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; 如何将个人网站作为图床使用?&lt;/h1&gt;
&lt;p&gt;将图片放置于&lt;code&gt;static/files&lt;/code&gt;文件夹中即可.使用如下路径访问:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shenxt.info/files/figure.name&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如: &lt;a href=&#34;https://www.shenxt.info/files/wechat_QR.jpg&#34; class=&#34;uri&#34;&gt;https://www.shenxt.info/files/wechat_QR.jpg&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;如何将某个部分如博客blog不显示在主页home上而是点击之后打开一个单独的page&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;3&lt;/span&gt; 如何将某个部分(如博客blog)不显示在主页(home)上,而是点击之后,打开一个单独的page?&lt;/h1&gt;
&lt;p&gt;以blog为例(posts).&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;首先需要将 &lt;code&gt;content/home&lt;/code&gt;中的&lt;code&gt;posts.md&lt;/code&gt;中的active设置为false.这样,这一部分就不会在home主页显示.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;change-active.png&#34; /&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;然后将&lt;code&gt;content/home&lt;/code&gt;中的&lt;code&gt;posts.md&lt;/code&gt;拷贝到&lt;code&gt;content/post&lt;/code&gt;中,并改名为&lt;code&gt;index.md&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;打开&lt;code&gt;config/_default/menus.toml&lt;/code&gt;,然后将Blog的url修改为文件夹的名称.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;change-url.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;如何添加新的页面&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;4&lt;/span&gt; 如何添加新的页面?&lt;/h1&gt;
&lt;p&gt;以在我的网页添加新的中文入口为例.&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;conternt&lt;/code&gt;文件夹下面创建新的&lt;code&gt;chinese&lt;/code&gt;文件夹.在该文件夹下面创建&lt;code&gt;_index.md&lt;/code&gt;文件.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;如何在post中添加本地图片&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;5&lt;/span&gt; 如何在post中添加本地图片?&lt;/h1&gt;
&lt;p&gt;首先在&lt;code&gt;content/post/&lt;/code&gt;建立和post名z字去除掉数字之后的的文件夹(比如post名字为&lt;code&gt;2019-10-25-test&lt;/code&gt;,则文件夹命名为&lt;code&gt;test&lt;/code&gt;),然后再在该文件夹下建立和post同名的文件夹(&lt;code&gt;2019-10-25-test&lt;/code&gt;),然后将图片(如&lt;code&gt;test.png&lt;/code&gt;)放入该文件夹下.在post中,使用:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;![](test/2019-10-25-test/test.png)&lt;/code&gt;语句插入图片.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;如何在rmarkdown中添加table-of-contents&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;6&lt;/span&gt; 如何在Rmarkdown中添加table of contents?&lt;/h1&gt;
&lt;p&gt;在每篇&lt;code&gt;Rmarkdown&lt;/code&gt;的&lt;code&gt;YAML&lt;/code&gt;添加如下内容:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;output:
  blogdown::html_page:
    toc: true
    number_sections: true&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;netlify自动部署deployfailed的问题&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;7&lt;/span&gt; netlify自动部署(deploy)failed的问题&lt;/h1&gt;
&lt;p&gt;发现自动部署总是失败.查了一下,应该是本地的&lt;code&gt;Hugo&lt;/code&gt;和netlify上的版本不一致,解决方法如下:&lt;/p&gt;
&lt;p&gt;首先,在R console输入下列语句,查看本地&lt;code&gt;Hugo&lt;/code&gt;版本:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;blogdown::hugo_version()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;#39;0.58.3&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后修改netlify上的&lt;code&gt;Hugo&lt;/code&gt;的版本.&lt;/p&gt;
&lt;div id=&#34;打开netlify网站&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;7.1&lt;/span&gt; 打开netlify网站:&lt;/h2&gt;
&lt;p&gt;点击下面网站:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://app.netlify.com/teams/jaspershen/sites&#34; class=&#34;uri&#34;&gt;https://app.netlify.com/teams/jaspershen/sites&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;然后点击托管的自己的网站.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;netlify.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;点击site-settings&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;7.2&lt;/span&gt; 点击&lt;code&gt;Site settings&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;site_setting.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;点击build-deploy&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;7.3&lt;/span&gt; 点击&lt;code&gt;Build &amp;amp; deploy&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;build_deploy.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;修改hugo-version&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;7.4&lt;/span&gt; 修改&lt;code&gt;Hugo version&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;然后点击&lt;code&gt;Environment&lt;/code&gt;,将HUGO_VERSION版本修改为和本地一致的版本.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;hugo_version.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;将网站改为中英双文之后新建post报错&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;8&lt;/span&gt; 将网站改为中英双文之后,新建&lt;code&gt;post&lt;/code&gt;报错&lt;/h1&gt;
&lt;p&gt;暂时没有找到好的解决办法.现在的问题是,使用&lt;code&gt;new_post()&lt;/code&gt;创建新的博客,默认的根路径就在&lt;code&gt;content\en&lt;/code&gt;中,但是默认的打开路径又在&lt;code&gt;content\zh&lt;/code&gt;中.所以无法解决.现在只能使用copy其他博客新建来解决了.&lt;/p&gt;
&lt;div id=&#34;新建blog的yaml如下&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;8.1&lt;/span&gt; 新建blog的&lt;code&gt;YAML&lt;/code&gt;如下:&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;---
title: test
author: Xiaotao Shen
date: &amp;#39;2019-10-13&amp;#39;
slug: &amp;#39;&amp;#39;
categories:
  - R
tags:
  - Blog
image:
  caption: &amp;#39;&amp;#39;
  focal_point: &amp;#39;&amp;#39;
output:
  blogdown::html_page:
    toc: true
    number_sections: true
---&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;常用的categories&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;8.2&lt;/span&gt; 常用的categories:&lt;/h2&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;docker&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;life&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;literature&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;Mass Spectrometry&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;omics&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;R&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;Study&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;常用的tags&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;8.3&lt;/span&gt; 常用的tags:&lt;/h2&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Academic&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;Biomarker discovery&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;Blog&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;Chinese&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;Data cleaning&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;Data processing&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;Github&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;life&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;Lipidomics&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;Metabolomics&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;Software&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;Source Thermes&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;Statistical analysis&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;如何在postmarkdown中插入emojis&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;9&lt;/span&gt; 如何在post(markdown)中插入Emojis&lt;/h1&gt;
&lt;p&gt;完整的emoji名单在这:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.webfx.com/tools/emoji-cheat-sheet/&#34; class=&#34;uri&#34;&gt;https://www.webfx.com/tools/emoji-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;输入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;I : heart : Academic : smile :&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;注意需要把emoji文字和两边的冒号之间的空格去除掉.&lt;/p&gt;
&lt;p&gt;显示:&lt;/p&gt;
&lt;p&gt;I ❤️ Academic 😄&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;如何在post中插入视频&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;10&lt;/span&gt; 如何在post中插入视频?&lt;/h1&gt;
&lt;div id=&#34;如何插入b站视频&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;10.1&lt;/span&gt; 如何插入B站视频?&lt;/h2&gt;
&lt;p&gt;参考下面帖子.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://fengxiao.ml/2018/12/27/133.html&#34; class=&#34;uri&#34;&gt;https://fengxiao.ml/2018/12/27/133.html&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;点开想要插入的视频,点击分享.然后点击&lt;code&gt;嵌入代码&lt;/code&gt;,复制代码,插入到markdown文件中即可.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;bilibili.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;但是直接嵌入的视频长宽不太好,所以需要手动调整.&lt;/p&gt;
&lt;p&gt;首先需要设置宽度位100%.并给其设置一个id.如下面我就设置ID位&lt;code&gt;test&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;iframe id=&amp;quot;test&amp;quot; src=&amp;quot;//player.bilibili.com/player.html?aid=23877090&amp;amp;cid=39940519&amp;amp;page=1&amp;quot; scrolling=&amp;quot;no&amp;quot; border=&amp;quot;0&amp;quot; frameborder=&amp;quot;no&amp;quot; framespacing=&amp;quot;0&amp;quot; allowfullscreen=&amp;quot;true&amp;quot; width=100%&amp;gt; &amp;lt;/iframe&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后需要在markdown中插入下面的JS代码:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
document.getElementById(&amp;quot;test&amp;quot;).style.height=document.getElementById(&amp;quot;test&amp;quot;).scrollWidth*0.76+&amp;quot;px&amp;quot;;
&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;iframe id=&#34;test&#34; src=&#34;//player.bilibili.com/player.html?aid=23877090&amp;amp;cid=39940519&amp;amp;page=1&#34; scrolling=&#34;no&#34; border=&#34;0&#34; frameborder=&#34;no&#34; framespacing=&#34;0&#34; allowfullscreen=&#34;true&#34; width=&#34;100%&#34;&gt;
&lt;/iframe&gt;
&lt;script type=&#34;text/javascript&#34;&gt;
document.getElementById(&#34;test&#34;).style.height=document.getElementById(&#34;test&#34;).scrollWidth*0.76+&#34;px&#34;;
&lt;/script&gt;
&lt;/div&gt;
&lt;div id=&#34;在markdown中&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;10.2&lt;/span&gt; 在markdown中&lt;/h2&gt;
&lt;p&gt;直接使用下面语句,插入到markdown中即可.&lt;/p&gt;
&lt;div id=&#34;a-video-from-your-staticimg-media-library&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;10.2.1&lt;/span&gt; A video from your static/img/ media library:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;{{&amp;lt; video library=&amp;quot;1&amp;quot; src=&amp;quot;my_video.mp4&amp;quot; controls=&amp;quot;yes&amp;quot; &amp;gt;}}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;a-video-within-a-pages-folder-e.g.-contentposthello&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;10.2.2&lt;/span&gt; A video within a page’s folder (e.g. content/post/hello/):&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;{{&amp;lt; video src=&amp;quot;my_video.mp4&amp;quot; controls=&amp;quot;yes&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;youtube&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;10.2.3&lt;/span&gt; Youtube:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;{{&amp;lt; youtube w7Ft2ymGmfc &amp;gt;}}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;vimeo&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;10.2.4&lt;/span&gt; Vimeo:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;{{&amp;lt; vimeo 146022717 &amp;gt;}}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;在rmarkdown中&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;10.3&lt;/span&gt; 在Rmarkdown中&lt;/h2&gt;
&lt;p&gt;使用&lt;code&gt;shortcode()&lt;/code&gt;函数.&lt;/p&gt;
&lt;div id=&#34;本地视频&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;10.3.1&lt;/span&gt; 本地视频&lt;/h3&gt;
&lt;p&gt;将视频放入在与post相同的文件夹中.&lt;/p&gt;
&lt;p&gt;然后插入下面语句(注意是要放在r代码框中):&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;blogdown::shortcode(&amp;quot;video&amp;quot;, src = &amp;quot;./test.mp4&amp;quot;)&lt;/code&gt;&lt;/pre&gt;












  


&lt;video autoplay loop &gt;
  &lt;source src=&#34;./test.mp4&#34; type=&#34;video/mp4&#34;&gt;
&lt;/video&gt;
&lt;/div&gt;
&lt;div id=&#34;youtube视频&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;10.3.2&lt;/span&gt; Youtube视频&lt;/h3&gt;
&lt;p&gt;使用下面语句可以插入视频.第二个是youtube视频ID.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;blogdown::shortcode(&amp;quot;youtube&amp;quot;, &amp;quot;p4liifrbK8w&amp;quot;)&lt;/code&gt;&lt;/pre&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/p4liifrbK8w&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;如何在post中插入icon&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;11&lt;/span&gt; 如何在post中插入icon?&lt;/h1&gt;
&lt;p&gt;直接使用HTML语句即可.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;i class=&amp;quot;fab fa-weixin&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示:&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fab fa-weixin&#34;&gt;&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;其中fab是这个网站:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://fontawesome.com/icons?d=gallery&#34; class=&#34;uri&#34;&gt;https://fontawesome.com/icons?d=gallery&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;找到你想要的icon之后,复制名字,替换掉即可.&lt;/p&gt;
&lt;p&gt;如果该网站没有,还可以使用下面的网站:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://getbootstrap.com/docs/3.3/components/&#34; class=&#34;uri&#34;&gt;https://getbootstrap.com/docs/3.3/components/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;输入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;i class=&amp;quot;fas fa-adobe&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示:&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-hourglass&#34;&gt;&lt;/i&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R可视化之小提琴图</title>
      <link>/post/r-violin/</link>
      <pubDate>Sat, 12 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/r-violin/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#基础小提琴图绘制&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1&lt;/span&gt; 基础小提琴图绘制&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#使用ggplot2包中的geom_violin函数.&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1.1&lt;/span&gt; 使用&lt;code&gt;ggplot2&lt;/code&gt;包中的&lt;code&gt;geom_violin()&lt;/code&gt;函数.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#将小提琴图水平展示&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.2&lt;/span&gt; 将小提琴图水平展示&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#小提琴图与箱型图同时展示&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.3&lt;/span&gt; 小提琴图与箱型图同时展示&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;本文翻译自“The graph gallery”网站,原帖文地址链接:&lt;a href=&#34;https://www.r-graph-gallery.com/95-violin-plot-with-ggplot2.html&#34; class=&#34;uri&#34;&gt;https://www.r-graph-gallery.com/95-violin-plot-with-ggplot2.html&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div id=&#34;基础小提琴图绘制&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1&lt;/span&gt; 基础小提琴图绘制&lt;/h2&gt;
&lt;div id=&#34;使用ggplot2包中的geom_violin函数.&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.1&lt;/span&gt; 使用&lt;code&gt;ggplot2&lt;/code&gt;包中的&lt;code&gt;geom_violin()&lt;/code&gt;函数.&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggplot2&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#构建数据
data &amp;lt;- data.frame(
  name = c( rep(&amp;quot;A&amp;quot;,500), rep(&amp;quot;B&amp;quot;,500), rep(&amp;quot;B&amp;quot;,500), rep(&amp;quot;C&amp;quot;,20), rep(&amp;#39;D&amp;#39;, 100)),
  value = c( rnorm(500, 10, 5), rnorm(500, 13, 1), rnorm(500, 18, 1), rnorm(20, 25, 4), rnorm(100, 12, 1) )
)

head(data)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   name     value
## 1    A 14.586213
## 2    A  8.547782
## 3    A 17.655333
## 4    A  5.494113
## 5    A 15.576023
## 6    A 12.404492&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Most basic violin chart
p &amp;lt;- 
  ggplot(data, aes(x = name, y = value, fill = name)) + 
  geom_violin() +
  theme_bw()

p&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-12-R-violin-plot/index_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;div id=&#34;数据格式&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.1.1&lt;/span&gt; 数据格式&lt;/h4&gt;
&lt;p&gt;注意在使用&lt;code&gt;geom_violin()&lt;/code&gt;函数构建小提琴图时,数据格式为长数据(long format).每一行时一个观测.一共需要两列:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一个分类变量,用于X轴.需要为&lt;code&gt;factor&lt;/code&gt;格式.&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;数值型变量,用于Y轴.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;数据转换&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.1.2&lt;/span&gt; 数据转换&lt;/h4&gt;
&lt;p&gt;如果数据为宽数据格式,需要对其进行转变.可以使用&lt;code&gt;tidyr&lt;/code&gt;中的&lt;code&gt;pivot_longer()&lt;/code&gt;函数将其转变为长数据格式.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data_wide &amp;lt;- 
  iris[ , 1:4]
library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tidyverse&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Attaching packages ---------------------------------------------------------------------------------- tidyverse 1.2.1 --&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## v tibble  2.1.3     v purrr   0.3.2
## v tidyr   1.0.0     v dplyr   0.8.3
## v readr   1.3.1     v stringr 1.4.0
## v tibble  2.1.3     v forcats 0.4.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tibble&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tidyr&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;dplyr&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Conflicts ------------------------------------------------------------------------------------- tidyverse_conflicts() --
## x dplyr::filter() masks stats::filter()
## x dplyr::lag()    masks stats::lag()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data_long &amp;lt;- 
  data_wide %&amp;gt;% 
  tidyr::pivot_longer(cols = everything(), 
                      names_to = &amp;quot;variable&amp;quot;, values_to = &amp;quot;value&amp;quot;)
head(data_long)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 2
##   variable     value
##   &amp;lt;chr&amp;gt;        &amp;lt;dbl&amp;gt;
## 1 Sepal.Length   5.1
## 2 Sepal.Width    3.5
## 3 Petal.Length   1.4
## 4 Petal.Width    0.2
## 5 Sepal.Length   4.9
## 6 Sepal.Width    3&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)

data_long %&amp;gt;% 
  ggplot(., aes(variable, value)) +
  geom_violin(aes(fill = variable)) +
  theme_bw()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-12-R-violin-plot/index_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;将小提琴图水平展示&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.2&lt;/span&gt; 将小提琴图水平展示&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
library(tidyverse)
  iris[ , 1:4] %&amp;gt;% 
  tidyr::pivot_longer(cols = everything(), 
                      names_to = &amp;quot;variable&amp;quot;,
                      values_to = &amp;quot;value&amp;quot;) %&amp;gt;% 
  ggplot(., aes(variable, value)) +
  geom_violin(aes(fill = variable, colour = variable)) +
  theme_bw() +
    theme(legend.position = &amp;quot;none&amp;quot;) +
    coord_flip()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-12-R-violin-plot/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;小提琴图与箱型图同时展示&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.3&lt;/span&gt; 小提琴图与箱型图同时展示&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
library(tidyverse)
  iris[ , 1:4] %&amp;gt;% 
  tidyr::pivot_longer(cols = everything(), 
                      names_to = &amp;quot;variable&amp;quot;,
                      values_to = &amp;quot;value&amp;quot;) %&amp;gt;% 
  ggplot(., aes(variable, value)) +
  geom_violin(aes(fill = variable, colour = variable), width = 1.4) +
    geom_boxplot(fill = NA, width = 0.1, colour = &amp;quot;grey&amp;quot;) +
  theme_bw() +
    theme(legend.position = &amp;quot;none&amp;quot;) +
    coord_flip()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: position_dodge requires non-overlapping x intervals&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-12-R-violin-plot/index_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R可视化之桑吉图</title>
      <link>/post/r-sankey/</link>
      <pubDate>Sat, 12 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/r-sankey/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/d3/d3.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/sankey/sankey.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/sankeyNetwork-binding/sankeyNetwork.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#使用networkd3包构建桑吉图&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1&lt;/span&gt; 使用&lt;code&gt;networkD3&lt;/code&gt;包构建桑吉图&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#基础桑吉图绘制&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1.1&lt;/span&gt; 基础桑吉图绘制&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#另外一个例子&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1.2&lt;/span&gt; 另外一个例子&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#使用ggalluvial包绘制桑吉图&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1.3&lt;/span&gt; 使用&lt;code&gt;ggalluvial&lt;/code&gt;包绘制桑吉图&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;本文翻译自“The graph gallery”网站,原帖文地址链接:&lt;a href=&#34;https://www.r-graph-gallery.com/sankey-diagram.html&#34; class=&#34;uri&#34;&gt;https://www.r-graph-gallery.com/sankey-diagram.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;桑吉图(sankey diagram)使用来研究同一个变量在其不同分类中的比例或者说是流动的.实体(或者说是节点,node)一般使用长方形或者文字来表示.箭头和弧线用来表示在他们之间的流动.&lt;/p&gt;
&lt;div id=&#34;使用networkd3包构建桑吉图&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1&lt;/span&gt; 使用&lt;code&gt;networkD3&lt;/code&gt;包构建桑吉图&lt;/h2&gt;
&lt;div id=&#34;基础桑吉图绘制&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.1&lt;/span&gt; 基础桑吉图绘制&lt;/h3&gt;
&lt;p&gt;可以使用两种格式的数据进行桑吉图绘制:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;connection data frame(一共三列),可以理解为长数据.&lt;/li&gt;
&lt;li&gt;关联矩阵(incidence matrix),可以理解为宽数据.&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;使用connection-data-frame&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.1.1&lt;/span&gt; 使用connection data frame&lt;/h4&gt;
&lt;p&gt;connection data frame至少需要两列,分别为source和target.第三列可以用来说明该connection的数值.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(networkD3)
library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tidyverse&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Attaching packages ------------------------------------------------------------------------ tidyverse 1.2.1 --&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## v ggplot2 3.2.1     v purrr   0.3.2
## v tibble  2.1.3     v dplyr   0.8.3
## v tidyr   1.0.0     v stringr 1.4.0
## v readr   1.3.1     v forcats 0.4.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggplot2&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tibble&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tidyr&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;dplyr&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Conflicts --------------------------------------------------------------------------- tidyverse_conflicts() --
## x dplyr::filter() masks stats::filter()
## x dplyr::lag()    masks stats::lag()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;links &amp;lt;- data.frame(
  source = c(&amp;quot;group_A&amp;quot;,&amp;quot;group_A&amp;quot;, &amp;quot;group_B&amp;quot;, &amp;quot;group_C&amp;quot;, &amp;quot;group_C&amp;quot;, &amp;quot;group_E&amp;quot;), 
  target = c(&amp;quot;group_C&amp;quot;,&amp;quot;group_D&amp;quot;, &amp;quot;group_E&amp;quot;, &amp;quot;group_F&amp;quot;, &amp;quot;group_G&amp;quot;, &amp;quot;group_H&amp;quot;), 
  value = c(2,3, 2, 3, 1, 3)
  )
head(links)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    source  target value
## 1 group_A group_C     2
## 2 group_A group_D     3
## 3 group_B group_E     2
## 4 group_C group_F     3
## 5 group_C group_G     1
## 6 group_E group_H     3&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##构建connection data frame中所有nodes的data frame
nodes &amp;lt;- data.frame(
  name = c(as.character(links$source), 
  as.character(links$target)) %&amp;gt;% unique()
)

#然后我们需要将每个node的名字代替为其在node data frame中的位置index,注意是要从哦开始计算.
links$IDsource &amp;lt;- match(links$source, nodes$name) - 1 
links$IDtarget &amp;lt;- match(links$target, nodes$name) - 1

#开始创建桑吉图
p &amp;lt;- networkD3::sankeyNetwork(
  Links = links,
  Nodes = nodes,
  Source = &amp;quot;IDsource&amp;quot;,
  Target = &amp;quot;IDtarget&amp;quot;,
  Value = &amp;quot;value&amp;quot;,
  NodeID = &amp;quot;name&amp;quot;,
  sinksRight = FALSE
)
p&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;sankeyNetwork html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;links&#34;:{&#34;source&#34;:[0,0,1,2,2,3],&#34;target&#34;:[2,4,3,5,6,7],&#34;value&#34;:[2,3,2,3,1,3]},&#34;nodes&#34;:{&#34;name&#34;:[&#34;group_A&#34;,&#34;group_B&#34;,&#34;group_C&#34;,&#34;group_E&#34;,&#34;group_D&#34;,&#34;group_F&#34;,&#34;group_G&#34;,&#34;group_H&#34;],&#34;group&#34;:[&#34;group_A&#34;,&#34;group_B&#34;,&#34;group_C&#34;,&#34;group_E&#34;,&#34;group_D&#34;,&#34;group_F&#34;,&#34;group_G&#34;,&#34;group_H&#34;]},&#34;options&#34;:{&#34;NodeID&#34;:&#34;name&#34;,&#34;NodeGroup&#34;:&#34;name&#34;,&#34;LinkGroup&#34;:null,&#34;colourScale&#34;:&#34;d3.scaleOrdinal(d3.schemeCategory20);&#34;,&#34;fontSize&#34;:7,&#34;fontFamily&#34;:null,&#34;nodeWidth&#34;:15,&#34;nodePadding&#34;:10,&#34;units&#34;:&#34;&#34;,&#34;margin&#34;:{&#34;top&#34;:null,&#34;right&#34;:null,&#34;bottom&#34;:null,&#34;left&#34;:null},&#34;iterations&#34;:32,&#34;sinksRight&#34;:false}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
图片时交互性的.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;使用关联矩阵&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.1.2&lt;/span&gt; 使用关联矩阵&lt;/h4&gt;
&lt;p&gt;关联矩阵时正方形或者长方形的.行名和列名分别为node的名称.每一个cell代表着两个node之间flow的数值.但是因为在&lt;code&gt;network3D&lt;/code&gt;中,只能使用长数据,因此其实就是将宽数据转换为长数据.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;另外一个例子&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.2&lt;/span&gt; 另外一个例子&lt;/h3&gt;
&lt;p&gt;我们使用桑吉图来展示科学家的移民或者说是流动情况.左边代表科学家的移出国,右边代表科学家的移进国.数据来自scientific publication(&lt;a href=&#34;https://onlinelibrary.wiley.com/doi/abs/10.1111/imre.12327&#34; class=&#34;uri&#34;&gt;https://onlinelibrary.wiley.com/doi/abs/10.1111/imre.12327&lt;/a&gt;).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#加载包
library(tidyverse)
library(networkD3)

# 读取数据
data &amp;lt;- 
  read.table(&amp;quot;https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/13_AdjacencyDirectedWeighted.csv&amp;quot;, header = TRUE)

# 讲数据转换为长数据
data_long &amp;lt;- data %&amp;gt;%
  rownames_to_column(var = &amp;quot;name&amp;quot;) %&amp;gt;%
  pivot_longer(cols = -name, names_to = &amp;quot;key&amp;quot;, values_to = &amp;quot;value&amp;quot;) %&amp;gt;% 
  filter(value &amp;gt; 0) %&amp;gt;% 
  as.data.frame()

colnames(data_long) &amp;lt;- 
  c(&amp;quot;source&amp;quot;, &amp;quot;target&amp;quot;, &amp;quot;value&amp;quot;)

data_long$target &amp;lt;- 
  paste(data_long$target, &amp;quot; &amp;quot;, sep = &amp;quot;&amp;quot;)

# 创建node data frame
nodes &amp;lt;- 
  data.frame(name = c(as.character(data_long$source),  
                      as.character(data_long$target)) %&amp;gt;% unique()
             ) %&amp;gt;% 
  arrange(name) %&amp;gt;% 
  as.data.frame()
 
data_long$IDsource = match(data_long$source, nodes$name) - 1 
data_long$IDtarget = match(data_long$target, nodes$name) - 1

# prepare colour scale
ColourScal &amp;lt;- &amp;#39;d3.scaleOrdinal() .range([&amp;quot;#FDE725FF&amp;quot;,&amp;quot;#B4DE2CFF&amp;quot;,&amp;quot;#6DCD59FF&amp;quot;,&amp;quot;#35B779FF&amp;quot;,&amp;quot;#1F9E89FF&amp;quot;,
&amp;quot;#26828EFF&amp;quot;,&amp;quot;#31688EFF&amp;quot;,&amp;quot;#3E4A89FF&amp;quot;,&amp;quot;#482878FF&amp;quot;,&amp;quot;#440154FF&amp;quot;])&amp;#39;

# Make the Network
sankeyNetwork(
  Links = data_long,
  Nodes = nodes,
  Source = &amp;quot;IDsource&amp;quot;,
  Target = &amp;quot;IDtarget&amp;quot;,
  Value = &amp;quot;value&amp;quot;,
  NodeID = &amp;quot;name&amp;quot;,
  sinksRight = FALSE,
  colourScale = ColourScal,
  nodeWidth = 40,
  fontSize = 13,
  nodePadding = 20
)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-2&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;sankeyNetwork html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-2&#34;&gt;{&#34;x&#34;:{&#34;links&#34;:{&#34;source&#34;:[0,0,0,0,0,2,2,2,2,2,2,4,6,6,6,8,8,10,10,12,12,12,12,12,12,13,13,13,13,13,16,16,18,18,18],&#34;target&#34;:[1,5,9,11,19,3,5,9,11,15,19,5,5,7,9,5,7,5,11,3,5,9,11,14,19,3,5,9,11,15,5,17,5,9,19],&#34;value&#34;:[3.142471,2.107883,0.540887,0.155988,0.673004,1.630997,0.601265,0.97306,0.333608,0.380388,0.869311,2.401476,1.762587,0.879198,3.627847,1.215929,0.276908,0.17037,0.190706,0.525881,1.390272,1.508008,0.34742,1.307907,4.902081,0.145264,0.468762,1.057904,0.278746,0.781316,0.60923,1.870501,0.449623,0.169274,0.927243]},&#34;nodes&#34;:{&#34;name&#34;:[&#34;Africa&#34;,&#34;Africa &#34;,&#34;East Asia&#34;,&#34;East.Asia &#34;,&#34;Europe&#34;,&#34;Europe &#34;,&#34;Latin America&#34;,&#34;Latin.America &#34;,&#34;North America&#34;,&#34;North.America &#34;,&#34;Oceania&#34;,&#34;Oceania &#34;,&#34;South Asia&#34;,&#34;South East Asia&#34;,&#34;South.Asia &#34;,&#34;South.East.Asia &#34;,&#34;Soviet Union&#34;,&#34;Soviet.Union &#34;,&#34;West Asia&#34;,&#34;West.Asia &#34;],&#34;group&#34;:[&#34;Africa&#34;,&#34;Africa &#34;,&#34;East Asia&#34;,&#34;East.Asia &#34;,&#34;Europe&#34;,&#34;Europe &#34;,&#34;Latin America&#34;,&#34;Latin.America &#34;,&#34;North America&#34;,&#34;North.America &#34;,&#34;Oceania&#34;,&#34;Oceania &#34;,&#34;South Asia&#34;,&#34;South East Asia&#34;,&#34;South.Asia &#34;,&#34;South.East.Asia &#34;,&#34;Soviet Union&#34;,&#34;Soviet.Union &#34;,&#34;West Asia&#34;,&#34;West.Asia &#34;]},&#34;options&#34;:{&#34;NodeID&#34;:&#34;name&#34;,&#34;NodeGroup&#34;:&#34;name&#34;,&#34;LinkGroup&#34;:null,&#34;colourScale&#34;:&#34;d3.scaleOrdinal() .range([\&#34;#FDE725FF\&#34;,\&#34;#B4DE2CFF\&#34;,\&#34;#6DCD59FF\&#34;,\&#34;#35B779FF\&#34;,\&#34;#1F9E89FF\&#34;,\n\&#34;#26828EFF\&#34;,\&#34;#31688EFF\&#34;,\&#34;#3E4A89FF\&#34;,\&#34;#482878FF\&#34;,\&#34;#440154FF\&#34;])&#34;,&#34;fontSize&#34;:13,&#34;fontFamily&#34;:null,&#34;nodeWidth&#34;:40,&#34;nodePadding&#34;:20,&#34;units&#34;:&#34;&#34;,&#34;margin&#34;:{&#34;top&#34;:null,&#34;right&#34;:null,&#34;bottom&#34;:null,&#34;left&#34;:null},&#34;iterations&#34;:32,&#34;sinksRight&#34;:false}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;/div&gt;
&lt;div id=&#34;使用ggalluvial包绘制桑吉图&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.3&lt;/span&gt; 使用&lt;code&gt;ggalluvial&lt;/code&gt;包绘制桑吉图&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ggalluvial&lt;/code&gt;包是&lt;code&gt;ggplot2&lt;/code&gt;的一个扩展包.可以用来绘制桑吉图.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##加载包
library(ggalluvial)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggalluvial&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## 使用示例数据
data(vaccinations)
head(vaccinations)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   freq           a subject    survey response
## 1   48 0.050367261       1 ms153_NSA   Always
## 2    9 0.009443861       2 ms153_NSA   Always
## 3   66 0.069254984       3 ms153_NSA   Always
## 4    1 0.001049318       4 ms153_NSA   Always
## 5   11 0.011542497       5 ms153_NSA   Always
## 6    1 0.001049318       6 ms153_NSA   Always&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;levels(vaccinations$response) &amp;lt;- rev(levels(vaccinations$response))
ggplot(vaccinations,
       aes(x = survey, 
           y = freq,
           stratum = response, 
           alluvium = subject,
           fill = response, 
           label = response)) +
  scale_x_discrete(expand = c(.1, .1)) +
  ggalluvial::geom_flow() +
  labs(x = &amp;quot;&amp;quot;, y = &amp;quot;&amp;quot;) +
  ggalluvial::geom_stratum(alpha = .5) +
  geom_text(stat = &amp;quot;stratum&amp;quot;, size = 3) +
  theme_bw() +
  theme(legend.position = &amp;quot;none&amp;quot;, 
        plot.background = element_blank(), 
        panel.border = element_blank(), 
        panel.grid = element_blank(), 
        axis.ticks = element_blank(), 
        axis.text.y = element_blank()) +
  ggtitle(&amp;quot;vaccination survey responses at three points in time&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-10-12-r-sankey/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;我们在对该包做一个详细的讲解.&lt;/p&gt;
&lt;div id=&#34;冲积图alluvial-diagrams的结构&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.3.1&lt;/span&gt; 冲积图(Alluvial diagrams)的结构&lt;/h4&gt;
&lt;p&gt;使用&lt;code&gt;ggalluvial&lt;/code&gt;包绘制的图称之为冲积图(Alluvial diagrams).我们以上面的例子图为例,来进行解释.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;X轴代表着数据流动的分类.比如上图中,一共有三类,也就是ms153_NSA,ms432_NSA和ms460_NSA.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;而X轴的每一类又会分为不同的分组,称之为地层(strata).在我们这个例子中,每一类都分成了四组,Missing,Never,Sometimes和Always.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;然后我们再看每一列,每一列的每一个分组都会被图形分割,这称之为冲积(alluvia).在这个例子中,每个冲积的宽度(也就是在Y轴上range)代表着分类的该组分到下一个分类某个分组的数据的多少.当然,冲积的颜色用来代表不同的分类.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;两个相邻的分类之间的连接的冲积称之为flow.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们对这个图的结构进行详细的理解之后,我们在来看如何使用&lt;code&gt;galluvial&lt;/code&gt;包绘制冲积图.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;所需要的数据类型&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.3.2&lt;/span&gt; 所需要的数据类型&lt;/h4&gt;
&lt;p&gt;跟&lt;code&gt;network3D&lt;/code&gt;包一样,&lt;code&gt;ggalluvial&lt;/code&gt;包也可以使用宽数据和长数据.我们使用&lt;code&gt;UCBAdmissions&lt;/code&gt;数据为例进行说明.&lt;/p&gt;
&lt;div id=&#34;宽数据&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.3.2.1&lt;/span&gt; 宽数据&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;UCBAdmissions&lt;/code&gt;数据一共有4列.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>pregnancy project文献阅读总结</title>
      <link>/post/pregnancy-project/</link>
      <pubDate>Fri, 11 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/pregnancy-project/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#google-key-work-search&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; Google key work search&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#urinary-metabolic-variation-analysis-during-pregnancy-and-application-in-gestational-diabetes-mellitus-and-spontaneous-abortion-biomarker-discovery&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1&lt;/span&gt; Urinary metabolic variation analysis during pregnancy and application in Gestational Diabetes Mellitus and spontaneous abortion biomarker discovery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#metabolic-profiling-of-pregnancy-cross--sectional-and-longitudinal-evidence&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.2&lt;/span&gt; Metabolic profiling of pregnancy: cross- sectional and longitudinal evidence&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#maternal-urinary-metabolic-signatures-of-fetal-growth-and-associated-clinical-and-environmental-factors-in-the-inma-study&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.3&lt;/span&gt; Maternal urinary metabolic signatures of fetal growth and associated clinical and environmental factors in the INMA study&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#结论&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.3.1&lt;/span&gt; 结论&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#study-population&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.3.2&lt;/span&gt; Study population&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#definition-of-the-fetal-and-birth-measurements&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.3.3&lt;/span&gt; Definition of the fetal and birth measurements&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#variants-in-the-fetal-genome-near-pro-inflammatory-cytokine-genes-on-2q13-associate-with-gestational-duration&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.4&lt;/span&gt; Variants in the fetal genome near pro-inflammatory cytokine genes on 2q13 associate with gestational duration&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#定义&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.4.1&lt;/span&gt; 定义&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#一些pregnancy公开数据库&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.4.2&lt;/span&gt; 一些pregnancy公开数据库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#文章总结&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.4.3&lt;/span&gt; 文章总结:&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;google-key-work-search&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; Google key work search&lt;/h1&gt;
&lt;div id=&#34;urinary-metabolic-variation-analysis-during-pregnancy-and-application-in-gestational-diabetes-mellitus-and-spontaneous-abortion-biomarker-discovery&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1&lt;/span&gt; Urinary metabolic variation analysis during pregnancy and application in Gestational Diabetes Mellitus and spontaneous abortion biomarker discovery&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6384939/pdf/41598_2019_Article_39259.pdf&#34; class=&#34;uri&#34;&gt;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6384939/pdf/41598_2019_Article_39259.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;LC-MS urine metabolomics, 50 health pregant women. 3 time points. Age, BMI, parity and gravity (引力). Additionally, urine metabolomics was applied for early prediction of two pregnancy complications(并发症), gestational diabetes mellitus(妊娠期糖尿病) and spontaneous abortion(自然流产).&lt;/p&gt;
&lt;p&gt;Our results suggested that during normal pregnancy progression, pathways of &lt;strong&gt;steroid hormone biosynthesis and tyrosine metabolism&lt;/strong&gt; were signifcantly regulated.&lt;/p&gt;
&lt;p&gt;First, second and third trimester:&lt;/p&gt;
&lt;p&gt;妊娠期是指受孕后至分娩前的生理时期，属生理学名词，亦称怀孕期。自成熟卵受精后至胎儿娩出，一般为266天左右。为便于计算，妊娠通常是从末次月经第一天算起，足月妊娠约为280天(40周)。在妊娠期间母体的新陈代谢、消化系统、呼吸系统、血管系统、神经系统、内分泌系统、生殖系统、骨关节韧带及乳房均发生相应的改变。妊娠期全过程共分为3个时期：妊娠13周末以前称早期妊娠(First trimester)；第14～27周末称中期妊娠(Second trimester)；第28周及其后称晚期妊娠(Third trimester)。&lt;/p&gt;
&lt;p&gt;MetPA pathway analysis showed that steroid hormone biosynthesis was upregulated in healthy controls during pregnancy with a high impact. Tyrosine metabolism was down-regulated with less impact (Fig. 2c).&lt;/p&gt;
&lt;p&gt;BMI and other clinical factor correlation with metabolome.&lt;/p&gt;
&lt;p&gt;Waters ACQUITY H-class LC system coupled with an LTQ-Orbitrap mass spectrometer (Thermo Fisher Scientific, Villebon-sur-Yvette, France).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;It is also RPLC column&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Waters HSS C18 column (3.0 × 100 mm, 1.7 μm) at a flow rate of 0.3 ml/min. Mobile&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;metabolic-profiling-of-pregnancy-cross--sectional-and-longitudinal-evidence&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2&lt;/span&gt; Metabolic profiling of pregnancy: cross- sectional and longitudinal evidence&lt;/h2&gt;
&lt;p&gt;The aim of this study is to comprehensively characterise the maternal systemic metabolism across a wide range of metabolic and inflammatory measures in both cross-sectional and longitudinal settings coupled with with replication.&lt;/p&gt;
&lt;p&gt;This is a serum based study.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;maternal-urinary-metabolic-signatures-of-fetal-growth-and-associated-clinical-and-environmental-factors-in-the-inma-study&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.3&lt;/span&gt; Maternal urinary metabolic signatures of fetal growth and associated clinical and environmental factors in the INMA study&lt;/h2&gt;
&lt;p&gt;使用NMR仪器采集urine数据.一共两个cohort.两个时间点(fisrt and third trimesters of gestation).用metabolome来预测fetal growth和birth weight.&lt;/p&gt;
&lt;p&gt;测到的东西包括:branched-chain amino acids(支链氨基酸);isoleucine(异亮氨酸),valine(颉氨酸),leucine(亮氨酸),alanine(丙氨酸)和3 hydroxyisobutyrate(羟基异丁酸)(metabolite of valine).&lt;/p&gt;
&lt;p&gt;另外一大类就是:pregnancy-related hormone by-products of estrogens and progesterone, and the methyl donor choline.
Physical activity, as well as other modifiable lifestyle/clinical factors, such as coffee consumption, vitamin D intake, and smoking, were identified as potential sources of metabolic variation during pregnancy.First trimester metabolic phenotypes could not predict reproducibly weight at later stages of development.&lt;/p&gt;
&lt;div id=&#34;结论&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.3.1&lt;/span&gt; 结论&lt;/h3&gt;
&lt;p&gt;Significant reproducible maternal urinary metabolic signatures of fetal growth and birth weight are identified for the first time and linked to modifiable lifestyle factors. This novel approach to prenatal(产前的) screening, combining multiple risk factors, present a great opportunity to personalize pregnancy management management and reduce newborn disease risk in later life.&lt;/p&gt;
&lt;p&gt;NMR采集数据,一共1695 metabolic phenotypes.&lt;/p&gt;
&lt;p&gt;This is good study.&lt;/p&gt;
&lt;p&gt;Exploratory metabolic profiling offers a powerful means of capturing systems-level information that re- flects both maternal genetic and environmental influ- ences, hence helping to elucidate metabolic disturbances and pathways associated with fetal outcomes.&lt;/p&gt;
&lt;p&gt;This study aimed to (1) characterize the maternal urinary metabolome throughout pregnancy, (2) identify maternal metabolic signatures of fetal growth in two subcohorts, (3) explain potential sources of variation in metabolic profiles based on lifestyle and clinical data, and finally (4) to determine the individ- ual importance of metabolic signatures versus other maternal&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;study-population&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.3.2&lt;/span&gt; Study population&lt;/h3&gt;
&lt;p&gt;The women were interviewed twice during pregnancy (in the first and third trimesters of gestation) to obtain infor- mation about their sociodemographic characteristics and lifestyle variables. The urine samples were collected in the same interview in the morning (spot samples). The urine samples were collected in the same interview in the morning (spot samples). 所以一共有两个时间点.分别在first trimester and third trimesters.时间为12.4 ± 1.2 and 33.9 ± 1.3 weeks.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;definition-of-the-fetal-and-birth-measurements&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.3.3&lt;/span&gt; Definition of the fetal and birth measurements&lt;/h3&gt;
&lt;p&gt;Fetal growth scores or standard deviation scores (z- scores) were obtained using longitudinal growth curves calculated for each individual adjusting for constitutional factors known to affect fetal growth (i.e., maternal age, height, parity, pre-pregnancy weight, country of origin, father’s height, and fetal sex).&lt;/p&gt;
&lt;p&gt;Fetal growth score是使用longitudinal growth curve来计算的,然后adjust了一些已知的能够影响fetal growth的因素,如maternal age(母亲的年龄),height(母亲的身高),parity(已生胎数),pre-pregnancy weight(怀孕前的体重),country of origin(地区),father’s height(母亲的身高),and fetal sex(胎儿性别).&lt;/p&gt;
&lt;p&gt;这个值是一个标准化后的值.(standard deviation scores,z-scores).&lt;/p&gt;
&lt;p&gt;没有矫正后的z-score.&lt;/p&gt;
&lt;p&gt;Anthropometric measures at birth included body weight and placental weight and were scaled to z-scores by subtracting the mean and dividing by the standard deviation. For further details on phenotype measurements and covariate definitions, such as gestational age, see Additional file 1: Supplementary Methods and a pre- vious article on the INMA cohort [13].
Metabolic&lt;/p&gt;
&lt;p&gt;用来预测胎儿体重(fetal birth weight)的几个参数(从超声波测量而来):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Fiparietal diameter(BPD):胎儿双顶径.为两侧顶骨隆突间的距离,是胎头最大横径,临床用B型超声检测此值判断胎儿大小,妊娠足月时平均长度约9.3cm.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Femur length(FL):胎儿股骨长度.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Head circumference (AC):胎儿头围.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Abdominal circumference (AC):胎儿腹围.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;crown–rump length:胎儿的头臀长.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;date of conception:妊娠期.&lt;/p&gt;
&lt;p&gt;Gestational age(孕龄)was established by using crown–rump length when the calculated date of conception differed from the fetal age based on the subject’s self-reported last menstrual period by 7 days or more.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;variants-in-the-fetal-genome-near-pro-inflammatory-cytokine-genes-on-2q13-associate-with-gestational-duration&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.4&lt;/span&gt; Variants in the fetal genome near pro-inflammatory cytokine genes on 2q13 associate with gestational duration&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;早产(preterm birth),是指在妊娠不足37周出生的婴儿.早产与婴儿之后的神经发育延迟(neurodevelopmental delay),脑瘫(cerebral palsy),糖尿病(diabetes),高血压以及精神疾病(psychiatric disorders)等都有关.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;过期生产(postterm birth),是指在妊娠超过42周之后出生的婴儿.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在发达国家,preterm和postterm都有大约5%-10%的比例.在低收入和中等收入国家,preterm的比例比高收入国家更高.&lt;/p&gt;
&lt;p&gt;Although timing of parturition is influenced by many non-genetic risk factors, including parity(母亲的胎数), maternal stress(母亲的紧张状态), smoking, urogenital infection(泌尿系统的感染), educational attainment(受教育程度), and socioeconomic status(社会经济程度), there is compelling evidence for a substantial genetic impact.&lt;/p&gt;
&lt;div id=&#34;定义&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.4.1&lt;/span&gt; 定义&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;preterm: &amp;lt; 34 weeks&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;preterm: &amp;lt; 34 weeks&lt;/li&gt;
&lt;li&gt;postterm: &amp;gt;= 42 weeks&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;一些pregnancy公开数据库&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.4.2&lt;/span&gt; 一些pregnancy公开数据库&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Early Growth Genetics Consortium &lt;a href=&#34;https://egg-consortium.org/&#34; class=&#34;uri&#34;&gt;https://egg-consortium.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Integrative Psychiatric Research (iPSYCH) study &lt;a href=&#34;https://ipsych.au.dk/about-ipsych/&#34; class=&#34;uri&#34;&gt;https://ipsych.au.dk/about-ipsych/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Genomic and Proteomic Network for Preterm Birth Research (GPN) &lt;a href=&#34;https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/study.cgi?study_id=phs000714.v1.p1&#34; class=&#34;uri&#34;&gt;https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/study.cgi?study_id=phs000714.v1.p1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些数据库大部分是关于基因组学的,可以到时候考虑用它做个验证什么的.&lt;/p&gt;
&lt;p&gt;parturition(分娩)&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;文章总结&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.4.3&lt;/span&gt; 文章总结:&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Modern Statistics for Modern Biology:第一章</title>
      <link>/post/2019-10-10-modern-statistics-for-modern-biology/</link>
      <pubDate>Thu, 10 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-10-10-modern-statistics-for-modern-biology/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#离散变量discrete-data的生成模型&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.1&lt;/span&gt; 离散变量(discrete data)的生成模型&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;是斯坦福大学统计系教授&lt;a href=&#34;&#34;&gt;Susan Holmes&lt;/a&gt;&lt;/p&gt;
&lt;div id=&#34;离散变量discrete-data的生成模型&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1&lt;/span&gt; 离散变量(discrete data)的生成模型&lt;/h3&gt;
&lt;p&gt;在分子生物学中,在很多情况下都会产生离散变量.&lt;/p&gt;
&lt;div id=&#34;本章目标&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1.1&lt;/span&gt; 1.1 本章目标&lt;/h4&gt;
&lt;p&gt;在本章中,我们将会:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;学会对于一个给定模型如何获取其所有可能结果的概率(probabilities),并且将理论的频率(frequencies)和实际数据观测到的进行比较.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;探索一个完整的例子,如何使用泊松分布来分析表位(epitope)检测.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如何使用几种常见的非常有用的离散变量生成模型:泊松,二项式和多项式.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;学会使用R函数来计算概率和计数罕见实例.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;从指定的分布生成随机数.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;一个真实例子&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1.2&lt;/span&gt; 1.2 一个真实例子&lt;/h4&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>组学数据分析常见方法总结</title>
      <link>/post/2019-10-10-data-analysis-omics/</link>
      <pubDate>Thu, 10 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-10-10-data-analysis-omics/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#correlation-analysis&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.1&lt;/span&gt; Correlation analysis&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;correlation-analysis&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1&lt;/span&gt; Correlation analysis&lt;/h3&gt;
&lt;p&gt;将组学变量(gene,protein,metabolite,clinical factor)进行相关性分析,得到他们之间的相关性,注意需要选择合适的相关性计算方法,并进行多重比较矫正(FDR,BH等).&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>purrr教程1:Overview</title>
      <link>/post/2019-10-08-purrr-1-overview/</link>
      <pubDate>Tue, 08 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-10-08-purrr-1-overview/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#安装&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.1&lt;/span&gt; 安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#使用&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.2&lt;/span&gt; 使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#map-family&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.3&lt;/span&gt; Map family&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code&gt;purrr&lt;/code&gt;是一个提供函数编程的工具箱.&lt;/p&gt;
&lt;div id=&#34;安装&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1&lt;/span&gt; 安装&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;purrr&lt;/code&gt;包含在&lt;code&gt;tidyverse&lt;/code&gt;种,因此如果你已经安装了他,不需要再安装.当然也可以单独安装&lt;code&gt;purrr&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;### 安装tidyverse
install.packages(&amp;quot;tidyverse&amp;quot;)
### 单独安装purrr
install.packages(&amp;quot;purrr&amp;quot;)

### 安装开发板
devtools::install_github(&amp;quot;tidyverse/purrr&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;使用&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.2&lt;/span&gt; 使用&lt;/h3&gt;
&lt;p&gt;使用一个简单的例子来展示&lt;code&gt;purrr&lt;/code&gt;的作用.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(purrr)

mtcars %&amp;gt;%
  split(x = ., f = .$cyl) %&amp;gt;% # 按照cyl将mtcars数据分割为数个list
  map(.x = ., .f = ~ lm(mpg ~ wt, data = .)) %&amp;gt;%#对每一个list数据,简历mpg和wt的线性模型
  map(.x = ., .f = summary) %&amp;gt;%##对每一个线性模型进行summary
  map_dbl(.x = , .f = &amp;quot;r.squared&amp;quot;)##提取出来R2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##         4         6         8 
## 0.5086326 0.4645102 0.4229655&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这个例子显示了和R中相同功能的base函数的优点.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;map-family&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.3&lt;/span&gt; Map family&lt;/h3&gt;
&lt;p&gt;map函数对输入的vector的每一个元素进行&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>tidyverse select使用总结</title>
      <link>/post/tidyverse-select/</link>
      <pubDate>Tue, 08 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/tidyverse-select/</guid>
      <description>


&lt;p&gt;test&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>文献解读:Longitudinal multi-omics of host– microbe dynamics in prediabetes</title>
      <link>/post/longitudinal-multi-omics-of-host-microbe-dynamics-in-prediabetes/</link>
      <pubDate>Tue, 08 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/longitudinal-multi-omics-of-host-microbe-dynamics-in-prediabetes/</guid>
      <description>



</description>
    </item>
    
    <item>
      <title>ggplot2拼图工具:patchwork</title>
      <link>/post/ggplot2-patchwork/</link>
      <pubDate>Mon, 09 Sep 2019 00:00:00 +0000</pubDate>
      <guid>/post/ggplot2-patchwork/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#安装&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.1&lt;/span&gt; 安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#使用&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.2&lt;/span&gt; 使用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;推荐一个用来拼图的包:&lt;code&gt;patchwork&lt;/code&gt;.作者是&lt;a href=&#34;https://github.com/thomasp85&#34;&gt;Thomas Lin Pedersen&lt;/a&gt;.使用方法非常简洁,具体使用方法可以查看其帮助文档.他的思想跟&lt;code&gt;tidyverse&lt;/code&gt;非常像,直接使用&lt;code&gt;+&lt;/code&gt;,&lt;code&gt;-&lt;/code&gt;等符号来进行图的拼接.举个例子说明.&lt;/p&gt;
&lt;div id=&#34;安装&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1&lt;/span&gt; 安装&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;patchwork&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;devtools::install_github(&amp;quot;thomasp85/patchwork&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Skipping install of &amp;#39;patchwork&amp;#39; from a github remote, the SHA1 (36b49187) has not changed since last install.
##   Use `force = TRUE` to force installation&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;使用&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.2&lt;/span&gt; 使用&lt;/h3&gt;
&lt;p&gt;拼图有两种不同的含义:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;像一幅图中不同的panel一样,他们分别是独立的;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;反映同样的数据信息,将几个图拼成一个panel.比如对于一个散点图,在其右侧和左侧分别添加其对应的变量的密度分布图等.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(patchwork)
library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tidyverse&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Attaching packages ---------------------------------------------------------------------------------- tidyverse 1.2.1 --&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## v ggplot2 3.2.1     v purrr   0.3.2
## v tibble  2.1.3     v dplyr   0.8.3
## v tidyr   1.0.0     v stringr 1.4.0
## v readr   1.3.1     v forcats 0.4.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggplot2&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tibble&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tidyr&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;dplyr&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Conflicts ------------------------------------------------------------------------------------- tidyverse_conflicts() --
## x dplyr::filter() masks stats::filter()
## x dplyr::lag()    masks stats::lag()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot1 &amp;lt;- 
  ggplot(mtcars, aes(x = mpg, y = disp)) +
  geom_point() +
  theme_bw() +
  scale_x_continuous(limits = c(10, 35)) +
  scale_y_continuous(limits = c(50, 500))
  
plot2 &amp;lt;- 
  ggplot(mtcars, aes(x = mpg)) +
  geom_histogram() +
  theme_bw() +
  scale_x_continuous(limits = c(10, 35), 
                     name = NULL, labels = NULL, breaks = NULL) +
  scale_y_continuous(expand = expand_scale(mult = c(0, .05))) +
  theme(panel.border = element_blank(),
        axis.line = element_line(colour = &amp;quot;black&amp;quot;),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank())

plot3 &amp;lt;- 
  ggplot(mtcars, aes(x = disp)) +
  geom_histogram() +
  theme_bw() +
  coord_flip() +
    scale_x_continuous(limits = c(150, 500), 
                     name = NULL, labels = NULL, breaks = NULL) +
  scale_y_continuous(expand = expand_scale(mult = c(0, .05))) +
  theme(panel.border = element_blank(),
        axis.line = element_line(colour = &amp;quot;black&amp;quot;),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank())&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我们画出了汽车&lt;code&gt;mpg&lt;/code&gt;和&lt;code&gt;disp&lt;/code&gt;的关系,然后想在这个散点图上方和右方分别画上&lt;code&gt;disp&lt;/code&gt;和&lt;code&gt;mpg&lt;/code&gt;的分布图.这时候需要注意的是,需要确定&lt;code&gt;xlim&lt;/code&gt;和&lt;code&gt;ylim&lt;/code&gt;的发明,从而使其坐标轴能够精确对上.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot &amp;lt;- 
{plot2 + plot_spacer() + plot_layout(ncol = 2, widths = c(3, 1))} -
  {plot1 + plot3 + plot_layout(ncol = 2, widths = c(3, 1))} +
  plot_layout(ncol = 1, heights = c(1,3))
plot&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Removed 2 rows containing missing values (geom_bar).&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Removed 12 rows containing non-finite values (stat_bin).

## Warning: Removed 2 rows containing missing values (geom_bar).&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-09-09-ggplot2-patchwork/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;plot_spacer()&lt;/code&gt;函数用来生成一个空白图片.&lt;code&gt;plot_layout()&lt;/code&gt;函数用来设置拼接图片的一些具体参数,如列数,行数,宽度或者高度比等.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;{}&lt;/code&gt;括起来的几个plot组成一个完整的新的plot.&lt;/p&gt;
&lt;p&gt;这里面需要注意的是&lt;code&gt;-&lt;/code&gt;.它是指该符号左右两侧当成两个新的图层进行拼接.&lt;/p&gt;
&lt;p&gt;具体使用方法可以参考作者github(&lt;a href=&#34;https://github.com/thomasp85/patchwork&#34; class=&#34;uri&#34;&gt;https://github.com/thomasp85/patchwork&lt;/a&gt;).&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;http://www.youtube.com/embed/9bZkp7q19f0?rel=0&#34; frameborder=&#34;0&#34; allowfullscreen&gt;
&lt;/iframe&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>如何修改ggplot2垂直square legend之间的距离</title>
      <link>/post/ggplot2-square-legend/</link>
      <pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate>
      <guid>/post/ggplot2-square-legend/</guid>
      <description>


&lt;p&gt;今天看到有人在讨论如何修改&lt;code&gt;ggplot2&lt;/code&gt;中垂直square legend之间的距离.原来想着&lt;code&gt;ggplot2&lt;/code&gt;中的&lt;code&gt;theme&lt;/code&gt;函数的&lt;code&gt;legend.key.height&lt;/code&gt;参数不就是来控制这个距离的吗?后来试了一下,还真的不行.&lt;/p&gt;
&lt;p&gt;先画出图来:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggplot2&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars, aes(x = factor(cyl))) +
  geom_bar(aes(fill = factor(cyl)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-09-04-ggplot2-square-legend/index_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;legend.key.height&lt;/code&gt;参数来设置:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars, aes(x = factor(cyl))) +
  geom_bar(aes(fill = factor(cyl))) +
  theme(legend.key.height = unit(4, &amp;quot;line&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-09-04-ggplot2-square-legend/index_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以看到每个key变高了,但是距离并没有变化.我们试试其他类型的legend,比如point.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars, aes(x = factor(cyl))) +
  geom_point(aes(colour = factor(cyl)), stat = &amp;quot;count&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-09-04-ggplot2-square-legend/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars, aes(x = factor(cyl))) +
  geom_point(aes(colour = factor(cyl)), stat = &amp;quot;count&amp;quot;) +
  theme(legend.key.height = unit(10, &amp;quot;mm&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-09-04-ggplot2-square-legend/index_files/figure-html/unnamed-chunk-3-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;从这幅图看的就非常的清楚了,每个legend的图像元素是由&lt;code&gt;key&lt;/code&gt;(背景)和指示元素组成的.&lt;code&gt;legend.key.height&lt;/code&gt;参数可以改变&lt;code&gt;key&lt;/code&gt;的高度,而指示元素则处在key的中间,对于square legend来说,他们其实是和&lt;code&gt;key&lt;/code&gt;背景重合的,所以&lt;code&gt;legend.key.height&lt;/code&gt;没有办法改变他们之间的距离.&lt;/p&gt;
&lt;p&gt;那如果确实有需要更改这个距离,怎么做呢?想到一个办法只能更改square指示元素的line的宽度(line颜色为白色),从而间接修改他们之间的距离.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars, aes(x = factor(cyl))) +
  geom_bar(aes(fill = factor(cyl)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-09-04-ggplot2-square-legend/index_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars, aes(x = factor(cyl))) +
  geom_bar(aes(fill = factor(cyl))) +
  theme(legend.key.size = unit(2, &amp;quot;line&amp;quot;)) +
  guides(fill = guide_legend(override.aes = list(size = 3, colour = &amp;quot;white&amp;quot;)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-09-04-ggplot2-square-legend/index_files/figure-html/unnamed-chunk-4-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;欢迎大家由其他办法的留言讨论.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>生物统计学学习:逻辑回归</title>
      <link>/post/2019-08-31-logistic-regression/</link>
      <pubDate>Sat, 31 Aug 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-08-31-logistic-regression/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#sigmoid函数logistic-function&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.1&lt;/span&gt; Sigmoid函数(logistic function)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;逻辑回归(logistic regression)其实就是线性回归的一种.只是对于逻辑回归的因变量,是非连续变量的0和1,通过Sigmoid函数将其映射为连续性变量.逻辑回归虽然叫回归,但是预测给出的值只是0和1,因此其实是属于分类.&lt;/p&gt;
&lt;div id=&#34;sigmoid函数logistic-function&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1&lt;/span&gt; Sigmoid函数(logistic function)&lt;/h3&gt;
&lt;p&gt;sigmoid函数的方程如下:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[f(x) = \frac{1}{1+e^{-x}}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其函数曲线我们可以通过模拟给出:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
x &amp;lt;- seq(-10, 10, by = 0.1)
y &amp;lt;- 1/(1+exp(-x))

ggplot(data.frame(x,y), aes(x, y)) +
  geom_line(colour = &amp;quot;red&amp;quot;) +
  geom_vline(xintercept = 0) +
  theme_bw()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-08-31-logistic-regression/index_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以看出来sigmoid函数是一个S型曲线.他的取值在[0,1]之间.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>生物统计学习:简单线性回归模型</title>
      <link>/post/2019-08-26-liner-regression/</link>
      <pubDate>Mon, 26 Aug 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-08-26-liner-regression/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#线性回归&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1&lt;/span&gt; 线性回归&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#简单线性回归&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1.1&lt;/span&gt; 简单线性回归&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#r2&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1.2&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#r2的假设检验&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1.3&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;的假设检验&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#矫正r2adjusted-r2&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1.4&lt;/span&gt; 矫正&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;(&lt;span class=&#34;math inline&#34;&gt;\(adjusted R^2\)&lt;/span&gt;)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#系数的假设检验&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1.5&lt;/span&gt; 系数的假设检验&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#r语言进行线性回归&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1.6&lt;/span&gt; R语言进行线性回归&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;线性回归&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1&lt;/span&gt; 线性回归&lt;/h2&gt;
&lt;p&gt;使用直线拟合的方法得到拟合直线称之为线性回归(linear regression).如果只有一个自变量,则称之为简单线性回归(simple),有多个自变量,则称之为多元线性回归(multiple regression).这两个模型都必须满足变量是连续性变量,如果变量为分类变量,也可以进行线性回归,称之为逻辑回归(logistic regression).&lt;/p&gt;
&lt;div id=&#34;简单线性回归&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.1&lt;/span&gt; 简单线性回归&lt;/h3&gt;
&lt;p&gt;我们举个例子,年龄和身高是否有线性关系,是否可以使用年龄来预测身高呢?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;age &amp;lt;- 18:29
height &amp;lt;- 
  c(76.1,77,78.1,78.2,78.8,79.7,79.9,81.1,81.2,81.8,82.8,83.5)
data &amp;lt;- 
  data.frame(age, height, 
             stringsAsFactors = FALSE)
library(ggplot2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggplot2&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;(
plot &amp;lt;- 
ggplot(data, aes(age, height)) +
  geom_point() +
  theme_bw()
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-08-26-liner-regression/index_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;我们画出散点图之后,可以看出age和height呈比较明显的线性关系.&lt;/p&gt;
&lt;p&gt;那我们怎么用一条直线去拟合(fit)数据呢?我们使用的就是最小平方差法(least square).&lt;/p&gt;
&lt;p&gt;那么最简单的拟合办法是什么呢?也就是直接使用所有人的height的平均值去拟合.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot +
  geom_hline(yintercept = mean(data$height))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-08-26-liner-regression/index_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;那么怎么评价一条直线对数据拟合的好坏呢?这时候就需要引入另外一个概念,残差(residuls).残差也就是真实值和拟合值之间差值:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[residual = y_i - y_i^{&amp;#39;}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其中&lt;span class=&#34;math inline&#34;&gt;\(y_i\)&lt;/span&gt;是真实值,而&lt;span class=&#34;math inline&#34;&gt;\(y_i{&amp;#39;}\)&lt;/span&gt;是模型预测值.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot +
  geom_hline(yintercept = mean(data$height)) +
  geom_segment(aes(x = data$age[1], y = data$height[1], xend = data$age[1], yend = mean(data$height)), colour = &amp;quot;red&amp;quot;, arrow = arrow()) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/zh/post/2019-08-26-liner-regression/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;从定义可以看到,残差有正有负.为了表示一条拟合直线对数据拟合的程度的好坏,我们将残差平方然后加和,从而得到&lt;strong&gt;残差平方和(sum of squared residuals)&lt;/strong&gt;,该值就可以用来表示一条直线对数据的拟合的好坏.拟合的越好,该值越小,拟合的越差,该值越大.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;其实使用残差平方和作为损失函数得到的最后的方程或者说模型并不一定是最优解,但是好处是方便后面求解(求导)并且解是唯一的.另外还有使用残差绝对值之和作为损失函数进行求解.以后再慢慢介绍.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[sum \quad of \quad squared \quad residuals = \sum_{i=1}^n(y_i-y_i^{&amp;#39;})^2\]&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意,该值是有量纲的,只能比较同一组数据不同拟合直线的好坏,而不能比较不同数据之间的拟合的好坏.后面会介绍&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;那么怎样找到一个最好的拟合直线呢?我们可以将这条线(平均值)进行旋转,每条直线都会有截距(intersect)和斜率(slope)两个参数,对于每一条直线,我们都会计算其残差平方和.&lt;/p&gt;
&lt;p&gt;最后,我们会得到一系列的截距和斜率组合以及他们所对应的残差平方和.我们可以简单的理解,直接选取残差平方和最小的参数组合即可(实际情况更为复杂一些).从而得到最佳的参数组合.这也是为什么这种方法称之为’least square’的原因.&lt;/p&gt;
&lt;p&gt;那么如何估量一个拟合直线的好坏呢?这时候就需要引入&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;的概念.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;r2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.2&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;首先,我们计算使用身高平均值拟合直线的残差平方和,称之为&lt;span class=&#34;math inline&#34;&gt;\(SS(mean)\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[SS(mean) = (data - mean)^2\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;同时,我们知道方差(Var(mean))等于残差平方和除以样本个数:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[Var(mean) = \frac{SS(mean)}{n}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;然后,按照同样的方法,我们计算拟合直线的残差平方和,称之为&lt;span class=&#34;math inline&#34;&gt;\(SS(fit)\)&lt;/span&gt;.同时,我们也可以计算出来拟合直线的方差(Var(fit)).&lt;/p&gt;
&lt;p&gt;可以看到,拟合直线得到的残差平方和要比平均值得到的要小,也就是说,将年龄因素考虑进去之后,身高的方差有一部分能够被年龄所解释.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;告诉我们年龄可以解释多少比例的身高的方差.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[R^2 = \frac{Var(mean) - Var(fit)}{Var(mean)} = \frac{SS(mean) - SS(fit)}{SS(mean)} = 1 - \frac{ SS(fit)}{SS(mean)}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;从公式可以看出,如果一条直线正好穿过所有的数据点,那么&lt;span class=&#34;math inline&#34;&gt;\(SS(fit)=0\)&lt;/span&gt;,这时候&lt;span class=&#34;math inline&#34;&gt;\(R^2=1\)&lt;/span&gt;.而如果身高和年龄完全没有关系,则&lt;span class=&#34;math inline&#34;&gt;\(R^2 = 0\)&lt;/span&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;需要注意的是,&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;的大小并不具有统计学意义,我们可以想象,如果只有两个点,那么必定有一条直线通过他们,因此&lt;span class=&#34;math inline&#34;&gt;\(SS(fit)\)&lt;/span&gt;为0,但是很明显这样的fit是没有意义的,得到的&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;也并不能说明两个变量之间真是的关系.这说明了样本的数量也同样重要,因此,我们需要对&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;进行统计学假设检验,得到其统计学显著性,也就是p value.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;r2的假设检验&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.3&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;的假设检验&lt;/h3&gt;
&lt;p&gt;首先,我们需要明白&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;的含义,我们上面已经讨论过了,&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;指的是变量x能够解释变量y的方差的比例.比如上面的例子,&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;为0.99,说明年龄可以解释99%的身高的方差.&lt;/p&gt;
&lt;p&gt;这时候,需要引入一个统计量,F:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[F = \frac{(Var(mean) - Var(fit))/(p_{fit}-p_{mean})}{Var(fit)/(n-p_{fit})} = \frac{(SS(mean) - SS(fit))/(p_{fit}-p_{mean})}{SS(fit)/(n-p_{fit})} = \frac{\frac{(SS(mean) - SS(fit))}{p_{fit}-p_{mean}}} {\frac{SS(fit)}{n-p_{fit}}}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;也就是说,F等于变量x能够解释变量y的方差除以变量x不能够解释变量y的方差.&lt;/p&gt;
&lt;p&gt;而&lt;span class=&#34;math inline&#34;&gt;\((n-p_{fit})/(p_{fit}-p_{mean})\)&lt;/span&gt;则称之为自由度(degrees of freedoms).自由度的定义以后再详细解释.&lt;/p&gt;
&lt;p&gt;其中&lt;span class=&#34;math inline&#34;&gt;\(p_{fit}\)&lt;/span&gt;代表回归方程中参数的数目,比如一元线性方程中,只有两个参数(intercept和slop),所以&lt;span class=&#34;math inline&#34;&gt;\(p_{fit}=2\)&lt;/span&gt;.&lt;span class=&#34;math inline&#34;&gt;\(p_{mean}\)&lt;/span&gt;代表平均值直线的参数个数,在一元线性方程中,为1.n是数据集的样本个数.&lt;/p&gt;
&lt;p&gt;因此,&lt;span class=&#34;math inline&#34;&gt;\(p_{fit}-p_{mean}\)&lt;/span&gt;代表的含义是该拟合模型与平均值模型相比,多出来的参数的个数.在简单线性回归中,多出来的就是slope.对于多元线性回归,比如,两个自变量预测一个因变量,则这时候&lt;span class=&#34;math inline&#34;&gt;\(p_{fit}=3\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;我们再来看分母,为什么需要使用&lt;span class=&#34;math inline&#34;&gt;\(SS(fit)\)&lt;/span&gt;除以&lt;span class=&#34;math inline&#34;&gt;\(n-p_{fit}\)&lt;/span&gt;呢?因为我们知道模型越复杂(参数越多),你就需要更多的点去拟合.比如,对于两个点的一元一次方程,只需要两个点即可(两点确定一条直线).而对于二元一次方程,则需要三个点去拟合.&lt;/p&gt;
&lt;p&gt;这时候我们再来看分子分母分别代表什么意义.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;分子:拟合模型多出来的参数能够解释的方差(变异).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;分母:拟合模型多出来的参数不能够解释的方差(变异).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这样我们拿到F值以后,怎么计算p value呢?其实就是使用permutation test的方法.&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;随机产生与数据集样本数相同数目的数据集.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对其进行拟合并计算每一组随机数据的F值.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;产生大量的随机F值,并得到随机F值的分布.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;拿到随机F值的分布,p value就等于大于真实F值的数目除以随机F值的总数目.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;当然,所有随机F值的分布其实是符合F分布的,拿到了F分布,就可以计算p value.F分布以后再详细介绍.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;矫正r2adjusted-r2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.4&lt;/span&gt; 矫正&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;(&lt;span class=&#34;math inline&#34;&gt;\(adjusted R^2\)&lt;/span&gt;)&lt;/h3&gt;
&lt;p&gt;什么是矫正&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;呢?我们从&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;定义可以看到,如果我们增加了拟合模型的变量个数,因为&lt;span class=&#34;math inline&#34;&gt;\(SS(mean)\)&lt;/span&gt;是固定的,因此&lt;span class=&#34;math inline&#34;&gt;\(SS(fit)\)&lt;/span&gt;都会减小,所以导致&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;变大,从而造成过拟合(over fitting).因此,我们需要对模型选入的变量个数做一个惩罚,这就是&lt;span class=&#34;math inline&#34;&gt;\(adjusted \quad R^2\)&lt;/span&gt;.以后再详细解释.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;系数的假设检验&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.5&lt;/span&gt; 系数的假设检验&lt;/h3&gt;
&lt;p&gt;同样的,我们可以看到,上面是对&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;做假设检验,当然我们也需要对每个变量的系数(包括intersect)进行假设验证,在多元回归中尤其重要,我们会在以后进行详细解释.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;r语言进行线性回归&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.6&lt;/span&gt; R语言进行线性回归&lt;/h3&gt;
&lt;p&gt;R语言中的&lt;code&gt;lm()&lt;/code&gt;函数可以用来进行线性回归.使用方法如下:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;lm_fit &amp;lt;- 
  lm(height ~ age, data)
summary(lm_fit)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = height ~ age, data = data)
## 
## Residuals:
##      Min       1Q   Median       3Q      Max 
## -0.27238 -0.24248 -0.02762  0.16014  0.47238 
## 
## Coefficients:
##             Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept)  64.9283     0.5084  127.71  &amp;lt; 2e-16 ***
## age           0.6350     0.0214   29.66 4.43e-11 ***
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## Residual standard error: 0.256 on 10 degrees of freedom
## Multiple R-squared:  0.9888, Adjusted R-squared:  0.9876 
## F-statistic:   880 on 1 and 10 DF,  p-value: 4.428e-11&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;summary中提供了该线性回归的大部分内容.其中&lt;code&gt;Multiple R-squared&lt;/code&gt;其实就是&lt;code&gt;R-squared&lt;/code&gt;&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;,而&lt;code&gt;Adjusted R-Squred&lt;/code&gt;主要是对多元线性回归时对多个变量进行矫正,因为当变量数目增加的时候,&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;总会变小,因此需要对其进行矫正.对于简单线性回归来说.直接使用&lt;code&gt;Multiple R-squared&lt;/code&gt;即可,而对于多元线性回归来说,则需要使用&lt;code&gt;Adjusted R-Squred&lt;/code&gt;来衡量模型拟合的效果.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Markdown中输入数学公式</title>
      <link>/post/2019-08-25-math-markdown/</link>
      <pubDate>Sun, 25 Aug 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-08-25-math-markdown/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#如何插入公式&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.1&lt;/span&gt; 1. 如何插入公式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#上下标&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.2&lt;/span&gt; 2. 上下标&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#括号和分隔符&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.3&lt;/span&gt; 3. 括号和分隔符&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#分数&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.4&lt;/span&gt; 4. 分数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#开方&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.5&lt;/span&gt; 5. 开方&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#省略号&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.6&lt;/span&gt; 6. 省略号&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#矢量&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.7&lt;/span&gt; 7. 矢量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#积分&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.8&lt;/span&gt; 8. 积分&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#极限预算&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.9&lt;/span&gt; 9. 极限预算&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#累加累乘公式&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.10&lt;/span&gt; 10. 累加,累乘公式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#希腊字母&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.11&lt;/span&gt; 11. 希腊字母&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#运算符&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.12&lt;/span&gt; 12. 运算符&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#字体转换&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.13&lt;/span&gt; 13. 字体转换&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;在Markdown中可以方便的输入数学公式.现在将Markdown中数学公式总结一下.&lt;/p&gt;
&lt;div id=&#34;如何插入公式&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1&lt;/span&gt; 1. 如何插入公式&lt;/h3&gt;
&lt;p&gt;包括两种,一种是在行内插入,一种是独立公式(单独一行).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;行中插入公式(&lt;code&gt;$E = mc^2$&lt;/code&gt;): &lt;span class=&#34;math inline&#34;&gt;\(E = mc^2\)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;独立公式:&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;$$E = mc^2$$&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[E = mc^2\]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;上下标&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.2&lt;/span&gt; 2. 上下标&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;^&lt;/code&gt;上标,&lt;code&gt;_&lt;/code&gt;下标.如果上下标内容多于一个字符,需要使用&lt;code&gt;{}&lt;/code&gt;将其扩大为一个整体.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;例子&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$$ x^{y^z}=(1+{\rm e}^x)^{-2xy^w} $$&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[ x^{y^z}=(1+{\rm e}^x)^{-2xy^w} \]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;括号和分隔符&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.3&lt;/span&gt; 3. 括号和分隔符&lt;/h3&gt;
&lt;p&gt;()、[] 和 | 表示符号本身，使用 {} 来表示{} 。当要显示大号的括号或分隔符时，要用 和 命令。&lt;/p&gt;
&lt;p&gt;一些特殊的例子:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\langle&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\langle\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\rangle&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\rangle\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\lceil&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\rceil\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\lfloor&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\lfloor\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\lbrace&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\lbrace\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;例子&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$$ f(x,y,z) = 3y^2z \left( 3+\frac{7x+5}{1+y^2} \right) $$&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[ f(x,y,z) = 3y^2z \left( 3+\frac{7x+5}{1+y^2}\right) \]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;分数&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.4&lt;/span&gt; 4. 分数&lt;/h3&gt;
&lt;p&gt;通常使用  {分母} 命令产生一个分数，分数可嵌套。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;例子&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$$\frac{a-1}{b-1} \quad and \quad {a+1\over b+1}$$&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\frac{a-1}{b-1}\]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;开方&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.5&lt;/span&gt; 5. 开方&lt;/h3&gt;
&lt;p&gt;使用  命令输入开方。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;例子&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$$\sqrt{2} \quad and \quad \sqrt[n]{3}$$&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\sqrt{2} \quad and \quad \sqrt[n]{3}\]&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;其中.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;省略号&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.6&lt;/span&gt; 6. 省略号&lt;/h3&gt;
&lt;p&gt;数学公式中常见的省略号有两种，表示与文本底线对齐的省略号，表示与文本中线对齐的省略号。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;例子&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$$f(x_1,x_2,\ldots ,x_n) = x_1^2 + x_2^2 + \cdots + x_n^2$$&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[f(x_1,x_2,\ldots ,x_n) = x_1^2 + x_2^2 + \cdots + x_n^2\]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;矢量&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.7&lt;/span&gt; 7. 矢量&lt;/h3&gt;
&lt;p&gt;使用  来自动产生一个矢量。也可以使用 等命令自定义字母上方的符号。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;例子&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$$\vec{a} \cdot \vec{b}=0$$&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\vec{a} \cdot \vec{b}=0\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其中(&lt;span class=&#34;math inline&#34;&gt;\(\cdot\)&lt;/span&gt;).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;例子&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$$\overleftarrow{xy} \quad and \quad \overleftrightarrow{xy} \quad and \quad \overrightarrow{xy}$$&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\overleftarrow{xy} \quad and \quad \overleftrightarrow{xy} \quad and \quad \overrightarrow{xy}\]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;积分&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.8&lt;/span&gt; 8. 积分&lt;/h3&gt;
&lt;p&gt;使用 _积分下限^积分上限 {被积表达式} 来输入一个积分。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;例子&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$$\int_0^1 {x^2} \,{\rm d}x$$&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\int_0^1 {x^2} dx\]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;极限预算&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.9&lt;/span&gt; 9. 极限预算&lt;/h3&gt;
&lt;p&gt;使用 _{变量 表达式} 表达式 来输入一个极限。如有需求，可以更改 符号至任意符号。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;例子&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$$ \lim_{n \to +\infty} \frac{1}{n(n+1)} \quad and \quad \lim_{x\leftarrow{示例}} \frac{1}{n(n+1)} $$&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[ \lim_{n \to +\infty} \frac{1}{n(n+1)} \quad and \quad \lim_{x\leftarrow{示例}} \frac{1}{n(n+1)} \]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其中,都表示向右的箭头.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;例子&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$$\to \quad and \quad \rightarrow$$&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\to \quad and \quad \rightarrow\]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;累加累乘公式&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.10&lt;/span&gt; 10. 累加,累乘公式&lt;/h3&gt;
&lt;p&gt;使用 _{下标表达式}^{上标表达式} {累加表达式} 来输入一个累加。
与之类似，使用 来分别输入累乘、并集和交集。
此类符号在行内显示时上下标表达式将会移至右上角和右下角。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;例子&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$$\sum_{i=1}^n \frac{1}{i^2} \quad and \quad \prod_{i=1}^n \frac{1}{i^2} \quad and \quad \bigcup_{i=1}^{2} R$$&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\sum_{i=1}^n \frac{1}{i^2} \quad and \quad \prod_{i=1}^n \frac{1}{i^2} \quad and \quad \bigcup_{i=1}^{2} R\]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;希腊字母&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.11&lt;/span&gt; 11. 希腊字母&lt;/h3&gt;
&lt;p&gt;输入&lt;code&gt;\小写希腊字母英文全称&lt;/code&gt;和&lt;code&gt;\首字母大写希腊字母英文全称&lt;/code&gt;来分别输入小写和大写希腊字母。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;对于大写希腊字母与现有字母相同的，直接输入大写字母即可。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\alpha&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\alpha\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;A&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\beta&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;B&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(B\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\gamma&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\gamma\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Gamma&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\Gamma\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\delta&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\delta\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Delta&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\Delta\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\epsilon&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\epsilon\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;E&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(E\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\zeta&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\zeta\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Z&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(Z\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\eta&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\eta\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;H&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(H\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\theta&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\theta\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Theta&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\Theta\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\iota&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\iota\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;I&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(I\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\kappa&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\kappa\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;K&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\lambda&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\lambda\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Lambda&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\Lambda\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\mu&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;M&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(M\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\nu&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\nu\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;N&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\xi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\xi\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Xi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(Xi\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;o&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(o\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;O&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(O\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\pi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\pi\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Pi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\Pi\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\rho&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\rho\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;P&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\sigma&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sigma\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Sigma&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\Sigma\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\tau&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\tau\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;T&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\upsilon&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\upsilon\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Upsilon&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\Upsilon\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\phi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\phi\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Phi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\Phi\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\chi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\chi\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Chi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\Chi\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\psi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\psi\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Psi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\Psi\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\omega&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\omega\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Omega&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\Omega\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;运算符&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.12&lt;/span&gt; 12. 运算符&lt;/h3&gt;
&lt;div id=&#34;关系运算符&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.12.1&lt;/span&gt; (1) 关系运算符&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\pm&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\pm\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\times&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\times\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\div&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\div\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\mid&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\mid\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\nmid&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\nmid\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\cdot&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\cdot\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\circ&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\circ\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\ast&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\ast\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\bigodot&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\bigodot\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\bigotimes&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\bigotimes\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\bigoplus&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\bigoplus\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\leq&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\leq\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\geq&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\geq\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\neq&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\neq\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\approx&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\approx\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\equiv&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\equiv\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\sum&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sum\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\prod&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\prod\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\coprod&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\coprod\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\backslash&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\backslash\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;集合运算符&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.12.2&lt;/span&gt; (2) 集合运算符&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\emptyset&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\emptyset\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\in&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\in\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\notin&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\notin\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\subset&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\subset\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\supset&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\supset\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\subseteq&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\subseteq\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\supseteq&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\supseteq\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\bigcap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\bigcap\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\bigcup&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\bigcup\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\bigvee&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\bigvee\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\bigwedge&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\bigwedge\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\biguplus&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\biguplus\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;对数运算符&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.12.3&lt;/span&gt; (3) 对数运算符&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\log&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\log\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\lg&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\lg\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\ln&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\ln\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;三角运算符&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.12.4&lt;/span&gt; (4) 三角运算符&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;30^\circ&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(30^\circ\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\bot&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\bot\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\angle A&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\angle A\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\sin&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sin\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\cos&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\cos\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\csc&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\csc\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\sec&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sec\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\cot&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\cot\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;字体转换&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.13&lt;/span&gt; 13. 字体转换&lt;/h3&gt;
&lt;p&gt;若要对公式的某一部分字符进行字体转换，可以用&lt;code&gt;{\字体 {需转换的部分字符}}&lt;/code&gt;命令，其中 &lt;code&gt;\字体&lt;/code&gt; 部分可以参照下表选择合适的字体。一般情况下，公式默认为意大利体。&lt;/p&gt;
&lt;p&gt;示例中&lt;code&gt;全部大写&lt;/code&gt;的字体仅大写可用。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\rm&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\rm {Sample}\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;罗马体&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\it&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\it {Sample}\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;意大利斜体&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\bf&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\bf {Sample}\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;粗体&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Display Jupyter Notebooks with Academic</title>
      <link>/post/blogdown-instruction/</link>
      <pubDate>Thu, 04 Jul 2019 00:00:00 +0000</pubDate>
      <guid>/post/blogdown-instruction/</guid>
      <description>

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from IPython.core.display import Image
Image(&#39;https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;./academic_0_0.png&#34; alt=&#34;png&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(&amp;quot;Welcome to Academic!&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Welcome to Academic!
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;install-python-and-jupyter&#34;&gt;Install Python and Jupyter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.anaconda.com/distribution/#download-section&#34; target=&#34;_blank&#34;&gt;Install Anaconda&lt;/a&gt; which includes Python 3 and Jupyter notebook.&lt;/p&gt;

&lt;p&gt;Otherwise, for advanced users, install Jupyter notebook with &lt;code&gt;pip3 install jupyter&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;create-a-new-blog-post-as-usual-https-sourcethemes-com-academic-docs-managing-content-create-a-blog-post&#34;&gt;Create a new blog post &lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/#create-a-blog-post&#34; target=&#34;_blank&#34;&gt;as usual&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Run the following commands in your Terminal, substituting &lt;code&gt;&amp;lt;MY_WEBSITE_FOLDER&amp;gt;&lt;/code&gt; and &lt;code&gt;my-post&lt;/code&gt; with the file path to your Academic website folder and a name for your blog post (without spaces), respectively:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd &amp;lt;MY_WEBSITE_FOLDER&amp;gt;
hugo new  --kind post post/my-post
cd &amp;lt;MY_WEBSITE_FOLDER&amp;gt;/content/post/my-post/
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;create-or-upload-a-jupyter-notebook&#34;&gt;Create or upload a Jupyter notebook&lt;/h2&gt;

&lt;p&gt;Run the following command to start Jupyter within your new blog post folder. Then create a new Jupyter notebook (&lt;em&gt;New &amp;gt; Python Notebook&lt;/em&gt;) or upload a notebook.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;jupyter notebook
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;convert-notebook-to-markdown&#34;&gt;Convert notebook to Markdown&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;jupyter nbconvert Untitled.ipynb --to markdown --NbConvertApp.output_files_dir=.

# Copy the contents of Untitled.md and append it to index.md:
cat Untitled.md | tee -a index.md

# Remove the temporary file:
rm Untitled.md
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;edit-your-post-metadata&#34;&gt;Edit your post metadata&lt;/h2&gt;

&lt;p&gt;Open &lt;code&gt;index.md&lt;/code&gt; in your text editor and edit the title etc. in the &lt;a href=&#34;https://sourcethemes.com/academic/docs/front-matter/&#34; target=&#34;_blank&#34;&gt;front matter&lt;/a&gt; according to your preference.&lt;/p&gt;

&lt;p&gt;To set a &lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/#featured-image&#34; target=&#34;_blank&#34;&gt;featured image&lt;/a&gt;, place an image named &lt;code&gt;featured&lt;/code&gt; into your post&amp;rsquo;s folder.&lt;/p&gt;

&lt;p&gt;For other tips, such as using math, see the guide on &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;writing content with Academic&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Display Jupyter Notebooks with Academic</title>
      <link>/post/jupyter/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <guid>/post/jupyter/</guid>
      <description>

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from IPython.core.display import Image
Image(&#39;https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;./academic_0_0.png&#34; alt=&#34;png&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(&amp;quot;Welcome to Academic!&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Welcome to Academic!
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;install-python-and-jupyter&#34;&gt;Install Python and Jupyter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.anaconda.com/distribution/#download-section&#34; target=&#34;_blank&#34;&gt;Install Anaconda&lt;/a&gt; which includes Python 3 and Jupyter notebook.&lt;/p&gt;

&lt;p&gt;Otherwise, for advanced users, install Jupyter notebook with &lt;code&gt;pip3 install jupyter&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;create-a-new-blog-post-as-usual-https-sourcethemes-com-academic-docs-managing-content-create-a-blog-post&#34;&gt;Create a new blog post &lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/#create-a-blog-post&#34; target=&#34;_blank&#34;&gt;as usual&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Run the following commands in your Terminal, substituting &lt;code&gt;&amp;lt;MY_WEBSITE_FOLDER&amp;gt;&lt;/code&gt; and &lt;code&gt;my-post&lt;/code&gt; with the file path to your Academic website folder and a name for your blog post (without spaces), respectively:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd &amp;lt;MY_WEBSITE_FOLDER&amp;gt;
hugo new  --kind post post/my-post
cd &amp;lt;MY_WEBSITE_FOLDER&amp;gt;/content/post/my-post/
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;create-or-upload-a-jupyter-notebook&#34;&gt;Create or upload a Jupyter notebook&lt;/h2&gt;

&lt;p&gt;Run the following command to start Jupyter within your new blog post folder. Then create a new Jupyter notebook (&lt;em&gt;New &amp;gt; Python Notebook&lt;/em&gt;) or upload a notebook.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;jupyter notebook
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;convert-notebook-to-markdown&#34;&gt;Convert notebook to Markdown&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;jupyter nbconvert Untitled.ipynb --to markdown --NbConvertApp.output_files_dir=.

# Copy the contents of Untitled.md and append it to index.md:
cat Untitled.md | tee -a index.md

# Remove the temporary file:
rm Untitled.md
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;edit-your-post-metadata&#34;&gt;Edit your post metadata&lt;/h2&gt;

&lt;p&gt;Open &lt;code&gt;index.md&lt;/code&gt; in your text editor and edit the title etc. in the &lt;a href=&#34;https://sourcethemes.com/academic/docs/front-matter/&#34; target=&#34;_blank&#34;&gt;front matter&lt;/a&gt; according to your preference.&lt;/p&gt;

&lt;p&gt;To set a &lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/#featured-image&#34; target=&#34;_blank&#34;&gt;featured image&lt;/a&gt;, place an image named &lt;code&gt;featured&lt;/code&gt; into your post&amp;rsquo;s folder.&lt;/p&gt;

&lt;p&gt;For other tips, such as using math, see the guide on &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;writing content with Academic&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2017年的第一篇博客</title>
      <link>/post/2017-02-12-firstblog2017/</link>
      <pubDate>Sun, 01 Jan 2017 00:00:00 +0000</pubDate>
      <guid>/post/2017-02-12-firstblog2017/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#我的2016年&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; &lt;strong&gt;我的2016年&lt;/strong&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#效率低下&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1&lt;/span&gt; 效率低下&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#懒惰&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.2&lt;/span&gt; 懒惰&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#没有明确的目标&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.3&lt;/span&gt; 没有明确的目标&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#我的2017年计划&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; &lt;strong&gt;我的2017年计划&lt;/strong&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#文章&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.1&lt;/span&gt; 文章&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#统计&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.2&lt;/span&gt; 统计&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#r&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.3&lt;/span&gt; R&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#python&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3&lt;/span&gt; python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#健身&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4&lt;/span&gt; 健身&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;我的2016年&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; &lt;strong&gt;我的2016年&lt;/strong&gt;&lt;/h1&gt;
&lt;hr /&gt;
&lt;p&gt;现在想想，其实整个2016年真的是没什么收获，科研上没什么进展，技能上也没有什么提升，原本准备要学习的python，也在1-2个月之后，彻底的放弃了。现在可能只记得一点点皮毛了。那么2016年的问题到底在哪里呢？总结来说，可以分为下面几部分。&lt;/p&gt;
&lt;div id=&#34;效率低下&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1&lt;/span&gt; 效率低下&lt;/h2&gt;
&lt;p&gt;不得不承认，我的学习效率真的是出奇的低下，从我上高中以来其实都是这样了，做什么事情都不能够专心致志。用高中同学利弟的话来说，是“玩的时候没有好好玩，学习的时候没有好好学习”，用最近学到的一句话是“用战术上的勤奋来掩饰战略上的懒惰”。具体表现就是精神不集中，开小车。&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;懒惰&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2&lt;/span&gt; 懒惰&lt;/h2&gt;
&lt;p&gt;现在真的是越来越懒惰了，很多事情都没有以前有激情了，可能是我老了？&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;没有明确的目标&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.3&lt;/span&gt; 没有明确的目标&lt;/h2&gt;
&lt;p&gt;上半年其实还是挺有目标的，但是到了下半年，目标突然就失焦了。定下一个目标，努力去实现，或者定下一个计划，努力去完成。&lt;/p&gt;
&lt;p&gt;上面就是我2016年的一个简短的总结了，当然不是只有这些问题，还有很多其他的问题，但是可能都是一些细节的问题，就不过多去写了。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;我的2017年计划&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; &lt;strong&gt;我的2017年计划&lt;/strong&gt;&lt;/h1&gt;
&lt;hr /&gt;
&lt;div id=&#34;文章&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.1&lt;/span&gt; 文章&lt;/h2&gt;
&lt;p&gt;很幸运的是自己还是发了两篇文章，但是都是很低分的，虽然够我毕业，但是其实自己知道并不足够，因此2017年的主要任务就是好好看文献，做实验，寻找思路，争取能够再发一篇高质量的你文章。&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;统计&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.2&lt;/span&gt; 统计&lt;/h2&gt;
&lt;p&gt;毕竟我的课题和统计关系很大，自己的统计数据功底很差，希望可以在看文献以及资料的同时，好好学习一下统计，机器学习等知识，再课题中能够真正运用到。&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;r&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.3&lt;/span&gt; R&lt;/h2&gt;
&lt;p&gt;R是一个好东西，需要再深入的学习，主要是结合着统计去学习，并及时做好总计，以有道笔记和博客作为平台去记录自己的学习，即作为笔记也作为总结。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;python&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;3&lt;/span&gt; python&lt;/h1&gt;
&lt;p&gt;这个放到最后，是因为可能很难有很多时间去学习了，希望前面几条比较顺利，才会有时间去做。&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;健身&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;4&lt;/span&gt; 健身&lt;/h1&gt;
&lt;p&gt;经过别人的提醒，还有这一项，确实自己看起来太瘦了，尤其是上半身，连衬衫和西装都撑不起来，等天气开始暖和了，就开始跑步，然后等中期答辩结束之后，考虑办一张健身卡，去健身！&lt;/p&gt;
&lt;p&gt;最后的最后，提醒自己，最后一年，加油！&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>MetCleaning instruction</title>
      <link>/post/2016-11-25-metcleaning/</link>
      <pubDate>Fri, 25 Nov 2016 00:00:00 +0000</pubDate>
      <guid>/post/2016-11-25-metcleaning/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#introduction&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1&lt;/span&gt; &lt;strong&gt;Introduction&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#installation-and-help&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.2&lt;/span&gt; &lt;strong&gt;Installation and help&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#data-cleaning&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.3&lt;/span&gt; &lt;strong&gt;Data cleaning&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#statistical-analysis&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.4&lt;/span&gt; &lt;strong&gt;Statistical analysis&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;introduction&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1&lt;/span&gt; &lt;strong&gt;Introduction&lt;/strong&gt;&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;em&gt;MetCleaning&lt;/em&gt; provides an integrated and automatic pipeline for data cleaning and statistical analysis of large scale mass spectrometry (MS) based-metabolomic data. It includes missing value (MV) filtering and imputation, zero value filtering, data normalization, data integration, data quality assessment, univariate statistical analysis, multivariate statistical analysis such as PCA and PLS-DA, potential marker selection and show. This document describes how to use the integrated functions, &lt;em&gt;MetClean&lt;/em&gt; and &lt;em&gt;MetStat&lt;/em&gt; in &lt;em&gt;MetCleaning&lt;/em&gt; utilizing demo data.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/images/metcleaning/workflow%20for%20instruction.jpg&#34; alt=&#34;Figure1 Workflow of MetCleaning&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Figure1 Workflow of &lt;em&gt;MetCleaning&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;installation-and-help&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.2&lt;/span&gt; &lt;strong&gt;Installation and help&lt;/strong&gt;&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;em&gt;MetCleaning&lt;/em&gt; is published in github &lt;a href=&#34;https://github.com/jaspershen/MetCleaning&#34;&gt;(link)&lt;/a&gt;. So you can install it via to github.&lt;/p&gt;
&lt;p&gt;code 1: Installation of &lt;em&gt;MetCleaning&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;##pcaMethods and impute should be installed form bioconductor
##pcaMethos
source(&amp;quot;http://bioconductor.org/biocLite.R&amp;quot;)
    biocLite(&amp;quot;pcaMethods&amp;quot;)
##impute
source(&amp;quot;http://bioconductor.org/biocLite.R&amp;quot;)
    biocLite(&amp;quot;impute&amp;quot;)
 if(!require(devtools)) {
  install.packages(&amp;quot;devtools&amp;quot;)
 }
 library(devtools)
 install_github(&amp;quot;jaspershen/MetCleaning&amp;quot;)
 library(MetCleaning)
 help(package = &amp;quot;MetCleaning&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data-cleaning&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.3&lt;/span&gt; &lt;strong&gt;Data cleaning&lt;/strong&gt;&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;Data cleaning is integrated as a function named as &lt;em&gt;MetClean&lt;/em&gt; in &lt;em&gt;MetCleaning&lt;/em&gt;. We use the demo data as the example. Copy the code below and paste in you R console.&lt;/p&gt;
&lt;p&gt;code 2: Demo data of &lt;em&gt;MetClean&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;##demo data
data(data, package = &amp;quot;MetCleaning&amp;quot;)
data(sample.information, package = &amp;quot;MetCleaning&amp;quot;)
##demo work directory
dir.create(&amp;quot;Demo for MetCleaning&amp;quot;)
setwd(&amp;quot;Demo for MetCleaning&amp;quot;)
##write files
write.csv(data, &amp;quot;data.csv&amp;quot;, row.names = FALSE)
write.csv(sample.information , &amp;quot;sample.information.csv&amp;quot;, row.names = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The demo data have been added in your work directory and organized in you work directory as Figure 2 shows. It contains two files, “data.csv” and “sample.information.csv”.
1. “data.csv” is the metabolomic dataset you want to process. Rows are features and columns are feature abundance of samples and information of features. The information of features must contain “name” (feature name), “mz” (mass to change ratio) and “rt” (retention time). Other information of features are optional, for example “isotopes” and “adducts”. The name of sample can contain “.”, but cannot contain “-” and space. And the start of sample name cannot be number. &lt;strong&gt;For example, “A210.a” and “A210a” are valid, and “210a” or “210-a” are invalid.&lt;/strong&gt;
2. “sample.information.csv” is sample information for metabolomic dataset. Column 1 is “sample.name” which is the names of subject and QC samples. Please confirm that the sample names in “sample.information.csv” and “data.csv” are completely same. Column 2 is “injection.order” which is the injection order of QC and subject samples. Column 3 is “class”, which is used to distinguish “QC” and “Subject” samples. Column 4 is “batch” to provide acquisition batch information for samples. Column 5 is “group”, which is used to label the group of subject sample, for example, “control” and “case”. The “group” of QC samples is labeled as “QC”.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/images/metcleaning/data%20organisation.jpg&#34; alt=&#34;Figure2 Data organisation of MetCleaning&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Figure2 Data organisation of MetCleaning&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Then you can run &lt;em&gt;MetClean&lt;/em&gt; function to do data cleaning of data. All the arguments of &lt;em&gt;MetClean&lt;/em&gt; can be found in the other functions in &lt;em&gt;MetCleaning&lt;/em&gt;. You can use &lt;em&gt;help(package = “MetCleaning”)&lt;/em&gt; to see the help page of &lt;em&gt;MetCleaning&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;code 3: Running of &lt;em&gt;MetClean&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;##demo data
MetClean(polarity = &amp;quot;positive&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Running results of &lt;em&gt;MetClean&lt;/em&gt;
1.Missing or zero values filtering. In the missing or zero value filtering step, if there are samples which beyond the threshold you set, you should decide to filter them or not. We recommend to remove all of them as Figure 3 shows.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/images/metcleaning/mv%20filter.jpg&#34; alt=&#34;Figure3 Missing or zero value filtering&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Figure3 Missing or zero value filtering&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;2.Sample filtering. In the QC or subject sample filtering step (based on PCA), if there are samples which beyond the threshold you set, you should decide to filter them or not. We don’t recommend to remove them as Figure 4 shows, because they should be consired combined other information.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/images/metcleaning/sample%20filter.jpg&#34; alt=&#34;Figure4 Sample filtering&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Figure4 Sample filtering&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;3.Output files. Output files of &lt;em&gt;MetClean&lt;/em&gt; are listed as Figure 5 shows.
(1) “1MV overview”, “2MV filter”, “3Zero overview” and “4Zero filter” are missing and zero values filtering information.
(2) “5QC outlier filter” and “6Subject outlier filter” are sample filtering based on PCA information.
(3) “7Normalization result” is the data normalization information for each batch.
(4) “8Batch effect” is the batch effect both in before and after data cleaning.
(5) “9metabolite plot” is the scatter plot for each feature.
(6) “10Data overview” is the overview of data.
(7) “11RSD overview” is the RSD distribution for each batch both before and after data cleaning.
(8) &lt;strong&gt;“data_after_pre.csv”, “qc.info.csv” and “subject.info”&lt;/strong&gt; are the data and sample information after data cleaning.
(9) “intermediate” is the intermediate data during processing.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/images/metcleaning/output%20files%20of%20MetClean.jpg&#34; alt=&#34;Figure5 Output files of MetClean&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Figure5 Output files of &lt;em&gt;MetClean&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;statistical-analysis&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.4&lt;/span&gt; &lt;strong&gt;Statistical analysis&lt;/strong&gt;&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;Data statistical analysis is integrated as a function named as &lt;em&gt;MetStat&lt;/em&gt; in &lt;em&gt;MetCleaning&lt;/em&gt;. We use the demo data as the example. &lt;strong&gt;Please note that now &lt;em&gt;MetStat&lt;/em&gt; can only process two class data.&lt;/strong&gt; Copy the code below and paste in you R console.&lt;/p&gt;
&lt;p&gt;code 4: Demo data of &lt;em&gt;MetStat&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;data(&amp;quot;met.data.after.pre&amp;quot;, package = &amp;quot;MetCleaning&amp;quot;)
data(new.group, package = &amp;quot;MetCleaning&amp;quot;)
##create a folder for MetStat demo
dir.create(&amp;quot;Demo for MetStat&amp;quot;)
setwd(&amp;quot;Demo for MetStat&amp;quot;)
## export the demo data as csv
write.csv(new.group, &amp;quot;new.group.csv&amp;quot;, row.names = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The demo data have been added in your work directory. “new.group.csv” is a sample.information which has been changed the group information you want to use for statistical analysis. For the sample which you don’t want to use them for statistical analysis, you can set they group information as NA like Figure 6 shows.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/images/metcleaning/new.group.jpg&#34; alt=&#34;Figure6 new group information&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Figure6 new group information&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;code 5: Running of &lt;em&gt;MetStat&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;MetStat(MetFlowData = met.data.after.pre, new.group = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Running results of &lt;em&gt;MetStat&lt;/em&gt;
1.Sample removing. Firstly, you need to confirm the samples which you want to remove form dataset as Figure 7 shows.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/images/metcleaning/sample%20remove.jpg&#34; alt=&#34;Figure7 sample removing confirmation&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Figure7 sample removing confirmation&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;2.Number of component selection in PLS-DA analysis. In PLS-DA analysis, you should manually select the best choice of the number of component. When the Console show “How many comps do you want to see?”, you can type 10 and enter “Enter” key. Then a MSE plot is showing, and the best number of component is the one has the smallest CV values. So type the number (in this example is 4) and enter “Enter” key.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/images/metcleaning/PLS%20analysis.jpg&#34; alt=&#34;Figure8 Number of component selection in PLS-DA analysis&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Figure8 Number of component selection in PLS-DA analysis&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;3.Output files. Output files of &lt;em&gt;MetStat&lt;/em&gt; are listed as Figure 9 shows.
(1) “12PCA analysis” is the PCA score plot.
(2) “13PLS analysis” contains the PLS-DA results.
(3) “14heatmap” is the heatmap.
(4) “15marker selection” contains the information of markers, volcano plot and boxplots of markers.
(5) &lt;strong&gt;“data_after_stat.csv”, “qc.info.csv” and “subject.info”&lt;/strong&gt; are the data and sample information after statistical analysis.
(6) “intermediate” is the intermediate data during processing.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/images/metcleaning/output%20files%20of%20MetStat.jpg&#34; alt=&#34;Figure9 Output files of MetStat&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Figure9 Output files of &lt;em&gt;MetStat&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>使用Github和Hexo建独立博客</title>
      <link>/post/2017-09-09-github-blog/</link>
      <pubDate>Fri, 25 Nov 2016 00:00:00 +0000</pubDate>
      <guid>/post/2017-09-09-github-blog/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#hexo介绍&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1&lt;/span&gt; 1. Hexo介绍&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#环境准备&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.2&lt;/span&gt; 2. 环境准备&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#安装node.js&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.2.1&lt;/span&gt; 2.1 安装node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#安装hexo&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.2.2&lt;/span&gt; 2.2 安装hexo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#利用hexo搭建一个博客&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.3&lt;/span&gt; 3. 利用Hexo搭建一个博客&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#创建博客目录shenxtgithub.io&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.3.1&lt;/span&gt; 3.1 &lt;span&gt;创建博客目录shenxt@github.io&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#生成静态页面&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.3.2&lt;/span&gt; 3.2 生成静态页面&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#运行&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.3.3&lt;/span&gt; 3.3 运行&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#发一篇文章试试&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.4&lt;/span&gt; 4 发一篇文章试试&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#穿件一个新的博客&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.4.1&lt;/span&gt; 4.1 穿件一个新的博客&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#配置&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.5&lt;/span&gt; 5 配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#更换主题&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.6&lt;/span&gt; 6 更换主题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#部署到github上&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.7&lt;/span&gt; 7 部署到github上&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#在github网页版上创建和自己账户名相同的仓库比如我的账户为shenxt因此创建的仓库为shenxt.github.io&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.7.1&lt;/span&gt; 7.1 在github网页版上创建和自己账户名相同的仓库，比如我的账户为shenxt，因此，创建的仓库为shenxt.github.io。&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#安装hexo-deployer-git&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.7.2&lt;/span&gt; 7.2 安装hexo-deployer-git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#网站配置git&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.7.3&lt;/span&gt; 7.3 网站配置git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#部署&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.7.4&lt;/span&gt; 7.4 部署&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#贴标签方便搜索&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.8&lt;/span&gt; 贴标签，方便搜索&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#两个确认&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.8.1&lt;/span&gt; 8.1 两个确认&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#新建tags页面&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.8.2&lt;/span&gt; 8.2 新建tags页面&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#修改sourcetagsindex.md&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.8.3&lt;/span&gt; 8.3 修改source/tags/index.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#在文章中添加tags&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.8.4&lt;/span&gt; 8.4 在文章中添加tags&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#分类给文章归档&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.9&lt;/span&gt; 9 分类，给文章归档&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#两个确认-1&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.9.1&lt;/span&gt; 9.1 两个确认&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#新建categories文件&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.9.2&lt;/span&gt; 9.2 新建categories文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#修改categoriesindex.md&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.9.3&lt;/span&gt; 9.3 修改categories/index.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#在文章中添加categories&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.9.4&lt;/span&gt; 9.4 在文章中添加categories&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#添加评论功能&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.10&lt;/span&gt; 10 添加评论功能&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;参考了一篇&lt;a href=&#34;https://github.com/limedroid/HexoLearning#42-直接方式&#34;&gt;非常好的文章&lt;/a&gt;，然后结合自己的实际问题，讲解如何使用github结合hexo建立个人的独立博客。&lt;/p&gt;
&lt;div id=&#34;hexo介绍&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1&lt;/span&gt; 1. Hexo介绍&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://hexo.io/zh-cn/&#34;&gt;Hexo&lt;/a&gt;是基于NodeJs的静态博客框架，简单、轻量，其生成的静态网页可以托管在Github和Heroku上。&lt;/p&gt;
&lt;p&gt;. 超快速度
. 支持MarkDown
. 一键部署
. 丰富的插件&lt;/p&gt;
&lt;p&gt;下面以我的博客为例，&lt;a href=&#34;https://shenxt.github.io/&#34;&gt;shenxt.github.io&lt;/a&gt;为例，讲解如何部署自己的博客。&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;环境准备&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.2&lt;/span&gt; 2. 环境准备&lt;/h2&gt;
&lt;div id=&#34;安装node.js&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.2.1&lt;/span&gt; 2.1 安装node.js&lt;/h3&gt;
&lt;p&gt;去&lt;a href=&#34;https://nodejs.org/en/download/&#34;&gt;nodejs&lt;/a&gt;官网下载对应系统的安装包，按提示安装。&lt;/p&gt;
&lt;p&gt;检验安装成功，在git shell中输入一下代码：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ node -v&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;安装hexo&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.2.2&lt;/span&gt; 2.2 安装hexo&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ npm install hexo-cli -g&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果是mac，则需要输入：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo npm install hexo-cli -g&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;利用hexo搭建一个博客&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.3&lt;/span&gt; 3. 利用Hexo搭建一个博客&lt;/h2&gt;
&lt;div id=&#34;创建博客目录shenxtgithub.io&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.3.1&lt;/span&gt; 3.1 &lt;a href=&#34;mailto:创建博客目录shenxt@github.io&#34; class=&#34;email&#34;&gt;创建博客目录shenxt@github.io&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ hexo init shenxt.github.io
$ cd limedroid.github.io
$ npm install&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;生成静态页面&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.3.2&lt;/span&gt; 3.2 生成静态页面&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ hexo clean
$ hexo g # g is generate&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;运行&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.3.3&lt;/span&gt; 3.3 运行&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ hexo s -p3600# is server&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后可以打开浏览器，输入地址 localhost:3600 即可看到效果。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;发一篇文章试试&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.4&lt;/span&gt; 4 发一篇文章试试&lt;/h2&gt;
&lt;div id=&#34;穿件一个新的博客&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.4.1&lt;/span&gt; 4.1 穿件一个新的博客&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ hexo new test&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;此时会在source/posts目录下生成test.md文件，输入一些内容，然后保存。&lt;/p&gt;
&lt;p&gt;然后看一下效果:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hexo clean
$ hexo g
$ hexo s -p3600# is server&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后可以打开浏览器，输入地址 localhost:3600 即可看到效果。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;配置&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.5&lt;/span&gt; 5 配置&lt;/h2&gt;
&lt;p&gt;网站的设置大部分都在_config.yml文件夹中，详细配置可以查看&lt;a href=&#34;https://hexo.io/zh-cn/docs/configuration.html&#34;&gt;官方文档&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;下面只列出简单常用配置:&lt;/p&gt;
&lt;p&gt;.title -&amp;gt; 网站标题
.subtitle -&amp;gt; 网站副标题
.description -&amp;gt; 网站描述
.author -&amp;gt; 您的名字
.language -&amp;gt; 网站使用的语言&lt;/p&gt;
&lt;p&gt;注意：进行配置时，需要在冒号:后加一个英文空格。&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;更换主题&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.6&lt;/span&gt; 6 更换主题&lt;/h2&gt;
&lt;p&gt;在网站配置文件_config.yml中，配置theme。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;theme: next&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;next是主题的名字。Hexo有不同的人贡献主题，可以到其&lt;a href=&#34;https://hexo.io/themes/index.html&#34;&gt;官方网站&lt;/a&gt;上下载不同主题。看中某一主题之后，直接点击其名字，进入到其github界面，然后复制其网址，使用下面代码，即可下载主题到本地。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/fi3ework/hexo-theme-archer&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后将博客的配置文件theme修改为archer即可。&lt;/p&gt;
&lt;p&gt;观察效果：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hexo clean
$ hexo g
$ hexo s -p3600# is server&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;部署到github上&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.7&lt;/span&gt; 7 部署到github上&lt;/h2&gt;
&lt;div id=&#34;在github网页版上创建和自己账户名相同的仓库比如我的账户为shenxt因此创建的仓库为shenxt.github.io&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.7.1&lt;/span&gt; 7.1 在github网页版上创建和自己账户名相同的仓库，比如我的账户为shenxt，因此，创建的仓库为shenxt.github.io。&lt;/h3&gt;
&lt;/div&gt;
&lt;div id=&#34;安装hexo-deployer-git&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.7.2&lt;/span&gt; 7.2 安装hexo-deployer-git&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ npm install hexo-deployer-git --save&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;网站配置git&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.7.3&lt;/span&gt; 7.3 网站配置git&lt;/h3&gt;
&lt;p&gt;在网上的配置文件_config.yml中配置deploy。&lt;/p&gt;
&lt;pre class=&#34;deploy:&#34;&gt;&lt;code&gt;  type: git
  repo: https://github.com/shenxt/shenxt.github.io
  branch: master&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;部署&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.7.4&lt;/span&gt; 7.4 部署&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ hexo d# d is deploy&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;贴标签方便搜索&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.8&lt;/span&gt; 贴标签，方便搜索&lt;/h2&gt;
&lt;div id=&#34;两个确认&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.8.1&lt;/span&gt; 8.1 两个确认&lt;/h3&gt;
&lt;p&gt;. 首先确认博客的配置文件中有：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tag_dir: tags&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;. 然后确认主题的配置文件有：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tags: tags&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;新建tags页面&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.8.2&lt;/span&gt; 8.2 新建tags页面&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ hexo new page tags&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;此时会在source/下生成tags/index.md文件。&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;修改sourcetagsindex.md&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.8.3&lt;/span&gt; 8.3 修改source/tags/index.md&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;title: tags
date: 2015-10-20 06:49:50
type: &amp;quot;tags&amp;quot;
comments: false&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;在文章中添加tags&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.8.4&lt;/span&gt; 8.4 在文章中添加tags&lt;/h3&gt;
&lt;p&gt;在你的文章中添加：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tags:
    - Tag1
    - Tag2
    - Tag3&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其文件头部类似于：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;title: TagEditText
date: 2016-11-19 10:44:25
tags:
    - Tag1
    - Tag2
    - Tag3&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;分类给文章归档&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.9&lt;/span&gt; 9 分类，给文章归档&lt;/h2&gt;
&lt;div id=&#34;两个确认-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.9.1&lt;/span&gt; 9.1 两个确认&lt;/h3&gt;
&lt;p&gt;. 确认博客配置文件打开了&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;category_dir: categories&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;. 确认主题配置文件打开了&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;categories: /categories&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;新建categories文件&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.9.2&lt;/span&gt; 9.2 新建categories文件&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;hexo new page categories&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;修改categoriesindex.md&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.9.3&lt;/span&gt; 9.3 修改categories/index.md&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;title: categories
date: 2015-10-20 06:49:50
type: &amp;quot;categories&amp;quot;
comments: false&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;在文章中添加categories&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.9.4&lt;/span&gt; 9.4 在文章中添加categories&lt;/h3&gt;
&lt;p&gt;在文章中添加：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;categories:
    - cate&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其文件头部类似：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;title: TagEditText
date: 2016-11-19 10:44:25
categories:
    - cate&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;添加评论功能&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.10&lt;/span&gt; 10 添加评论功能&lt;/h2&gt;
&lt;p&gt;这里推荐使用韩国的来必力系统。参考&lt;a href=&#34;https://www.drixn.com/2017/LiveReCommentsSystem/&#34;&gt;这个博客&lt;/a&gt;进行设置。&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>使用R爬取HMDB和KEGG数据库</title>
      <link>/post/2016-12-03-keggandhmdb/</link>
      <pubDate>Fri, 25 Nov 2016 00:00:00 +0000</pubDate>
      <guid>/post/2016-12-03-keggandhmdb/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#r语言爬虫&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1&lt;/span&gt; &lt;strong&gt;R语言爬虫&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#爬取kegg通路信息&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.2&lt;/span&gt; &lt;strong&gt;爬取KEGG通路信息&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#爬取hmdb通路信息&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.3&lt;/span&gt; &lt;strong&gt;爬取HMDB通路信息&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#爬取hmdb代谢物信息&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.4&lt;/span&gt; &lt;strong&gt;爬取HMDB代谢物信息&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;r语言爬虫&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1&lt;/span&gt; &lt;strong&gt;R语言爬虫&lt;/strong&gt;&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;虽然相对于python来说，R语言爬虫并不是那么流行，但是对于比较小的数据爬取量，使用R还是很方便的。R的数据爬取比较流行的是利用XML和RCurl包进行爬取，在这篇博客里面，我就利用XML和RCurl包进行KEGG和HMDB的数据爬取。&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;爬取kegg通路信息&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.2&lt;/span&gt; &lt;strong&gt;爬取KEGG通路信息&lt;/strong&gt;&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;因为我需要的信息是KEGG的通路信息，比较简单，也就是每个通路包含哪些代谢物，只要人的metaboloic pathway，因此，我需要先将KEGG中的通路的网页链接拿到。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;library(XML)
library(RCurl)
##从kegg主页上抓取代谢通路的url
URL = getURL(&amp;quot;http://www.genome.jp/kegg/pathway.html#global&amp;quot;)
doc &amp;lt;- htmlParse(URL,encoding=&amp;quot;utf-8&amp;quot;)
xpath.a &amp;lt;- &amp;quot;//a/@href&amp;quot;
node &amp;lt;- getNodeSet(doc, xpath.a)
url1 &amp;lt;- sapply(node, as.character)

xpath.b &amp;lt;- &amp;quot;//a[@href]&amp;quot;
name &amp;lt;- getNodeSet(doc, xpath.b)
name &amp;lt;- sapply(name, xmlValue)

name2 &amp;lt;- name[59:247]
url2 &amp;lt;- url1[59:247]

url3 &amp;lt;- url2[grep(&amp;quot;show&amp;quot;, url2)]

pathwat.name &amp;lt;- NULL
metabolite.id &amp;lt;- list()
metabolite.name &amp;lt;- list()
for (i in 1:length(url3)) {
  cat(paste(i,&amp;quot;/&amp;quot;,length(url3)))
  cat(&amp;quot;\n&amp;quot;)
  URL &amp;lt;- paste(&amp;quot;http://www.genome.jp&amp;quot;, url3[i], sep = &amp;quot;&amp;quot;)
  URL = getURL(URL)
  doc&amp;lt;-htmlParse(URL,encoding=&amp;quot;utf-8&amp;quot;)
  xpath &amp;lt;- &amp;quot;//option[@value=&amp;#39;hsa&amp;#39;]&amp;quot;
  node&amp;lt;-getNodeSet(doc, xpath)
  if (length(node) ==0 ) {
    cat(&amp;quot;No human pathwat.&amp;quot;)
    next()
  }else{
    URL &amp;lt;- paste(&amp;quot;http://www.genome.jp&amp;quot;, url3[i], sep = &amp;quot;&amp;quot;)
    URL &amp;lt;- gsub(pattern = &amp;quot;map=map&amp;quot;, replacement = &amp;quot;map=hsa&amp;quot;, x = URL)
    doc&amp;lt;-htmlParse(URL,encoding=&amp;quot;utf-8&amp;quot;)
    xpath1 &amp;lt;- &amp;quot;//title&amp;quot;
    node&amp;lt;-getNodeSet(doc, xpath1)
    pathway.name[i] &amp;lt;- xmlValue(node[[1]])
    pathway.name[i] &amp;lt;- substr(pathway.name[i], start = 2, stop = nchar(pathway.name[i])-1)

    xpath2 &amp;lt;- &amp;quot;//area[@shape=&amp;#39;circle&amp;#39;]/@title&amp;quot;
    node&amp;lt;-getNodeSet(doc, xpath2)
    metabolite &amp;lt;- lapply(node, function(x) as.character(x))
    metabolite.name[[i]] &amp;lt;- substr(metabolite, start = 9, nchar(metabolite)-1)
    metabolite.id[[i]] &amp;lt;- substr(metabolite, start = 1, stop = 6)
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;下面对爬取到的代谢通路进行筛选。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;idx &amp;lt;- which(!is.na(pathway.name))
pathway.name1 &amp;lt;- pathway.name[idx]
metabolite.id1 &amp;lt;- metabolite.id[idx]
metabolite.name1 &amp;lt;- metabolite.name[idx]

pathway.name2 &amp;lt;- pathway.name1[-c(83,84)]
metabolite.id2 &amp;lt;- metabolite.id1[-c(83,84)]
metabolite.name2 &amp;lt;- metabolite.name1[-c(83,84)]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将爬取到的信息保存输出。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;met.name &amp;lt;- NULL
met.id &amp;lt;- NULL
path.name &amp;lt;- NULL
for(i in 1:length(pathway.name2)) {
  met.name[i] &amp;lt;- paste(metabolite.name2[[i]], collapse = &amp;quot;;&amp;quot;)
  met.id[i] &amp;lt;- paste(metabolite.id2[[i]], collapse = &amp;quot;;&amp;quot;)
  path.name[i] &amp;lt;- gsub(pattern = &amp;quot;KEGG PATHWAY: &amp;quot;, &amp;quot;&amp;quot;, pathway.name2[i])
  path.name[i] &amp;lt;- substr(path.name[i], start = 1, stop = nchar(path.name[i])-23)
}


kegg &amp;lt;- data.frame(path.name, met.name, met.id)
write.csv(kegg, &amp;quot;kegg.csv&amp;quot;, row.names = F)

save(path.name, file = &amp;quot;path.name&amp;quot;)
save(met.name, file = &amp;quot;met.name&amp;quot;)
save(met.id, file = &amp;quot;met.id&amp;quot;)

kegg.met &amp;lt;- list()
kegg.met[[2]] &amp;lt;- sapply(path.name, list)
kegg.met[[1]] &amp;lt;- metabolite.name2
kegg.met[[3]] &amp;lt;- metabolite.id2

names(kegg.met) &amp;lt;- c(&amp;quot;gs&amp;quot;, &amp;quot;pathwaynames&amp;quot;, &amp;quot;metid&amp;quot;)

save(kegg.met, file = &amp;quot;kegg.met&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;爬取hmdb通路信息&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.3&lt;/span&gt; &lt;strong&gt;爬取HMDB通路信息&lt;/strong&gt;&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;首先爬取HMDB的通路信息。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;##抓取HMDB通路信息
library(XML)
library(RCurl)

hmdb.main &amp;lt;- &amp;quot;http://www.hmdb.ca/pathways?page=&amp;quot;
hmdb.main &amp;lt;- paste(hmdb.main, c(2:46), sep = &amp;quot;&amp;quot;)
hmdb.main &amp;lt;- c(&amp;quot;http://www.hmdb.ca/pathways&amp;quot;, hmdb.main)

##从HMDB主页上抓取代谢通路的url
path.name &amp;lt;- list()
metabolite.id &amp;lt;- list()
spec &amp;lt;- list()
path.class &amp;lt;- list()
for (i in 40:length(hmdb.main)) {
  cat(paste(&amp;quot;page&amp;quot;,i))
  cat(&amp;quot;:&amp;quot;)
  URL = getURL(hmdb.main[i])
  doc&amp;lt;-htmlParse(URL,encoding=&amp;quot;utf-8&amp;quot;)
  xpath1 &amp;lt;- &amp;quot;//div[@class=&amp;#39;panel-heading&amp;#39;]&amp;quot;
  node1 &amp;lt;- getNodeSet(doc, xpath1)
  pathway.name &amp;lt;- sapply(node1, xmlValue)

  cat(paste(length(pathway.name), &amp;quot;pathways&amp;quot;))
  cat(&amp;quot;\n&amp;quot;)

  path.name[[i]] &amp;lt;- pathway.name

  xpath2 &amp;lt;- &amp;quot;//div[@class=&amp;#39;panel-body&amp;#39;]&amp;quot;
  node2 &amp;lt;- getNodeSet(doc, xpath2)

  metabolite &amp;lt;- sapply(node2, xmlValue)
  metabolite &amp;lt;- unname(sapply(metabolite, function(x) {gsub(&amp;quot;Show&amp;quot;, &amp;quot; &amp;quot;, x)}))

  idx &amp;lt;- sapply(metabolite, function(x) {gregexpr(&amp;quot;HMDB[0-9]{5}&amp;quot;, x)})

  met.id &amp;lt;- list()
  for (j in 1:length(idx)) {
    id &amp;lt;- NULL
    for (k in 1:length(idx[[j]])) {
      id[k] &amp;lt;- substr(metabolite[j], idx[[j]][k], idx[[j]][k]+8)
    }
    met.id[[j]] &amp;lt;- id
  }

  metabolite.id[[i]] &amp;lt;- met.id

  xpath.a &amp;lt;- &amp;quot;//a[@class=&amp;#39;link-out&amp;#39;]/@href&amp;quot;
  node&amp;lt;-getNodeSet(doc, xpath.a)

  url1 &amp;lt;- sapply(node, as.character)
  url1 &amp;lt;- substr(url1, start = 1, stop = 29)
  url1 &amp;lt;- url1[!duplicated(url1)]


  ###获取通路的人种和类别
  species &amp;lt;- NULL
  metabolic &amp;lt;- NULL
  for (t in 1:length(url1)) {
    cat(paste(&amp;quot;t:&amp;quot;,t));cat(&amp;quot; &amp;quot;)
    URL = getURL(url1[t])
    doc &amp;lt;- htmlParse(URL,encoding=&amp;quot;utf-8&amp;quot;)
    xpath &amp;lt;- &amp;quot;//div[@class=&amp;#39;species&amp;#39;]/text()&amp;quot;
    node &amp;lt;- getNodeSet(doc, xpath)
    species[t] &amp;lt;- xmlValue(node[[1]])

    xpath &amp;lt;- &amp;quot;//div[@id=&amp;#39;des_subject&amp;#39;]/text()&amp;quot;
    node &amp;lt;- getNodeSet(doc, xpath)
    metabolic[t] &amp;lt;- xmlValue(node[[1]])

  }

  spec[[i]] &amp;lt;- species
  path.class[[i]] &amp;lt;- metabolic

}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;对爬取到的代谢通路进行筛选。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;save(path.name, file = &amp;quot;path.name&amp;quot;)
save(metabolite.id, file = &amp;quot;metabolite.id&amp;quot;)
save(spec, file = &amp;quot;spec&amp;quot;)
save(path.class, file = &amp;quot;path.class&amp;quot;)


pathway.name &amp;lt;- NULL
metabolite.ID &amp;lt;- list()
species &amp;lt;- NULL
pathway.class &amp;lt;- NULL
for (i in 1:length(path.name)) {
  pathway.name &amp;lt;- c(pathway.name, path.name[[i]])
  metabolite.ID &amp;lt;- c(metabolite.ID, metabolite.id[[i]])
  species &amp;lt;- c(species, spec[[i]])
  pathway.class &amp;lt;- c(pathway.class, path.class[[i]])
}


pathway.class &amp;lt;- substr(x = pathway.class, 1, regexpr(&amp;quot;\\\n&amp;quot;, pathway.class)-1)

metabolite.name &amp;lt;- list()
for (i in 1:length(metabolite.ID)) {
  id &amp;lt;- metabolite.ID[[i]]
  idx &amp;lt;- match(id, hmdbdatabase[,1])
  name &amp;lt;- hmdbdatabase[idx,2]
  metabolite.name[[i]] &amp;lt;- name
}

a &amp;lt;- unlist(lapply(metabolite.name, function(x) {paste(x, collapse = &amp;quot;;&amp;quot;)}))
b &amp;lt;- unlist(lapply(metabolite.ID, function(x) {paste(x, collapse = &amp;quot;;&amp;quot;)}))

idx &amp;lt;- grep(&amp;quot;Metabolic&amp;quot;, pathway.class)

metabolite.name &amp;lt;- metabolite.name[idx]
metabolite.ID &amp;lt;- metabolite.ID[idx]
pathway.name &amp;lt;- pathway.name[idx]
pathway.class &amp;lt;- pathway.class[idx]
species &amp;lt;- species[idx]

hmdb.pathway &amp;lt;- data.frame(pathway.name, pathway.class,a, b)[idx,]
write.csv(hmdb.pathway, &amp;quot;hmdb.pathway.csv&amp;quot;)

a &amp;lt;- list()
for (i in 1:length(pathway.name)) {
  a[[i]] &amp;lt;- pathway.name[i]
}

pathway.name &amp;lt;- a

hmdb.met &amp;lt;- list(gs = metabolite.name, pathwaynames = pathway.name, id = metabolite.ID)
save(hmdb.met, file = &amp;quot;hmdb.met&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;爬取hmdb代谢物信息&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.4&lt;/span&gt; &lt;strong&gt;爬取HMDB代谢物信息&lt;/strong&gt;&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;首先，获得所有代谢物的页面链接。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;###抓取HMDB代谢物信息
library(XML)
library(RCurl)

hmdb.main &amp;lt;- &amp;quot;http://www.hmdb.ca/metabolites?c=hmdb_id&amp;amp;d=up&amp;amp;page=&amp;quot;
hmdb.main &amp;lt;- paste(hmdb.main, c(2:1681), sep = &amp;quot;&amp;quot;)
hmdb.main &amp;lt;- c(&amp;quot;http://www.hmdb.ca/metabolites&amp;quot;, hmdb.main)

##从HMDB主页上抓取代谢物的url
url &amp;lt;- NULL
for (i in 1:length(hmdb.main)) {
  cat(i)
  cat(&amp;quot; &amp;quot;)
  URL = getURL(hmdb.main[i])
  doc&amp;lt;-htmlParse(URL,encoding=&amp;quot;utf-8&amp;quot;)
  xpath &amp;lt;- &amp;quot;//a[@href]/@href&amp;quot;
  node&amp;lt;-getNodeSet(doc, xpath)
  url1 &amp;lt;- sapply(node, as.character)
  url1 &amp;lt;- url1[grep(&amp;quot;metabolites/HMDB&amp;quot;, url1)]
  url1 &amp;lt;- unique(url1)
  url &amp;lt;- c(url, url1)
}

url1 &amp;lt;- paste(&amp;quot;http://www.hmdb.ca/&amp;quot;,url, sep = &amp;quot;&amp;quot;)
save(url1, file = &amp;quot;url1&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;下面开始进行代谢物信息爬取。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;library(mailR)
for (i in 1:400) {
  cat(paste((i-1)*100+1,&amp;quot;-&amp;quot;,i*100,&amp;quot;/&amp;quot;, length(url1), sep = &amp;quot;&amp;quot;))
  cat(&amp;quot;\n&amp;quot;)
  URL &amp;lt;- getURL(url1[((i-1)*100+1):(i*100)])
  doc &amp;lt;- htmlParse(URL, encoding=&amp;quot;utf-8&amp;quot;)
  xpath1 &amp;lt;- &amp;quot;//tr&amp;quot;
  node1 &amp;lt;- getNodeSet(doc, xpath1)
  node1 &amp;lt;- sapply(node1, xmlValue)

  HMDB_ID[((i-1)*100+1):(i*100)] &amp;lt;-
    gsub(pattern = &amp;quot;HMDB ID&amp;quot;, replacement = &amp;quot;&amp;quot;,node1[grep(&amp;quot;HMDB ID&amp;quot;, node1)])

  Common_Name[((i-1)*100+1):(i*100)] &amp;lt;-
    gsub(&amp;quot;Common Name&amp;quot;, &amp;quot;&amp;quot;,node1[grep(&amp;quot;Common Name&amp;quot;, node1)])

  temp &amp;lt;- gsub(&amp;quot;SynonymsValueSource&amp;quot;, &amp;quot;&amp;quot;,node1[grep(&amp;quot;Synonyms&amp;quot;, node1)])
  temp &amp;lt;- gsub(&amp;quot;Generator&amp;quot;, &amp;quot;;&amp;quot;,temp)
  temp &amp;lt;- gsub(&amp;quot;ChEMBL&amp;quot;, &amp;quot;;&amp;quot;,temp)
  temp &amp;lt;- gsub(&amp;quot;ChEBI&amp;quot;, &amp;quot;;&amp;quot;,temp)
  Synonyms[((i-1)*100+1):(i*100)] &amp;lt;-
    gsub(&amp;quot;HMDB&amp;quot;, &amp;quot;;&amp;quot;,temp)

  Chemical_Formula[((i-1)*100+1):(i*100)] &amp;lt;-
    gsub(&amp;quot;Chemical Formula&amp;quot;, &amp;quot;&amp;quot;,node1[grep(&amp;quot;Chemical Formula&amp;quot;, node1)])

  Monoisotopic_Molecular_Weight[((i-1)*100+1):(i*100)] &amp;lt;-
    gsub(&amp;quot;Monoisotopic Molecular Weight&amp;quot;, &amp;quot;&amp;quot;,node1[grep(&amp;quot;Monoisotopic Molecular Weight&amp;quot;, node1)])

  IUPAC_Name[((i-1)*100+1):(i*100)] &amp;lt;-
    gsub(&amp;quot;IUPAC Name&amp;quot;, &amp;quot;&amp;quot;,node1[grep(&amp;quot;IUPAC Name&amp;quot;, node1)])

  Traditional_Name[((i-1)*100+1):(i*100)] &amp;lt;-
    gsub(&amp;quot;Traditional Name&amp;quot;, &amp;quot;&amp;quot;,node1[grep(&amp;quot;Traditional Name&amp;quot;, node1)])

  CAS_Registry_Number[((i-1)*100+1):(i*100)] &amp;lt;-
    gsub(&amp;quot;CAS Registry Number&amp;quot;, &amp;quot;&amp;quot;,node1[grep(&amp;quot;CAS Registry Number&amp;quot;, node1)])

  Origin[((i-1)*100+1):(i*100)] &amp;lt;-
    gsub(&amp;quot;Origin&amp;quot;, &amp;quot;&amp;quot;,node1[grep(&amp;quot;Origin&amp;quot;, node1)])

  path &amp;lt;- gsub(&amp;quot;PathwaysNameSMPDB LinkKEGG Link&amp;quot;, &amp;quot;&amp;quot;,node1[grep(&amp;quot;Pathways&amp;quot;, node1)])
  Pathways[((i-1)*100+1):(i*100)] &amp;lt;-
    substr(path, 1, stop = regexpr(&amp;quot;SMP&amp;quot;, path)-1)

  ##每100次保存一次
  if (i*100 %in% seq(100, 60000, by = 100)) {
    cat(&amp;quot;save data...\n&amp;quot;)
    save(HMDB_ID,
         Common_Name,
         Synonyms,
         Chemical_Formula,
         Monoisotopic_Molecular_Weight,
         IUPAC_Name,
         Traditional_Name,
         CAS_Registry_Number,
         Origin,
         Pathways,
         file = paste(&amp;quot;hmdb.data&amp;quot;,i*100))

    send.mail(from = &amp;quot;yourmail1@163.com&amp;quot;,
              to = c(&amp;quot;youmail20@163.com&amp;quot;),
              subject = paste(&amp;quot;WZZ GO ON:&amp;quot;, i),
              body = paste(&amp;quot;WZZ still go on&amp;quot;, i),
              smtp = list(host.name = &amp;quot;smtp.163.com&amp;quot;, port = 465, user.name = &amp;quot;yourmail1&amp;quot;, passwd = &amp;quot;passward&amp;quot;, ssl = TRUE),
              authenticate = TRUE,
              send = TRUE)
  }

}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;因为代谢物信息比较大，可能需要一晚上，因此想到了没爬取100个，就给自己发一封邮件，来对程序进行监控。&lt;/p&gt;
&lt;p&gt;写的比较粗糙，有时间再好好修改一下。&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>我的第一篇博客</title>
      <link>/post/2016-11-25-first-blog/</link>
      <pubDate>Fri, 25 Nov 2016 00:00:00 +0000</pubDate>
      <guid>/post/2016-11-25-first-blog/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#我的博客&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; 我的博客&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;我的博客&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; 我的博客&lt;/h1&gt;
&lt;p&gt;我的博客使用markdown编写，使用的编辑器是ATOM，使用起来还是非常方便的。以后有时间，就用博客来记录我的学习，生活和工作。&lt;/p&gt;
&lt;p&gt;申祖涛于上海&lt;/p&gt;
&lt;p&gt;2016年11月25日晚8点十分&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Academic: the website builder for Hugo</title>
      <link>/post/getting-started/</link>
      <pubDate>Wed, 20 Apr 2016 00:00:00 +0000</pubDate>
      <guid>/post/getting-started/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;Create a free website with Academic using Markdown, Jupyter, or RStudio. Choose a beautiful color theme and build anything with the Page Builder - over 40 &lt;em&gt;widgets&lt;/em&gt;, &lt;em&gt;themes&lt;/em&gt;, and &lt;em&gt;language packs&lt;/em&gt; included!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://academic-demo.netlify.com/&#34; target=&#34;_blank&#34;&gt;Check out the latest &lt;strong&gt;demo&lt;/strong&gt;&lt;/a&gt; of what you&amp;rsquo;ll get in less than 10 minutes, or &lt;a href=&#34;https://sourcethemes.com/academic/#expo&#34; target=&#34;_blank&#34;&gt;view the &lt;strong&gt;showcase&lt;/strong&gt;&lt;/a&gt; of personal, project, and business sites.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#install&#34;&gt;&lt;strong&gt;Setup Academic&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/get-started/&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;Get Started&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/&#34; target=&#34;_blank&#34;&gt;View the documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://discuss.gohugo.io/&#34; target=&#34;_blank&#34;&gt;Ask a question&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gcushen/hugo-academic/issues&#34; target=&#34;_blank&#34;&gt;Request a feature or report a bug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Updating? View the &lt;a href=&#34;https://sourcethemes.com/academic/docs/update/&#34; target=&#34;_blank&#34;&gt;Update Guide&lt;/a&gt; and &lt;a href=&#34;https://sourcethemes.com/academic/updates/&#34; target=&#34;_blank&#34;&gt;Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Support development of Academic:

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://paypal.me/cushen&#34; target=&#34;_blank&#34;&gt;Donate a coffee&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.patreon.com/cushen&#34; target=&#34;_blank&#34;&gt;Become a backer on Patreon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.redbubble.com/people/neutreno/works/34387919-academic&#34; target=&#34;_blank&#34;&gt;Decorate your laptop or journal with an Academic sticker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://academic.threadless.com/&#34; target=&#34;_blank&#34;&gt;Wear the T-shirt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/gcushen/hugo-academic/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/academic.png&#34; alt=&#34;Screenshot&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Key features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Page builder&lt;/strong&gt; - Create &lt;em&gt;anything&lt;/em&gt; with &lt;a href=&#34;https://sourcethemes.com/academic/docs/page-builder/&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;widgets&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;elements&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Edit any type of content&lt;/strong&gt; - Blog posts, publications, talks, slides, projects, and more!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Create content&lt;/strong&gt; in &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;Markdown&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://sourcethemes.com/academic/docs/jupyter/&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;Jupyter&lt;/strong&gt;&lt;/a&gt;, or &lt;a href=&#34;https://sourcethemes.com/academic/docs/install/#install-with-rstudio&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;RStudio&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Plugin System&lt;/strong&gt; - Fully customizable &lt;a href=&#34;https://sourcethemes.com/academic/themes/&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;color&lt;/strong&gt; and &lt;strong&gt;font themes&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Display Code and Math&lt;/strong&gt; - Code highlighting and &lt;a href=&#34;https://en.wikibooks.org/wiki/LaTeX/Mathematics&#34; target=&#34;_blank&#34;&gt;LaTeX math&lt;/a&gt; supported&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Integrations&lt;/strong&gt; - &lt;a href=&#34;https://analytics.google.com&#34; target=&#34;_blank&#34;&gt;Google Analytics&lt;/a&gt;, &lt;a href=&#34;https://disqus.com&#34; target=&#34;_blank&#34;&gt;Disqus commenting&lt;/a&gt;, Maps, Contact Forms, and more!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Beautiful Site&lt;/strong&gt; - Simple and refreshing one page design&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Industry-Leading SEO&lt;/strong&gt; - Help get your website found on search engines and social media&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Media Galleries&lt;/strong&gt; - Display your images and videos with captions in a customizable gallery&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mobile Friendly&lt;/strong&gt; - Look amazing on every screen with a mobile friendly version of your site&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Multi-language&lt;/strong&gt; - 15+ language packs including English, 中文, and Português&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Multi-user&lt;/strong&gt; - Each author gets their own profile page&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Privacy Pack&lt;/strong&gt; - Assists with GDPR&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Stand Out&lt;/strong&gt; - Bring your site to life with animation, parallax backgrounds, and scroll effects&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;One-Click Deployment&lt;/strong&gt; - No servers. No databases. Only files.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;color-themes&#34;&gt;Color Themes&lt;/h2&gt;

&lt;p&gt;Academic comes with &lt;strong&gt;day (light) and night (dark) mode&lt;/strong&gt; built-in. Click the sun/moon icon in the top right of the &lt;a href=&#34;https://academic-demo.netlify.com/&#34; target=&#34;_blank&#34;&gt;Demo&lt;/a&gt; to see it in action!&lt;/p&gt;

&lt;p&gt;Choose a stunning color and font theme for your site. Themes are fully customizable and include:&lt;/p&gt;









  
  


&lt;div class=&#34;gallery&#34;&gt;

  
  
  
  
    
    
    
    
    
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;/post/getting-started/gallery/theme-1950s.png&#34; data-caption=&#34;1950s&#34;&gt;
  &lt;img src=&#34;/post/getting-started/gallery/theme-1950s_huaf5482f8cea0c5a703a328640e3b7509_21614_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;/post/getting-started/gallery/theme-apogee.png&#34; data-caption=&#34;Apogee&#34;&gt;
  &lt;img src=&#34;/post/getting-started/gallery/theme-apogee_hu4b45d99db97150df01464c393bfd17d4_24119_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;/post/getting-started/gallery/theme-coffee-playfair.png&#34; data-caption=&#34;Coffee theme with Playfair font&#34;&gt;
  &lt;img src=&#34;/post/getting-started/gallery/theme-coffee-playfair_hu446a8f670cc5622adcc77b97ba95f6c5_22462_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;/post/getting-started/gallery/theme-cupcake.png&#34; data-caption=&#34;Cupcake&#34;&gt;
  &lt;img src=&#34;/post/getting-started/gallery/theme-cupcake_hueba8cfa8cfbc7543924fcbf387a99e92_23986_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;/post/getting-started/gallery/theme-dark.png&#34; data-caption=&#34;Dark&#34;&gt;
  &lt;img src=&#34;/post/getting-started/gallery/theme-dark_hu1e8601ecc47f58eada7743fdcd709d3d_21456_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;/post/getting-started/gallery/theme-default.png&#34; data-caption=&#34;Default&#34;&gt;
  &lt;img src=&#34;/post/getting-started/gallery/theme-default_huba6228b7bdf30e2f03f12ea91b2cba0d_21751_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;/post/getting-started/gallery/theme-forest.png&#34; data-caption=&#34;Forest&#34;&gt;
  &lt;img src=&#34;/post/getting-started/gallery/theme-forest_hu4f093a1c683134431456584193ea41ee_21797_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;/post/getting-started/gallery/theme-ocean.png&#34; data-caption=&#34;Ocean&#34;&gt;
  &lt;img src=&#34;/post/getting-started/gallery/theme-ocean_hu14831ccafc2219f30a7a096fa7617e01_21760_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  

  
&lt;/div&gt;

&lt;h2 id=&#34;ecosystem&#34;&gt;Ecosystem&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/sourcethemes/academic-admin&#34; target=&#34;_blank&#34;&gt;Academic Admin&lt;/a&gt;:&lt;/strong&gt; An admin tool to import publications from BibTeX or import assets for an offline site&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/sourcethemes/academic-scripts&#34; target=&#34;_blank&#34;&gt;Academic Scripts&lt;/a&gt;:&lt;/strong&gt; Scripts to help migrate content to new versions of Academic&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;install&#34;&gt;Install&lt;/h2&gt;

&lt;p&gt;You can choose from one of the following four methods to install:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/install/#install-with-web-browser&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;one-click install using your web browser (recommended)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/install/#install-with-git&#34; target=&#34;_blank&#34;&gt;install on your computer using &lt;strong&gt;Git&lt;/strong&gt; with the Command Prompt/Terminal app&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/install/#install-with-zip&#34; target=&#34;_blank&#34;&gt;install on your computer by downloading the &lt;strong&gt;ZIP files&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/install/#install-with-rstudio&#34; target=&#34;_blank&#34;&gt;install on your computer with &lt;strong&gt;RStudio&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then &lt;a href=&#34;https://sourcethemes.com/academic/docs/get-started/&#34; target=&#34;_blank&#34;&gt;personalize and deploy your new site&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;updating&#34;&gt;Updating&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/update/&#34; target=&#34;_blank&#34;&gt;View the Update Guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Feel free to &lt;em&gt;star&lt;/em&gt; the project on &lt;a href=&#34;https://github.com/gcushen/hugo-academic/&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt; to help keep track of &lt;a href=&#34;https://sourcethemes.com/academic/updates&#34; target=&#34;_blank&#34;&gt;updates&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;

&lt;p&gt;Copyright 2016-present &lt;a href=&#34;https://georgecushen.com&#34; target=&#34;_blank&#34;&gt;George Cushen&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Released under the &lt;a href=&#34;https://github.com/gcushen/hugo-academic/blob/master/LICENSE.md&#34; target=&#34;_blank&#34;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>使用Github Pages建独立博客</title>
      <link>/post/2012-02-22-github-pages/</link>
      <pubDate>Wed, 22 Feb 2012 00:00:00 +0000</pubDate>
      <guid>/post/2012-02-22-github-pages/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#购买绑定独立域名&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1&lt;/span&gt; 购买、绑定独立域名&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#配置和使用github&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.2&lt;/span&gt; 配置和使用Github&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#检查ssh-keys的设置&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.2.1&lt;/span&gt; 1、检查SSH keys的设置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#备份和移除原来的ssh-key设置&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.2.2&lt;/span&gt; 2、备份和移除原来的ssh key设置：&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#生成新的ssh-key&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.2.3&lt;/span&gt; 3、生成新的SSH Key：&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#添加ssh-key到github&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.2.4&lt;/span&gt; 4、添加SSH Key到GitHub：&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#测试一下&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.2.5&lt;/span&gt; 5、测试一下&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#设置你的账号信息&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.2.6&lt;/span&gt; 6、设置你的账号信息&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#成功了&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.2.7&lt;/span&gt; 成功了&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#使用github-pages建立博客&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.3&lt;/span&gt; 使用GitHub Pages建立博客&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#user-organization-pages&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.3.1&lt;/span&gt; User &amp;amp; Organization Pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#绑定域名&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.3.2&lt;/span&gt; 绑定域名&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#jekyll模板系统&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.4&lt;/span&gt; Jekyll模板系统&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#jekyll基本结构&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.4.1&lt;/span&gt; Jekyll基本结构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#jekyll的配置&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.4.2&lt;/span&gt; Jekyll的配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#yaml-front-matter和模板变量&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.4.3&lt;/span&gt; YAML Front Matter和模板变量&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#使用disqus管理评论&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.5&lt;/span&gt; 使用Disqus管理评论&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#代码高亮插件&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.6&lt;/span&gt; 代码高亮插件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#搭建本地jekyll环境&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.7&lt;/span&gt; 搭建本地jekyll环境&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#结语&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.8&lt;/span&gt; 结语&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;http://github.com&#34; title=&#34;Github&#34;&gt;Github&lt;/a&gt;很好的将代码和社区联系在了一起，于是发生了很多有趣的事情，世界也因为他美好了一点点。Github作为现在最流行的代码仓库，已经得到很多大公司和项目的青睐，比如&lt;a href=&#34;https://github.com/jquery/jquery&#34; title=&#34;jQuery@github&#34;&gt;jQuery&lt;/a&gt;、&lt;a href=&#34;https://github.com/twitter/bootstrap&#34; title=&#34;Twitter@github&#34;&gt;Twitter&lt;/a&gt;等。为使项目更方便的被人理解，介绍页面少不了，甚至会需要完整的文档站，Github替你想到了这一点，他提供了&lt;a href=&#34;http://pages.github.com/&#34; title=&#34;Github Pages&#34;&gt;Github Pages&lt;/a&gt;的服务，不仅可以方便的为项目建立介绍站点，也可以用来建立个人博客。&lt;/p&gt;
&lt;p&gt;Github Pages有以下几个优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
轻量级的博客系统，没有麻烦的配置
&lt;/li&gt;
&lt;li&gt;
使用标记语言，比如&lt;a href=&#34;http://markdown.tw&#34;&gt;Markdown&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
无需自己搭建服务器
&lt;/li&gt;
&lt;li&gt;
根据Github的限制，对应的每个站有300MB空间
&lt;/li&gt;
&lt;li&gt;
可以绑定自己的域名
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当然他也有缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用&lt;a href=&#34;https://github.com/mojombo/jekyll&#34; title=&#34;Jekyll&#34;&gt;Jekyll&lt;/a&gt;模板系统，相当于静态页发布，适合博客，文档介绍等。&lt;/li&gt;
&lt;li&gt;动态程序的部分相当局限，比如没有评论，不过还好我们有解决方案。&lt;/li&gt;
&lt;li&gt;基于Git，很多东西需要动手，不像Wordpress有强大的后台&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;大致介绍到此，作为个人博客来说，简洁清爽的表达自己的工作、心得，就已达目标，所以Github Pages是我认为此需求最完美的解决方案了。&lt;/p&gt;
&lt;div id=&#34;购买绑定独立域名&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1&lt;/span&gt; 购买、绑定独立域名&lt;/h2&gt;
&lt;p&gt;虽说&lt;a href=&#34;http://www.godaddy.com/&#34; title=&#34;Godaddy&#34;&gt;Godaddy&lt;/a&gt;曾支持过SOPA，并且首页放着极其不专业的大胸美女，但是作为域名服务商他做的还不赖，选择它最重要的原因是他支持支付宝，没有信用卡有时真的很难过。&lt;/p&gt;
&lt;p&gt;域名的购买不用多讲，注册、选域名、支付，有网购经验的都毫无压力，优惠码也遍地皆是。域名的配置需要提醒一下，因为伟大英明的GFW的存在，我们必须多做些事情。&lt;/p&gt;
&lt;p&gt;流传Godaddy的域名解析服务器被墙掉，导致域名无法访问，后来这个事情在&lt;a href=&#34;http://beiyuu.com&#34; title=&#34;BeiYuu&#34;&gt;BeiYuu&lt;/a&gt;也发生了，不得已需要把域名解析服务迁移到国内比较稳定的服务商处，这个迁移对于域名来说没有什么风险，最终的控制权还是在Godaddy那里，你随时都可以改回去。&lt;/p&gt;
&lt;p&gt;我们选择&lt;a href=&#34;https://www.dnspod.cn/&#34; title=&#34;DNSPod&#34;&gt;DNSPod&lt;/a&gt;的服务，他们的产品做得不错，易用、免费，收费版有更高端的功能，暂不需要。注册登录之后，按照DNSPod的说法，只需三步（我们插入一步）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
首先添加域名记录，可参考DNSPod的帮助文档：&lt;a href=&#34;https://www.dnspod.cn/Support&#34;&gt;https://www.dnspod.cn/Support&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
在DNSPod自己的域名下添加一条&lt;a href=&#34;http://baike.baidu.com/view/65575.htm&#34;&gt;A记录&lt;/a&gt;，地址就是Github Pages的服务IP地址：207.97.227.245
&lt;/li&gt;
&lt;li&gt;
在域名注册商处修改DNS服务:去Godaddy修改Nameservers为这两个地址：f1g1ns1.dnspod.net、f1g1ns2.dnspod.net。如果你不明白在哪里修改，可以参考这里：&lt;a href=&#34;https://www.dnspod.cn/support/index/fid/119&#34;&gt;Godaddy注册的域名如何使用DNSPod&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
等待域名解析生效
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;域名的配置部分完成，跪谢方校长。&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;配置和使用github&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.2&lt;/span&gt; 配置和使用Github&lt;/h2&gt;
&lt;p&gt;Git是版本管理的未来，他的优点我不再赘述，相关资料很多。推荐这本&lt;a href=&#34;http://progit.org/book/zh/&#34; title=&#34;Pro Git中文版&#34;&gt;Git中文教程&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;要使用Git，需要安装它的客户端，推荐在Linux下使用Git，会比较方便。Windows版的下载地址在这里：&lt;a href=&#34;http://code.google.com/p/msysgit/downloads/list&#34; title=&#34;Windows版Git客户端&#34;&gt;http://code.google.com/p/msysgit/downloads/list&lt;/a&gt;。其他系统的安装也可以参考官方的&lt;a href=&#34;http://help.github.com/mac-set-up-git/&#34; title=&#34;Mac下Git安装&#34;&gt;安装教程&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;下载安装客户端之后，各个系统的配置就类似了，我们使用windows作为例子，Linux和Mac与此类似。&lt;/p&gt;
&lt;p&gt;在Windows下，打开Git Bash，其他系统下面则打开终端（Terminal）：
&lt;img src=&#34;/images/githubpages/bootcamp_1_win_gitbash.jpg&#34; alt=&#34;Git Bash&#34; /&gt;&lt;/p&gt;
&lt;div id=&#34;检查ssh-keys的设置&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.2.1&lt;/span&gt; 1、检查SSH keys的设置&lt;/h3&gt;
&lt;p&gt;首先我们需要检查你电脑上现有的ssh key：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd ~/.ssh&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果显示“No such file or directory”，跳到第三步，否则继续。&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;备份和移除原来的ssh-key设置&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.2.2&lt;/span&gt; 2、备份和移除原来的ssh key设置：&lt;/h3&gt;
&lt;p&gt;因为已经存在key文件，所以需要备份旧的数据并删除：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ls
config  id_rsa  id_rsa.pub  known_hosts
$ mkdir key_backup
$ cp id_rsa* key_backup
$ rm id_rsa*&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;生成新的ssh-key&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.2.3&lt;/span&gt; 3、生成新的SSH Key：&lt;/h3&gt;
&lt;p&gt;输入下面的代码，就可以生成新的key文件，我们只需要默认设置就好，所以当需要输入文件名的时候，回车就好。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ssh-keygen -t rsa -C &amp;quot;邮件地址@youremail.com&amp;quot;
Generating public/private rsa key pair.
Enter file in which to save the key (/Users/your_user_directory/.ssh/id_rsa):&amp;lt;回车就好&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后系统会要你输入加密串（&lt;a href=&#34;http://help.github.com/ssh-key-passphrases/&#34;&gt;Passphrase&lt;/a&gt;）：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Enter passphrase (empty for no passphrase):&amp;lt;输入加密串&amp;gt;
Enter same passphrase again:&amp;lt;再次输入加密串&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;最后看到这样的界面，就成功设置ssh key了：
&lt;img src=&#34;/images/githubpages/ssh-key-set.png&#34; alt=&#34;ssh key success&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;添加ssh-key到github&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.2.4&lt;/span&gt; 4、添加SSH Key到GitHub：&lt;/h3&gt;
&lt;p&gt;在本机设置SSH Key之后，需要添加到GitHub上，以完成SSH链接的设置。&lt;/p&gt;
&lt;p&gt;用文本编辑工具打开id_rsa.pub文件，如果看不到这个文件，你需要设置显示隐藏文件。准确的复制这个文件的内容，才能保证设置的成功。&lt;/p&gt;
&lt;p&gt;在GitHub的主页上点击设置按钮：
&lt;img src=&#34;/images/githubpages/github-account-setting.png&#34; alt=&#34;github account setting&#34; /&gt;&lt;/p&gt;
&lt;p&gt;选择SSH Keys项，把复制的内容粘贴进去，然后点击Add Key按钮即可：
&lt;img src=&#34;/images/githubpages/bootcamp_1_ssh.jpg&#34; alt=&#34;set ssh keys&#34; /&gt;&lt;/p&gt;
&lt;p&gt;PS：如果需要配置多个GitHub账号，可以参看这个&lt;a href=&#34;http://omiga.org/blog/archives/2269&#34;&gt;多个github帐号的SSH key切换&lt;/a&gt;，不过需要提醒一下的是，如果你只是通过这篇文章中所述配置了Host，那么你多个账号下面的提交用户会是一个人，所以需要通过命令&lt;code&gt;git config --global --unset user.email&lt;/code&gt;删除用户账户设置，在每一个repo下面使用&lt;code&gt;git config --local user.email &#39;你的github邮箱@mail.com&#39;&lt;/code&gt; 命令单独设置用户账户信息&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;测试一下&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.2.5&lt;/span&gt; 5、测试一下&lt;/h3&gt;
&lt;p&gt;可以输入下面的命令，看看设置是否成功，&lt;code&gt;git@github.com&lt;/code&gt;的部分不要修改：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ssh -T git@github.com&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果是下面的反应：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;The authenticity of host &amp;#39;github.com (207.97.227.239)&amp;#39; can&amp;#39;t be established.
RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.
Are you sure you want to continue connecting (yes/no)?&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;不要紧张，输入&lt;code&gt;yes&lt;/code&gt;就好，然后会看到：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Hi &amp;lt;em&amp;gt;username&amp;lt;/em&amp;gt;! You&amp;#39;ve successfully authenticated, but GitHub does not provide shell access.&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;设置你的账号信息&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.2.6&lt;/span&gt; 6、设置你的账号信息&lt;/h3&gt;
&lt;p&gt;现在你已经可以通过SSH链接到GitHub了，还有一些个人信息需要完善的。&lt;/p&gt;
&lt;p&gt;Git会根据用户的名字和邮箱来记录提交。GitHub也是用这些信息来做权限的处理，输入下面的代码进行个人信息的设置，把名称和邮箱替换成你自己的，名字必须是你的真名，而不是GitHub的昵称。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git config --global user.name &amp;quot;你的名字&amp;quot;
$ git config --global user.email &amp;quot;your_email@youremail.com&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;设置github的token&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.2.6.1&lt;/span&gt; 设置GitHub的token&lt;/h4&gt;
&lt;p&gt;2012-4-28补充：新版的接口已经不需要配置token了，所以下面这段可以跳过了&lt;/p&gt;
&lt;p&gt;有些工具没有通过SSH来链接GitHub。如果要使用这类工具，你需要找到然后设置你的API Token。&lt;/p&gt;
&lt;p&gt;在GitHub上，你可以点击&lt;em&gt;Account Setting &amp;gt; Account Admin&lt;/em&gt;：
&lt;img src=&#34;/images/githubpages/bootcamp_1_token.jpg&#34; alt=&#34;set ssh keys&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后在你的命令行中，输入下面的命令，把token添加进去：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git config --global user.name &amp;quot;你的名字&amp;quot;
$ git config --global user.token 0123456789your123456789token&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果你改了GitHub的密码，需要重新设置token。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;成功了&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.2.7&lt;/span&gt; 成功了&lt;/h3&gt;
&lt;p&gt;好了，你已经可以成功连接GitHub了。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;使用github-pages建立博客&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.3&lt;/span&gt; 使用GitHub Pages建立博客&lt;/h2&gt;
&lt;p&gt;与GitHub建立好链接之后，就可以方便的使用它提供的Pages服务，GitHub Pages分两种，一种是你的GitHub用户名建立的&lt;code&gt;username.github.io&lt;/code&gt;这样的用户&amp;amp;组织页（站），另一种是依附项目的pages。&lt;/p&gt;
&lt;div id=&#34;user-organization-pages&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.3.1&lt;/span&gt; User &amp;amp; Organization Pages&lt;/h3&gt;
&lt;p&gt;想建立个人博客是用的第一种，形如&lt;code&gt;beiyuu.github.io&lt;/code&gt;这样的可访问的站，每个用户名下面只能建立一个，创建之后点击&lt;code&gt;Admin&lt;/code&gt;进入项目管理，可以看到是这样的：
&lt;img src=&#34;/images/githubpages/user-pages.png&#34; alt=&#34;user pages&#34; /&gt;
而普通的项目是这样的，即使你也是用的&lt;code&gt;othername.github.io&lt;/code&gt;：
&lt;img src=&#34;/images/githubpages/other-pages.png&#34; alt=&#34;other pages&#34; /&gt;&lt;/p&gt;
&lt;p&gt;创建好&lt;code&gt;username.github.io&lt;/code&gt;项目之后，提交一个&lt;code&gt;index.html&lt;/code&gt;文件，然后&lt;code&gt;push&lt;/code&gt;到GitHub的&lt;code&gt;master&lt;/code&gt;分支（也就是普通意义上的主干）。第一次页面生效需要一些时间，大概10分钟左右。&lt;/p&gt;
&lt;p&gt;生效之后，访问&lt;code&gt;username.github.io&lt;/code&gt;就可以看到你上传的页面了，&lt;a href=&#34;http://beiyuu.github.io&#34;&gt;beiyuu.github.io&lt;/a&gt;就是一个例子。&lt;/p&gt;
&lt;p&gt;关于第二种项目&lt;code&gt;pages&lt;/code&gt;，简单提一下，他和用户pages使用的后台程序是同一套，只不过它的目的是项目的帮助文档等跟项目绑定的内容，所以需要在项目的&lt;code&gt;gh-pages&lt;/code&gt;分支上去提交相应的文件，GitHub会自动帮你生成项目pages。具体的使用帮助可以参考&lt;a href=&#34;http://pages.github.com/&#34; title=&#34;Github Pages&#34;&gt;Github Pages&lt;/a&gt;的官方文档：&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;绑定域名&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.3.2&lt;/span&gt; 绑定域名&lt;/h3&gt;
&lt;p&gt;我们在第一部分就提到了在DNS部分的设置，再来看在GitHub的配置，要想让&lt;code&gt;username.github.io&lt;/code&gt;能通过你自己的域名来访问，需要在项目的根目录下新建一个名为&lt;code&gt;CNAME&lt;/code&gt;的文件，文件内容形如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;beiyuu.com&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;你也可以绑定在二级域名上：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;blog.beiyuu.com&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;需要提醒的一点是，如果你使用形如&lt;code&gt;beiyuu.com&lt;/code&gt;这样的一级域名的话，需要在DNS处设置A记录到&lt;code&gt;207.97.227.245&lt;/code&gt;（&lt;strong&gt;这个地址会有变动，&lt;a href=&#34;https://help.github.com/articles/my-custom-domain-isn-t-working&#34;&gt;这里&lt;/a&gt;查看&lt;/strong&gt;），而不是在DNS处设置为CNAME的形式，否则可能会对其他服务（比如email）造成影响。&lt;/p&gt;
&lt;p&gt;设置成功后，根据DNS的情况，最长可能需要一天才能生效，耐心等待吧。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;jekyll模板系统&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.4&lt;/span&gt; Jekyll模板系统&lt;/h2&gt;
&lt;p&gt;GitHub Pages为了提供对HTML内容的支持，选择了&lt;a href=&#34;https://github.com/mojombo/jekyll&#34; title=&#34;Jekyll&#34;&gt;Jekyll&lt;/a&gt;作为模板系统，Jekyll是一个强大的静态模板系统，作为个人博客使用，基本上可以满足要求，也能保持管理的方便，你可以查看&lt;a href=&#34;https://github.com/mojombo/jekyll/blob/master/README.textile&#34;&gt;Jekyll官方文档&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;你可以直接fork&lt;a href=&#34;https://github.com/beiyuu/Github-Pages-Example&#34;&gt;我的项目&lt;/a&gt;，然后改名，就有了你自己的满足Jekyll要求的文档了，当然你也可以按照下面的介绍自己创建。&lt;/p&gt;
&lt;div id=&#34;jekyll基本结构&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.4.1&lt;/span&gt; Jekyll基本结构&lt;/h3&gt;
&lt;p&gt;Jekyll的核心其实就是一个文本的转换引擎，用你最喜欢的标记语言写文档，可以是Markdown、Textile或者HTML等等，再通过&lt;code&gt;layout&lt;/code&gt;将文档拼装起来，根据你设置的URL规则来展现，这些都是通过严格的配置文件来定义，最终的产出就是web页面。&lt;/p&gt;
&lt;p&gt;基本的Jekyll结构如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;|-- _config.yml
|-- _includes
|-- _layouts
|   |-- default.html
|   `-- post.html
|-- _posts
|   |-- 2007-10-29-why-every-programmer-should-play-nethack.textile
|   `-- 2009-04-26-barcamp-boston-4-roundup.textile
|-- _site
`-- index.html&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;简单介绍一下他们的作用：&lt;/p&gt;
&lt;div id=&#34;config.yml&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.4.1.1&lt;/span&gt; _config.yml&lt;/h4&gt;
&lt;p&gt;配置文件，用来定义你想要的效果，设置之后就不用关心了。&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;includes-可以用来存放一些小的可复用的模块方便通过-include-file.ext-去掉前两个中或者与中的空格下同灵活的调用这条命令会调用_includesfile.ext文件&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.4.1.2&lt;/span&gt; _includes
可以用来存放一些小的可复用的模块，方便通过&lt;code&gt;{ % include file.ext %}&lt;/code&gt;（去掉前两个{中或者{与%中的空格，下同）灵活的调用。这条命令会调用_includes/file.ext文件。&lt;/h4&gt;
&lt;/div&gt;
&lt;div id=&#34;layouts-这是模板文件存放的位置模板需要通过yaml-front-matter9来定义后面会讲到-content-标记用来将数据插入到这些模板中来&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.4.1.3&lt;/span&gt; _layouts
这是模板文件存放的位置。模板需要通过&lt;a href=&#34;https://github.com/mojombo/jekyll/wiki/YAML-Front-Matter&#34;&gt;YAML front matter&lt;/a&gt;来定义，后面会讲到，&lt;code&gt;{ { content }}&lt;/code&gt;标记用来将数据插入到这些模板中来。&lt;/h4&gt;
&lt;/div&gt;
&lt;div id=&#34;posts-你的动态内容一般来说就是你的博客正文存放的文件夹他的命名有严格的规定必须是2012-02-22-artical-title.markup这样的形式markup是你所使用标记语言的文件后缀名根据_config.yml中设定的链接规则可以根据你的文件名灵活调整文章的日期和标记语言后缀与文章的标题的独立的&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.4.1.4&lt;/span&gt; _posts
你的动态内容，一般来说就是你的博客正文存放的文件夹。他的命名有严格的规定，必须是&lt;code&gt;2012-02-22-artical-title.MARKUP&lt;/code&gt;这样的形式，MARKUP是你所使用标记语言的文件后缀名，根据_config.yml中设定的链接规则，可以根据你的文件名灵活调整，文章的日期和标记语言后缀与文章的标题的独立的。&lt;/h4&gt;
&lt;/div&gt;
&lt;div id=&#34;site-这个是jekyll生成的最终的文档不用去关心最好把他放在你的.gitignore文件中忽略它&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.4.1.5&lt;/span&gt; _site
这个是Jekyll生成的最终的文档，不用去关心。最好把他放在你的&lt;code&gt;.gitignore&lt;/code&gt;文件中忽略它。&lt;/h4&gt;
&lt;/div&gt;
&lt;div id=&#34;其他文件夹&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.4.1.6&lt;/span&gt; 其他文件夹&lt;/h4&gt;
&lt;p&gt;你可以创建任何的文件夹，在根目录下面也可以创建任何文件，假设你创建了&lt;code&gt;project&lt;/code&gt;文件夹，下面有一个&lt;code&gt;github-pages.md&lt;/code&gt;的文件，那么你就可以通过&lt;code&gt;yoursite.com/project/github-pages&lt;/code&gt;访问的到，如果你是使用一级域名的话。文件后缀可以是&lt;code&gt;.html&lt;/code&gt;或者&lt;code&gt;markdown&lt;/code&gt;或者&lt;code&gt;textile&lt;/code&gt;。这里还有很多的例子：&lt;a href=&#34;https://github.com/mojombo/jekyll/wiki/Sites&#34;&gt;https://github.com/mojombo/jekyll/wiki/Sites&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;jekyll的配置&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.4.2&lt;/span&gt; Jekyll的配置&lt;/h3&gt;
&lt;p&gt;Jekyll的配置写在_config.yml文件中，可配置项有很多，我们不去一一追究了，很多配置虽有用但是一般不需要去关心，&lt;a href=&#34;https://github.com/mojombo/jekyll/wiki/configuration&#34;&gt;官方配置文档&lt;/a&gt;有很详细的说明，确实需要了可以去这里查，我们主要说两个比较重要的东西，一个是&lt;code&gt;Permalink&lt;/code&gt;，还有就是自定义项。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Permalink&lt;/code&gt;项用来定义你最终的文章链接是什么形式，他有下面几个变量：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;year&lt;/code&gt; 文件名中的年份&lt;/li&gt;
&lt;li&gt;&lt;code&gt;month&lt;/code&gt; 文件名中的月份&lt;/li&gt;
&lt;li&gt;&lt;code&gt;day&lt;/code&gt; 文件名中的日期&lt;/li&gt;
&lt;li&gt;&lt;code&gt;title&lt;/code&gt; 文件名中的文章标题&lt;/li&gt;
&lt;li&gt;&lt;code&gt;categories&lt;/code&gt; 文章的分类，如果文章没有分类，会忽略&lt;/li&gt;
&lt;li&gt;&lt;code&gt;i-month&lt;/code&gt; 文件名中的除去前缀0的月份&lt;/li&gt;
&lt;li&gt;&lt;code&gt;i-day&lt;/code&gt; 文件名中的除去前缀0的日期&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;看看最终的配置效果：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;permalink: pretty&lt;/code&gt; /2009/04/29/slap-chop/index.html&lt;/li&gt;
&lt;li&gt;&lt;code&gt;permalink: /:month-:day-:year/:title.html&lt;/code&gt; /04-29-2009/slap-chop.html&lt;/li&gt;
&lt;li&gt;&lt;code&gt;permalink: /blog/:year/:month/:day/:title&lt;/code&gt; /blog/2009/04/29/slap-chop/index.html&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我使用的是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;permalink: /:title&lt;/code&gt; /github-pages&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;自定义项的内容，例如我们定义了&lt;code&gt;title:BeiYuu的博客&lt;/code&gt;这样一项，那么你就可以在文章中使用&lt;code&gt;{ { site.title }}&lt;/code&gt;来引用这个变量了，非常方便定义些全局变量。&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;yaml-front-matter和模板变量&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.4.3&lt;/span&gt; YAML Front Matter和模板变量&lt;/h3&gt;
&lt;p&gt;对于使用YAML定义格式的文章，Jekyll会特别对待，他的格式要求比较严格，必须是这样的形式：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;---
layout: post
title: Blogging Like a Hacker
---&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;前后的&lt;code&gt;---&lt;/code&gt;不能省略，在这之间，你可以定一些你需要的变量，layout就是调用&lt;code&gt;_layouts&lt;/code&gt;下面的某一个模板，他还有一些其他的变量可以使用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;permalink&lt;/code&gt; 你可以对某一篇文章使用通用设置之外的永久链接&lt;/li&gt;
&lt;li&gt;&lt;code&gt;published&lt;/code&gt; 可以单独设置某一篇文章是否需要发布&lt;/li&gt;
&lt;li&gt;&lt;code&gt;category&lt;/code&gt; 设置文章的分类&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tags&lt;/code&gt; 设置文章的tag&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上面的&lt;code&gt;title&lt;/code&gt;就是自定义的内容，你也可以设置其他的内容，在文章中可以通过&lt;code&gt;{ { page.title }}&lt;/code&gt;这样的形式调用。&lt;/p&gt;
&lt;p&gt;模板变量，我们之前也涉及了不少了，还有其他需要的变量，可以参考官方的文档：&lt;a href=&#34;https://github.com/mojombo/jekyll/wiki/template-data&#34; title=&#34;Jekyll Template Data&#34;&gt;https://github.com/mojombo/jekyll/wiki/template-data&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;使用disqus管理评论&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.5&lt;/span&gt; 使用Disqus管理评论&lt;/h2&gt;
&lt;p&gt;模板部分到此就算是配置完毕了，但是Jekyll只是个静态页面的发布系统，想做到关爽场倒是很容易，如果想要评论呢？也很简单。&lt;/p&gt;
&lt;p&gt;现在专做评论模块的产品有很多，比如&lt;a href=&#34;http://disqus.com/&#34;&gt;Disqus&lt;/a&gt;，还有国产的&lt;a href=&#34;http://duoshuo.com/&#34;&gt;多说&lt;/a&gt;，Disqus对现在各种系统的支持都比较全面，到写博客为止，多说现在仅是WordPress的一个插件，所以我这里暂时也使用不了，多说与国内的社交网络紧密结合，还是有很多亮点的，值得期待一下。我先选择了Disqus。&lt;/p&gt;
&lt;p&gt;注册账号什么的就不提了，Disqus支持很多的博客平台，参见下图：
&lt;img src=&#34;/images/githubpages/disqus-site.jpg&#34; alt=&#34;Disqus sites&#34; /&gt;&lt;/p&gt;
&lt;p&gt;我们选择最下面的&lt;code&gt;Universal Code&lt;/code&gt;就好，然后会看到一个介绍页面，把下面这段代码复制到你的模板里面，可以只复制到显示文章的模板中：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;div id=&amp;quot;disqus_thread&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = &amp;#39;example&amp;#39;; // required: replace example with your forum shortname 这个地方需要改成你配置的网站名

    /* * * DON&amp;#39;T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement(&amp;#39;script&amp;#39;); dsq.type = &amp;#39;text/javascript&amp;#39;; dsq.async = true;
        dsq.src = &amp;#39;http://&amp;#39; + disqus_shortname + &amp;#39;.disqus.com/embed.js&amp;#39;;
        (document.getElementsByTagName(&amp;#39;head&amp;#39;)[0] || document.getElementsByTagName(&amp;#39;body&amp;#39;)[0]).appendChild(dsq);
    })();
&amp;lt;/script&amp;gt;
&amp;lt;noscript&amp;gt;Please enable JavaScript to view the &amp;lt;a href=&amp;quot;http://disqus.com/?ref_noscript&amp;quot;&amp;gt;comments powered by Disqus.&amp;lt;/a&amp;gt;&amp;lt;/noscript&amp;gt;
&amp;lt;a href=&amp;quot;http://disqus.com&amp;quot; class=&amp;quot;dsq-brlink&amp;quot;&amp;gt;blog comments powered by &amp;lt;span class=&amp;quot;logo-disqus&amp;quot;&amp;gt;Disqus&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;配置完之后，你也可以做一些异步加载的处理，提高性能，比如我就在最开始页面打开的时候不显示评论，当你想看评论的时候，点击“显示评论”再加载Disqus的模块。代码很简单，你可以参考我的写法。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$(&amp;#39;#disqus_container .comment&amp;#39;).on(&amp;#39;click&amp;#39;,function(){
        $(this).html(&amp;#39;加载中...&amp;#39;);
        var disqus_shortname = &amp;#39;beiyuu&amp;#39;;
        var that = this;
        BYB.includeScript(&amp;#39;http://&amp;#39; + disqus_shortname + &amp;#39;.disqus.com/embed.js&amp;#39;,function(){$(that).remove()}); //这是一个加载js的函数
});&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果你不喜欢Disqus的样式，你也可以根据他生成的HTML结构，自己改写样式覆盖它的，Disqus现在也提供每个页面的评论数接口，&lt;a href=&#34;http://docs.disqus.com/developers/universal/&#34;&gt;帮助文档&lt;/a&gt;在这里可以看到。&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;代码高亮插件&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.6&lt;/span&gt; 代码高亮插件&lt;/h2&gt;
&lt;p&gt;如果写技术博客，代码高亮少不了，有两个可选插件&lt;a href=&#34;http://mihai.bazon.net/projects/javascript-syntax-highlighting-engine&#34;&gt;DlHightLight代码高亮组件&lt;/a&gt;和&lt;a href=&#34;http://code.google.com/p/google-code-prettify/&#34;&gt;Google Code Prettify&lt;/a&gt;。DLHightLight支持的语言相对较少一些，有js、css、xml和html，Google的高亮插件基本上任何语言都支持，也可以自定义语言，也支持自动识别，也有行号的特别支持。&lt;/p&gt;
&lt;p&gt;Google的高亮插件使用也比较方便，只需要在&lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt;的标签上加入&lt;code&gt;prettyprint&lt;/code&gt;即可。所以我选择了Google Code Prettify。&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;搭建本地jekyll环境&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.7&lt;/span&gt; 搭建本地jekyll环境&lt;/h2&gt;
&lt;p&gt;这里主要介绍一下在Mac OS X下面的安装过程，其他操作系统可以参考官方的&lt;a href=&#34;https://github.com/mojombo/jekyll/wiki/Install&#34;&gt;jekyll安装&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;作为生活在水深火热的墙内人民，有必要进行下面一步修改gem的源，方便我们更快的下载所需组建：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo gem sources --remove http://rubygems.org/
sudo gem sources -a http://ruby.taobao.org/&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后用Gem安装jekyll&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ gem install jekyll&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;不过一般如果有出错提示，你可能需要这样安装：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo gem install jekyll&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我到了这一步的时候总是提示错误&lt;code&gt;Failed to build gem native extension&lt;/code&gt;，很可能的一个原因是没有安装rvm，&lt;a href=&#34;https://rvm.io/rvm/install/&#34;&gt;rvm的安装&lt;/a&gt;可以参考这里，或者敲入下面的命令：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ curl -L https://get.rvm.io | bash -s stable --ruby&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后还需要安装Markdown的解释器，这个需要在你的_config.yml里面设置&lt;code&gt;markdown:rdiscount&lt;/code&gt;：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ gem install jekyll rdiscount&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;好了，如果一切顺利的话，本地环境就基本搭建完成了，进入之前我们建立的博客目录，运行下面的命令：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ jekyll serve --watch&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这个时候，你就可以通过&lt;code&gt;localhost:4000&lt;/code&gt;来访问了。还有关于&lt;a href=&#34;http://jekyllbootstrap.com/&#34;&gt;jekyll bootstrap&lt;/a&gt;的资料，需要自己修改调试的，可以研究一下。&lt;/p&gt;
&lt;p&gt;我在这个过程中还遇到两个诡异的没有解决的问题，一个是我放在根目录下面的blog.md等文件，在GitHub的pages服务上一切正常，可以通过&lt;code&gt;beiyuu.com/blog&lt;/code&gt;访问的到，但是在本地环境下，总是&lt;code&gt;not found&lt;/code&gt;，很是让人郁闷，看生成的&lt;code&gt;_site&lt;/code&gt;目录下面的文件，也是正常的&lt;code&gt;blog.html&lt;/code&gt;，但就是找不到，只有当我把URL改为&lt;code&gt;localhost:4000/blog.html&lt;/code&gt;的时候，才能访问的到，环境不同真糟糕。&lt;/p&gt;
&lt;p&gt;还有一个是关于&lt;code&gt;category&lt;/code&gt;的问题，根据&lt;code&gt;YAML&lt;/code&gt;的语法，我们在文章头部可以定义文章所属的类别，也可以定义为&lt;code&gt;category:[blog,rss]&lt;/code&gt;这样子的多类别，我在本地试一切正常，但是push到GitHub之后，就无法读取了，真让人着急，没有办法，只能采用别的办法满足我的需求了。这里还有一篇&lt;a href=&#34;http://chxt6896.github.com/blog/2012/02/13/blog-jekyll-native.html&#34;&gt;Jekyll 本地调试之若干问题&lt;/a&gt;，安装中如果有其他问题，也可以对照参考一下。&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;结语&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.8&lt;/span&gt; 结语&lt;/h2&gt;
&lt;p&gt;如果你跟着这篇不那么详尽的教程，成功搭建了自己的博客，恭喜你！剩下的就是保持热情的去写自己的文章吧。&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>MetCleaning instruction</title>
      <link>/post/2016-11-25-metcleaning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/post/2016-11-25-metcleaning/</guid>
      <description>

&lt;h2 id=&#34;introduction&#34;&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;MetCleaning&lt;/em&gt; provides an integrated and automatic pipeline for data cleaning and statistical analysis of large scale mass spectrometry (MS) based-metabolomic data. It includes missing value (MV) filtering and imputation, zero value filtering, data normalization, data integration, data quality assessment, univariate statistical analysis, multivariate statistical analysis such as PCA and PLS-DA, potential marker selection and show. This document describes how to use the integrated functions, &lt;em&gt;MetClean&lt;/em&gt; and &lt;em&gt;MetStat&lt;/em&gt; in &lt;em&gt;MetCleaning&lt;/em&gt; utilizing demo data.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/images/metcleaning/workflow for instruction.jpg&#34; alt=&#34;Figure1 Workflow of *MetCleaning*&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;installation-and-help&#34;&gt;&lt;strong&gt;Installation and help&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;MetCleaning&lt;/em&gt; is published in github &lt;a href=&#34;https://github.com/jaspershen/MetCleaning&#34; target=&#34;_blank&#34;&gt;(link)&lt;/a&gt;. So you can install it via to github.&lt;/p&gt;

&lt;p&gt;code 1: Installation of &lt;em&gt;MetCleaning&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;##pcaMethods and impute should be installed form bioconductor
##pcaMethos
source(&amp;quot;http://bioconductor.org/biocLite.R&amp;quot;)
    biocLite(&amp;quot;pcaMethods&amp;quot;)
##impute
source(&amp;quot;http://bioconductor.org/biocLite.R&amp;quot;)
    biocLite(&amp;quot;impute&amp;quot;)
 if(!require(devtools)) {
  install.packages(&amp;quot;devtools&amp;quot;)
 }
 library(devtools)
 install_github(&amp;quot;jaspershen/MetCleaning&amp;quot;)
 library(MetCleaning)
 help(package = &amp;quot;MetCleaning&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;data-cleaning&#34;&gt;&lt;strong&gt;Data cleaning&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;Data cleaning is integrated as a function named as &lt;em&gt;MetClean&lt;/em&gt; in &lt;em&gt;MetCleaning&lt;/em&gt;. We use the demo data as the example. Copy the code below and paste in you R console.&lt;/p&gt;

&lt;p&gt;code 2: Demo data of &lt;em&gt;MetClean&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;##demo data
data(data, package = &amp;quot;MetCleaning&amp;quot;)
data(sample.information, package = &amp;quot;MetCleaning&amp;quot;)
##demo work directory
dir.create(&amp;quot;Demo for MetCleaning&amp;quot;)
setwd(&amp;quot;Demo for MetCleaning&amp;quot;)
##write files
write.csv(data, &amp;quot;data.csv&amp;quot;, row.names = FALSE)
write.csv(sample.information , &amp;quot;sample.information.csv&amp;quot;, row.names = FALSE)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The demo data have been added in your work directory and organized in you work directory as Figure 2 shows. It contains two files, &amp;ldquo;data.csv&amp;rdquo; and &amp;ldquo;sample.information.csv&amp;rdquo;.
1. &amp;ldquo;data.csv&amp;rdquo; is the metabolomic dataset you want to process. Rows are features and columns are feature abundance of samples and information of features. The information of features must contain &amp;ldquo;name&amp;rdquo; (feature name), &amp;ldquo;mz&amp;rdquo; (mass to change ratio) and &amp;ldquo;rt&amp;rdquo; (retention time). Other information of features are optional, for example &amp;ldquo;isotopes&amp;rdquo; and &amp;ldquo;adducts&amp;rdquo;. The name of sample can contain &amp;ldquo;.&amp;rdquo;, but cannot contain &amp;ldquo;-&amp;rdquo; and space. And the start of sample name cannot be number. &lt;strong&gt;For example, &amp;ldquo;A210.a&amp;rdquo; and &amp;ldquo;A210a&amp;rdquo; are valid, and &amp;ldquo;210a&amp;rdquo; or &amp;ldquo;210-a&amp;rdquo; are invalid.&lt;/strong&gt;
2. &amp;ldquo;sample.information.csv&amp;rdquo; is sample information for metabolomic dataset. Column 1 is &amp;ldquo;sample.name&amp;rdquo; which is the names of subject and QC samples. Please confirm that the sample names in &amp;ldquo;sample.information.csv&amp;rdquo; and &amp;ldquo;data.csv&amp;rdquo; are completely same. Column 2 is &amp;ldquo;injection.order&amp;rdquo; which is the injection order of QC and subject samples. Column 3 is &amp;ldquo;class&amp;rdquo;, which is used to distinguish &amp;ldquo;QC&amp;rdquo; and &amp;ldquo;Subject&amp;rdquo; samples. Column 4 is &amp;ldquo;batch&amp;rdquo; to provide acquisition batch information for samples. Column 5 is &amp;ldquo;group&amp;rdquo;, which is used to label the group of subject sample, for example, &amp;ldquo;control&amp;rdquo; and &amp;ldquo;case&amp;rdquo;. The &amp;ldquo;group&amp;rdquo; of QC samples is labeled as &amp;ldquo;QC&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/images/metcleaning/data organisation.jpg&#34; alt=&#34;Figure2 Data organisation of MetCleaning&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Then you can run &lt;em&gt;MetClean&lt;/em&gt; function to do data cleaning of data. All the arguments of &lt;em&gt;MetClean&lt;/em&gt; can be found in the other functions in &lt;em&gt;MetCleaning&lt;/em&gt;. You can use &lt;em&gt;help(package = &amp;ldquo;MetCleaning&amp;rdquo;)&lt;/em&gt; to see the help page of &lt;em&gt;MetCleaning&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;code 3: Running of &lt;em&gt;MetClean&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;##demo data
MetClean(polarity = &amp;quot;positive&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Running results of &lt;em&gt;MetClean&lt;/em&gt;
1.Missing or zero values filtering. In the missing or zero value filtering step, if there are samples which beyond the threshold you set, you should decide to filter them or not. We recommend to remove all of them as Figure 3 shows.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/images/metcleaning/mv filter.jpg&#34; alt=&#34;Figure3 Missing or zero value filtering&#34; /&gt;&lt;/p&gt;

&lt;p&gt;2.Sample filtering. In the QC or subject sample filtering step (based on PCA), if there are samples which beyond the threshold you set, you should decide to filter them or not. We don&amp;rsquo;t recommend to remove them as Figure 4 shows, because they should be consired combined other information.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/images/metcleaning/sample filter.jpg&#34; alt=&#34;Figure4 Sample filtering&#34; /&gt;&lt;/p&gt;

&lt;p&gt;3.Output files. Output files of &lt;em&gt;MetClean&lt;/em&gt; are listed as Figure 5 shows.
(1) &amp;ldquo;1MV overview&amp;rdquo;, &amp;ldquo;2MV filter&amp;rdquo;, &amp;ldquo;3Zero overview&amp;rdquo; and &amp;ldquo;4Zero filter&amp;rdquo; are missing and zero values filtering information.
(2) &amp;ldquo;5QC outlier filter&amp;rdquo; and &amp;ldquo;6Subject outlier filter&amp;rdquo; are sample filtering based on PCA information.
(3) &amp;ldquo;7Normalization result&amp;rdquo; is the data normalization information for each batch.
(4) &amp;ldquo;8Batch effect&amp;rdquo; is the batch effect both in before and after data cleaning.
(5) &amp;ldquo;9metabolite plot&amp;rdquo; is the scatter plot for each feature.
(6) &amp;ldquo;10Data overview&amp;rdquo; is the overview of data.
(7) &amp;ldquo;11RSD overview&amp;rdquo; is the RSD distribution for each batch both before and after data cleaning.
(8) &lt;strong&gt;&amp;ldquo;data_after_pre.csv&amp;rdquo;, &amp;ldquo;qc.info.csv&amp;rdquo; and &amp;ldquo;subject.info&amp;rdquo;&lt;/strong&gt; are the data and sample information after data cleaning.
(9) &amp;ldquo;intermediate&amp;rdquo; is the intermediate data during processing.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/images/metcleaning/output files of MetClean.jpg&#34; alt=&#34;Figure5 Output files of *MetClean*&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;statistical-analysis&#34;&gt;&lt;strong&gt;Statistical analysis&lt;/strong&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;Data statistical analysis is integrated as a function named as &lt;em&gt;MetStat&lt;/em&gt; in &lt;em&gt;MetCleaning&lt;/em&gt;. We use the demo data as the example. &lt;strong&gt;Please note that now &lt;em&gt;MetStat&lt;/em&gt; can only process two class data.&lt;/strong&gt; Copy the code below and paste in you R console.&lt;/p&gt;

&lt;p&gt;code 4: Demo data of &lt;em&gt;MetStat&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;data(&amp;quot;met.data.after.pre&amp;quot;, package = &amp;quot;MetCleaning&amp;quot;)
data(new.group, package = &amp;quot;MetCleaning&amp;quot;)
##create a folder for MetStat demo
dir.create(&amp;quot;Demo for MetStat&amp;quot;)
setwd(&amp;quot;Demo for MetStat&amp;quot;)
## export the demo data as csv
write.csv(new.group, &amp;quot;new.group.csv&amp;quot;, row.names = FALSE)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The demo data have been added in your work directory. &amp;ldquo;new.group.csv&amp;rdquo; is a sample.information which has been changed the group information you want to use for statistical analysis. For the sample which you don&amp;rsquo;t want to use them for statistical analysis, you can set they group information as NA like Figure 6 shows.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/images/metcleaning/new.group.jpg&#34; alt=&#34;Figure6 new group information&#34; /&gt;&lt;/p&gt;

&lt;p&gt;code 5: Running of &lt;em&gt;MetStat&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;MetStat(MetFlowData = met.data.after.pre, new.group = TRUE)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Running results of &lt;em&gt;MetStat&lt;/em&gt;
1.Sample removing. Firstly, you need to confirm the samples which you want to remove form dataset as Figure 7 shows.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/images/metcleaning/sample remove.jpg&#34; alt=&#34;Figure7 sample removing confirmation&#34; /&gt;&lt;/p&gt;

&lt;p&gt;2.Number of component selection in PLS-DA analysis. In PLS-DA analysis, you should manually select the best choice of the number of component. When the Console show &amp;ldquo;How many comps do you want to see?&amp;rdquo;, you can type 10 and enter &amp;ldquo;Enter&amp;rdquo; key. Then a MSE plot is showing, and the best number of component is the one has the smallest CV values. So type the number (in this example is 4) and enter &amp;ldquo;Enter&amp;rdquo; key.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/images/metcleaning/PLS analysis.jpg&#34; alt=&#34;Figure8 Number of component selection in PLS-DA analysis&#34; /&gt;&lt;/p&gt;

&lt;p&gt;3.Output files. Output files of &lt;em&gt;MetStat&lt;/em&gt; are listed as Figure 9 shows.
(1) &amp;ldquo;12PCA analysis&amp;rdquo; is the PCA score plot.
(2) &amp;ldquo;13PLS analysis&amp;rdquo; contains the PLS-DA results.
(3) &amp;ldquo;14heatmap&amp;rdquo; is the heatmap.
(4) &amp;ldquo;15marker selection&amp;rdquo; contains the information of markers, volcano plot and boxplots of markers.
(5) &lt;strong&gt;&amp;ldquo;data_after_stat.csv&amp;rdquo;, &amp;ldquo;qc.info.csv&amp;rdquo; and &amp;ldquo;subject.info&amp;rdquo;&lt;/strong&gt; are the data and sample information after statistical analysis.
(6) &amp;ldquo;intermediate&amp;rdquo; is the intermediate data during processing.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/images/metcleaning/output files of MetStat.jpg&#34; alt=&#34;Figure9 Output files of *MetStat*&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>使用Github Pages建独立博客</title>
      <link>/post/2012-02-22-github-pages/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/post/2012-02-22-github-pages/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;http://github.com&#34; title=&#34;Github&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt;很好的将代码和社区联系在了一起，于是发生了很多有趣的事情，世界也因为他美好了一点点。Github作为现在最流行的代码仓库，已经得到很多大公司和项目的青睐，比如&lt;a href=&#34;https://github.com/jquery/jquery&#34; title=&#34;jQuery@github&#34; target=&#34;_blank&#34;&gt;jQuery&lt;/a&gt;、&lt;a href=&#34;https://github.com/twitter/bootstrap&#34; title=&#34;Twitter@github&#34; target=&#34;_blank&#34;&gt;Twitter&lt;/a&gt;等。为使项目更方便的被人理解，介绍页面少不了，甚至会需要完整的文档站，Github替你想到了这一点，他提供了&lt;a href=&#34;http://pages.github.com/&#34; title=&#34;Github Pages&#34; target=&#34;_blank&#34;&gt;Github Pages&lt;/a&gt;的服务，不仅可以方便的为项目建立介绍站点，也可以用来建立个人博客。&lt;/p&gt;

&lt;p&gt;Github Pages有以下几个优点：&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;轻量级的博客系统，没有麻烦的配置&lt;/li&gt;
    &lt;li&gt;使用标记语言，比如&lt;a href=&#34;http://markdown.tw&#34;&gt;Markdown&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;无需自己搭建服务器&lt;/li&gt;
    &lt;li&gt;根据Github的限制，对应的每个站有300MB空间&lt;/li&gt;
    &lt;li&gt;可以绑定自己的域名&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;当然他也有缺点：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;使用&lt;a href=&#34;https://github.com/mojombo/jekyll&#34; title=&#34;Jekyll&#34; target=&#34;_blank&#34;&gt;Jekyll&lt;/a&gt;模板系统，相当于静态页发布，适合博客，文档介绍等。&lt;/li&gt;
&lt;li&gt;动态程序的部分相当局限，比如没有评论，不过还好我们有解决方案。&lt;/li&gt;
&lt;li&gt;基于Git，很多东西需要动手，不像Wordpress有强大的后台&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;大致介绍到此，作为个人博客来说，简洁清爽的表达自己的工作、心得，就已达目标，所以Github Pages是我认为此需求最完美的解决方案了。&lt;/p&gt;

&lt;h2 id=&#34;购买-绑定独立域名&#34;&gt;购买、绑定独立域名&lt;/h2&gt;

&lt;p&gt;虽说&lt;a href=&#34;http://www.godaddy.com/&#34; title=&#34;Godaddy&#34; target=&#34;_blank&#34;&gt;Godaddy&lt;/a&gt;曾支持过SOPA，并且首页放着极其不专业的大胸美女，但是作为域名服务商他做的还不赖，选择它最重要的原因是他支持支付宝，没有信用卡有时真的很难过。&lt;/p&gt;

&lt;p&gt;域名的购买不用多讲，注册、选域名、支付，有网购经验的都毫无压力，优惠码也遍地皆是。域名的配置需要提醒一下，因为伟大英明的GFW的存在，我们必须多做些事情。&lt;/p&gt;

&lt;p&gt;流传Godaddy的域名解析服务器被墙掉，导致域名无法访问，后来这个事情在&lt;a href=&#34;http://beiyuu.com&#34; title=&#34;BeiYuu&#34; target=&#34;_blank&#34;&gt;BeiYuu&lt;/a&gt;也发生了，不得已需要把域名解析服务迁移到国内比较稳定的服务商处，这个迁移对于域名来说没有什么风险，最终的控制权还是在Godaddy那里，你随时都可以改回去。&lt;/p&gt;

&lt;p&gt;我们选择&lt;a href=&#34;https://www.dnspod.cn/&#34; title=&#34;DNSPod&#34; target=&#34;_blank&#34;&gt;DNSPod&lt;/a&gt;的服务，他们的产品做得不错，易用、免费，收费版有更高端的功能，暂不需要。注册登录之后，按照DNSPod的说法，只需三步（我们插入一步）：&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;首先添加域名记录，可参考DNSPod的帮助文档：&lt;a href=&#34;https://www.dnspod.cn/Support&#34;&gt;https://www.dnspod.cn/Support&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;在DNSPod自己的域名下添加一条&lt;a href=&#34;http://baike.baidu.com/view/65575.htm&#34;&gt;A记录&lt;/a&gt;，地址就是Github Pages的服务IP地址：207.97.227.245&lt;/li&gt;
    &lt;li&gt;在域名注册商处修改DNS服务:去Godaddy修改Nameservers为这两个地址：f1g1ns1.dnspod.net、f1g1ns2.dnspod.net。如果你不明白在哪里修改，可以参考这里：&lt;a href=&#34;https://www.dnspod.cn/support/index/fid/119&#34;&gt;Godaddy注册的域名如何使用DNSPod&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;等待域名解析生效&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;域名的配置部分完成，跪谢方校长。&lt;/p&gt;

&lt;h2 id=&#34;配置和使用github&#34;&gt;配置和使用Github&lt;/h2&gt;

&lt;p&gt;Git是版本管理的未来，他的优点我不再赘述，相关资料很多。推荐这本&lt;a href=&#34;http://progit.org/book/zh/&#34; title=&#34;Pro Git中文版&#34; target=&#34;_blank&#34;&gt;Git中文教程&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;要使用Git，需要安装它的客户端，推荐在Linux下使用Git，会比较方便。Windows版的下载地址在这里：&lt;a href=&#34;http://code.google.com/p/msysgit/downloads/list&#34; title=&#34;Windows版Git客户端&#34; target=&#34;_blank&#34;&gt;http://code.google.com/p/msysgit/downloads/list&lt;/a&gt;。其他系统的安装也可以参考官方的&lt;a href=&#34;http://help.github.com/mac-set-up-git/&#34; title=&#34;Mac下Git安装&#34; target=&#34;_blank&#34;&gt;安装教程&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;下载安装客户端之后，各个系统的配置就类似了，我们使用windows作为例子，Linux和Mac与此类似。&lt;/p&gt;

&lt;p&gt;在Windows下，打开Git Bash，其他系统下面则打开终端（Terminal）：
&lt;img src=&#34;/images/githubpages/bootcamp_1_win_gitbash.jpg&#34; alt=&#34;Git Bash&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;1-检查ssh-keys的设置&#34;&gt;1、检查SSH keys的设置&lt;/h3&gt;

&lt;p&gt;首先我们需要检查你电脑上现有的ssh key：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd ~/.ssh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果显示“No such file or directory”，跳到第三步，否则继续。&lt;/p&gt;

&lt;h3 id=&#34;2-备份和移除原来的ssh-key设置&#34;&gt;2、备份和移除原来的ssh key设置：&lt;/h3&gt;

&lt;p&gt;因为已经存在key文件，所以需要备份旧的数据并删除：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ls
config  id_rsa  id_rsa.pub  known_hosts
$ mkdir key_backup
$ cp id_rsa* key_backup
$ rm id_rsa*
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-生成新的ssh-key&#34;&gt;3、生成新的SSH Key：&lt;/h3&gt;

&lt;p&gt;输入下面的代码，就可以生成新的key文件，我们只需要默认设置就好，所以当需要输入文件名的时候，回车就好。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ssh-keygen -t rsa -C &amp;quot;邮件地址@youremail.com&amp;quot;
Generating public/private rsa key pair.
Enter file in which to save the key (/Users/your_user_directory/.ssh/id_rsa):&amp;lt;回车就好&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后系统会要你输入加密串（&lt;a href=&#34;http://help.github.com/ssh-key-passphrases/&#34; target=&#34;_blank&#34;&gt;Passphrase&lt;/a&gt;）：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Enter passphrase (empty for no passphrase):&amp;lt;输入加密串&amp;gt;
Enter same passphrase again:&amp;lt;再次输入加密串&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最后看到这样的界面，就成功设置ssh key了：
&lt;img src=&#34;/images/githubpages/ssh-key-set.png&#34; alt=&#34;ssh key success&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;4-添加ssh-key到github&#34;&gt;4、添加SSH Key到GitHub：&lt;/h3&gt;

&lt;p&gt;在本机设置SSH Key之后，需要添加到GitHub上，以完成SSH链接的设置。&lt;/p&gt;

&lt;p&gt;用文本编辑工具打开id_rsa.pub文件，如果看不到这个文件，你需要设置显示隐藏文件。准确的复制这个文件的内容，才能保证设置的成功。&lt;/p&gt;

&lt;p&gt;在GitHub的主页上点击设置按钮：
&lt;img src=&#34;/images/githubpages/github-account-setting.png&#34; alt=&#34;github account setting&#34; /&gt;&lt;/p&gt;

&lt;p&gt;选择SSH Keys项，把复制的内容粘贴进去，然后点击Add Key按钮即可：
&lt;img src=&#34;/images/githubpages/bootcamp_1_ssh.jpg&#34; alt=&#34;set ssh keys&#34; /&gt;&lt;/p&gt;

&lt;p&gt;PS：如果需要配置多个GitHub账号，可以参看这个&lt;a href=&#34;http://omiga.org/blog/archives/2269&#34; target=&#34;_blank&#34;&gt;多个github帐号的SSH key切换&lt;/a&gt;，不过需要提醒一下的是，如果你只是通过这篇文章中所述配置了Host，那么你多个账号下面的提交用户会是一个人，所以需要通过命令&lt;code&gt;git config --global --unset user.email&lt;/code&gt;删除用户账户设置，在每一个repo下面使用&lt;code&gt;git config --local user.email &#39;你的github邮箱@mail.com&#39;&lt;/code&gt; 命令单独设置用户账户信息&lt;/p&gt;

&lt;h3 id=&#34;5-测试一下&#34;&gt;5、测试一下&lt;/h3&gt;

&lt;p&gt;可以输入下面的命令，看看设置是否成功，&lt;code&gt;git@github.com&lt;/code&gt;的部分不要修改：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ssh -T git@github.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果是下面的反应：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;The authenticity of host &#39;github.com (207.97.227.239)&#39; can&#39;t be established.
RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.
Are you sure you want to continue connecting (yes/no)?
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;不要紧张，输入&lt;code&gt;yes&lt;/code&gt;就好，然后会看到：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Hi &amp;lt;em&amp;gt;username&amp;lt;/em&amp;gt;! You&#39;ve successfully authenticated, but GitHub does not provide shell access.
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;6-设置你的账号信息&#34;&gt;6、设置你的账号信息&lt;/h3&gt;

&lt;p&gt;现在你已经可以通过SSH链接到GitHub了，还有一些个人信息需要完善的。&lt;/p&gt;

&lt;p&gt;Git会根据用户的名字和邮箱来记录提交。GitHub也是用这些信息来做权限的处理，输入下面的代码进行个人信息的设置，把名称和邮箱替换成你自己的，名字必须是你的真名，而不是GitHub的昵称。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git config --global user.name &amp;quot;你的名字&amp;quot;
$ git config --global user.email &amp;quot;your_email@youremail.com&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;设置github的token&#34;&gt;设置GitHub的token&lt;/h4&gt;

&lt;p&gt;2012-4-28补充：新版的接口已经不需要配置token了，所以下面这段可以跳过了&lt;/p&gt;

&lt;p&gt;有些工具没有通过SSH来链接GitHub。如果要使用这类工具，你需要找到然后设置你的API Token。&lt;/p&gt;

&lt;p&gt;在GitHub上，你可以点击*Account Setting &amp;gt; Account Admin*：
&lt;img src=&#34;/images/githubpages/bootcamp_1_token.jpg&#34; alt=&#34;set ssh keys&#34; /&gt;&lt;/p&gt;

&lt;p&gt;然后在你的命令行中，输入下面的命令，把token添加进去：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git config --global user.name &amp;quot;你的名字&amp;quot;
$ git config --global user.token 0123456789your123456789token
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果你改了GitHub的密码，需要重新设置token。&lt;/p&gt;

&lt;h3 id=&#34;成功了&#34;&gt;成功了&lt;/h3&gt;

&lt;p&gt;好了，你已经可以成功连接GitHub了。&lt;/p&gt;

&lt;h2 id=&#34;使用github-pages建立博客&#34;&gt;使用GitHub Pages建立博客&lt;/h2&gt;

&lt;p&gt;与GitHub建立好链接之后，就可以方便的使用它提供的Pages服务，GitHub Pages分两种，一种是你的GitHub用户名建立的&lt;code&gt;username.github.io&lt;/code&gt;这样的用户&amp;amp;组织页（站），另一种是依附项目的pages。&lt;/p&gt;

&lt;h3 id=&#34;user-organization-pages&#34;&gt;User &amp;amp; Organization Pages&lt;/h3&gt;

&lt;p&gt;想建立个人博客是用的第一种，形如&lt;code&gt;beiyuu.github.io&lt;/code&gt;这样的可访问的站，每个用户名下面只能建立一个，创建之后点击&lt;code&gt;Admin&lt;/code&gt;进入项目管理，可以看到是这样的：
&lt;img src=&#34;/images/githubpages/user-pages.png&#34; alt=&#34;user pages&#34; /&gt;
而普通的项目是这样的，即使你也是用的&lt;code&gt;othername.github.io&lt;/code&gt;：
&lt;img src=&#34;/images/githubpages/other-pages.png&#34; alt=&#34;other pages&#34; /&gt;&lt;/p&gt;

&lt;p&gt;创建好&lt;code&gt;username.github.io&lt;/code&gt;项目之后，提交一个&lt;code&gt;index.html&lt;/code&gt;文件，然后&lt;code&gt;push&lt;/code&gt;到GitHub的&lt;code&gt;master&lt;/code&gt;分支（也就是普通意义上的主干）。第一次页面生效需要一些时间，大概10分钟左右。&lt;/p&gt;

&lt;p&gt;生效之后，访问&lt;code&gt;username.github.io&lt;/code&gt;就可以看到你上传的页面了，&lt;a href=&#34;http://beiyuu.github.io&#34; target=&#34;_blank&#34;&gt;beiyuu.github.io&lt;/a&gt;就是一个例子。&lt;/p&gt;

&lt;p&gt;关于第二种项目&lt;code&gt;pages&lt;/code&gt;，简单提一下，他和用户pages使用的后台程序是同一套，只不过它的目的是项目的帮助文档等跟项目绑定的内容，所以需要在项目的&lt;code&gt;gh-pages&lt;/code&gt;分支上去提交相应的文件，GitHub会自动帮你生成项目pages。具体的使用帮助可以参考&lt;a href=&#34;http://pages.github.com/&#34; title=&#34;Github Pages&#34; target=&#34;_blank&#34;&gt;Github Pages&lt;/a&gt;的官方文档：&lt;/p&gt;

&lt;h3 id=&#34;绑定域名&#34;&gt;绑定域名&lt;/h3&gt;

&lt;p&gt;我们在第一部分就提到了在DNS部分的设置，再来看在GitHub的配置，要想让&lt;code&gt;username.github.io&lt;/code&gt;能通过你自己的域名来访问，需要在项目的根目录下新建一个名为&lt;code&gt;CNAME&lt;/code&gt;的文件，文件内容形如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;beiyuu.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;你也可以绑定在二级域名上：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;blog.beiyuu.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;需要提醒的一点是，如果你使用形如&lt;code&gt;beiyuu.com&lt;/code&gt;这样的一级域名的话，需要在DNS处设置A记录到&lt;code&gt;207.97.227.245&lt;/code&gt;（&lt;strong&gt;这个地址会有变动，&lt;a href=&#34;https://help.github.com/articles/my-custom-domain-isn-t-working&#34; target=&#34;_blank&#34;&gt;这里&lt;/a&gt;查看&lt;/strong&gt;），而不是在DNS处设置为CNAME的形式，否则可能会对其他服务（比如email）造成影响。&lt;/p&gt;

&lt;p&gt;设置成功后，根据DNS的情况，最长可能需要一天才能生效，耐心等待吧。&lt;/p&gt;

&lt;h2 id=&#34;jekyll模板系统&#34;&gt;Jekyll模板系统&lt;/h2&gt;

&lt;p&gt;GitHub Pages为了提供对HTML内容的支持，选择了&lt;a href=&#34;https://github.com/mojombo/jekyll&#34; title=&#34;Jekyll&#34; target=&#34;_blank&#34;&gt;Jekyll&lt;/a&gt;作为模板系统，Jekyll是一个强大的静态模板系统，作为个人博客使用，基本上可以满足要求，也能保持管理的方便，你可以查看&lt;a href=&#34;https://github.com/mojombo/jekyll/blob/master/README.textile&#34; target=&#34;_blank&#34;&gt;Jekyll官方文档&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;你可以直接fork&lt;a href=&#34;https://github.com/beiyuu/Github-Pages-Example&#34; target=&#34;_blank&#34;&gt;我的项目&lt;/a&gt;，然后改名，就有了你自己的满足Jekyll要求的文档了，当然你也可以按照下面的介绍自己创建。&lt;/p&gt;

&lt;h3 id=&#34;jekyll基本结构&#34;&gt;Jekyll基本结构&lt;/h3&gt;

&lt;p&gt;Jekyll的核心其实就是一个文本的转换引擎，用你最喜欢的标记语言写文档，可以是Markdown、Textile或者HTML等等，再通过&lt;code&gt;layout&lt;/code&gt;将文档拼装起来，根据你设置的URL规则来展现，这些都是通过严格的配置文件来定义，最终的产出就是web页面。&lt;/p&gt;

&lt;p&gt;基本的Jekyll结构如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;|-- _config.yml
|-- _includes
|-- _layouts
|   |-- default.html
|   `-- post.html
|-- _posts
|   |-- 2007-10-29-why-every-programmer-should-play-nethack.textile
|   `-- 2009-04-26-barcamp-boston-4-roundup.textile
|-- _site
`-- index.html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;简单介绍一下他们的作用：&lt;/p&gt;

&lt;h4 id=&#34;config-yml&#34;&gt;_config.yml&lt;/h4&gt;

&lt;p&gt;配置文件，用来定义你想要的效果，设置之后就不用关心了。&lt;/p&gt;

&lt;h4 id=&#34;includes&#34;&gt;_includes&lt;/h4&gt;

&lt;p&gt;可以用来存放一些小的可复用的模块，方便通过&lt;code&gt;{ % include file.ext %}&lt;/code&gt;（去掉前两个{中或者{与%中的空格，下同）灵活的调用。这条命令会调用_includes/file.ext文件。&lt;/p&gt;

&lt;h4 id=&#34;layouts&#34;&gt;_layouts&lt;/h4&gt;

&lt;p&gt;这是模板文件存放的位置。模板需要通过&lt;a href=&#34;https://github.com/mojombo/jekyll/wiki/YAML-Front-Matter&#34; target=&#34;_blank&#34;&gt;YAML front matter&lt;/a&gt;来定义，后面会讲到，&lt;code&gt;{ { content }}&lt;/code&gt;标记用来将数据插入到这些模板中来。&lt;/p&gt;

&lt;h4 id=&#34;posts&#34;&gt;_posts&lt;/h4&gt;

&lt;p&gt;你的动态内容，一般来说就是你的博客正文存放的文件夹。他的命名有严格的规定，必须是&lt;code&gt;2012-02-22-artical-title.MARKUP&lt;/code&gt;这样的形式，MARKUP是你所使用标记语言的文件后缀名，根据_config.yml中设定的链接规则，可以根据你的文件名灵活调整，文章的日期和标记语言后缀与文章的标题的独立的。&lt;/p&gt;

&lt;h4 id=&#34;site&#34;&gt;_site&lt;/h4&gt;

&lt;p&gt;这个是Jekyll生成的最终的文档，不用去关心。最好把他放在你的&lt;code&gt;.gitignore&lt;/code&gt;文件中忽略它。&lt;/p&gt;

&lt;h4 id=&#34;其他文件夹&#34;&gt;其他文件夹&lt;/h4&gt;

&lt;p&gt;你可以创建任何的文件夹，在根目录下面也可以创建任何文件，假设你创建了&lt;code&gt;project&lt;/code&gt;文件夹，下面有一个&lt;code&gt;github-pages.md&lt;/code&gt;的文件，那么你就可以通过&lt;code&gt;yoursite.com/project/github-pages&lt;/code&gt;访问的到，如果你是使用一级域名的话。文件后缀可以是&lt;code&gt;.html&lt;/code&gt;或者&lt;code&gt;markdown&lt;/code&gt;或者&lt;code&gt;textile&lt;/code&gt;。这里还有很多的例子：&lt;a href=&#34;https://github.com/mojombo/jekyll/wiki/Sites&#34; target=&#34;_blank&#34;&gt;https://github.com/mojombo/jekyll/wiki/Sites&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;jekyll的配置&#34;&gt;Jekyll的配置&lt;/h3&gt;

&lt;p&gt;Jekyll的配置写在_config.yml文件中，可配置项有很多，我们不去一一追究了，很多配置虽有用但是一般不需要去关心，&lt;a href=&#34;https://github.com/mojombo/jekyll/wiki/configuration&#34; target=&#34;_blank&#34;&gt;官方配置文档&lt;/a&gt;有很详细的说明，确实需要了可以去这里查，我们主要说两个比较重要的东西，一个是&lt;code&gt;Permalink&lt;/code&gt;，还有就是自定义项。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Permalink&lt;/code&gt;项用来定义你最终的文章链接是什么形式，他有下面几个变量：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;year&lt;/code&gt; 文件名中的年份&lt;/li&gt;
&lt;li&gt;&lt;code&gt;month&lt;/code&gt; 文件名中的月份&lt;/li&gt;
&lt;li&gt;&lt;code&gt;day&lt;/code&gt; 文件名中的日期&lt;/li&gt;
&lt;li&gt;&lt;code&gt;title&lt;/code&gt; 文件名中的文章标题&lt;/li&gt;
&lt;li&gt;&lt;code&gt;categories&lt;/code&gt; 文章的分类，如果文章没有分类，会忽略&lt;/li&gt;
&lt;li&gt;&lt;code&gt;i-month&lt;/code&gt; 文件名中的除去前缀0的月份&lt;/li&gt;
&lt;li&gt;&lt;code&gt;i-day&lt;/code&gt; 文件名中的除去前缀0的日期&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;看看最终的配置效果：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;permalink: pretty&lt;/code&gt; /2009/04/29/slap-chop/index.html&lt;/li&gt;
&lt;li&gt;&lt;code&gt;permalink: /:month-:day-:year/:title.html&lt;/code&gt; /04-29-2009/slap-chop.html&lt;/li&gt;
&lt;li&gt;&lt;code&gt;permalink: /blog/:year/:month/:day/:title&lt;/code&gt; /blog/2009/04/29/slap-chop/index.html&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;我使用的是：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;permalink: /:title&lt;/code&gt; /github-pages&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;自定义项的内容，例如我们定义了&lt;code&gt;title:BeiYuu的博客&lt;/code&gt;这样一项，那么你就可以在文章中使用&lt;code&gt;{ { site.title }}&lt;/code&gt;来引用这个变量了，非常方便定义些全局变量。&lt;/p&gt;

&lt;h3 id=&#34;yaml-front-matter和模板变量&#34;&gt;YAML Front Matter和模板变量&lt;/h3&gt;

&lt;p&gt;对于使用YAML定义格式的文章，Jekyll会特别对待，他的格式要求比较严格，必须是这样的形式：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
layout: post
title: Blogging Like a Hacker
---
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;前后的&lt;code&gt;---&lt;/code&gt;不能省略，在这之间，你可以定一些你需要的变量，layout就是调用&lt;code&gt;_layouts&lt;/code&gt;下面的某一个模板，他还有一些其他的变量可以使用：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;permalink&lt;/code&gt; 你可以对某一篇文章使用通用设置之外的永久链接&lt;/li&gt;
&lt;li&gt;&lt;code&gt;published&lt;/code&gt; 可以单独设置某一篇文章是否需要发布&lt;/li&gt;
&lt;li&gt;&lt;code&gt;category&lt;/code&gt; 设置文章的分类&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tags&lt;/code&gt; 设置文章的tag&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;上面的&lt;code&gt;title&lt;/code&gt;就是自定义的内容，你也可以设置其他的内容，在文章中可以通过&lt;code&gt;{ { page.title }}&lt;/code&gt;这样的形式调用。&lt;/p&gt;

&lt;p&gt;模板变量，我们之前也涉及了不少了，还有其他需要的变量，可以参考官方的文档：&lt;a href=&#34;https://github.com/mojombo/jekyll/wiki/template-data&#34; title=&#34;Jekyll Template Data&#34; target=&#34;_blank&#34;&gt;https://github.com/mojombo/jekyll/wiki/template-data&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;使用disqus管理评论&#34;&gt;使用Disqus管理评论&lt;/h2&gt;

&lt;p&gt;模板部分到此就算是配置完毕了，但是Jekyll只是个静态页面的发布系统，想做到关爽场倒是很容易，如果想要评论呢？也很简单。&lt;/p&gt;

&lt;p&gt;现在专做评论模块的产品有很多，比如&lt;a href=&#34;http://disqus.com/&#34; target=&#34;_blank&#34;&gt;Disqus&lt;/a&gt;，还有国产的&lt;a href=&#34;http://duoshuo.com/&#34; target=&#34;_blank&#34;&gt;多说&lt;/a&gt;，Disqus对现在各种系统的支持都比较全面，到写博客为止，多说现在仅是WordPress的一个插件，所以我这里暂时也使用不了，多说与国内的社交网络紧密结合，还是有很多亮点的，值得期待一下。我先选择了Disqus。&lt;/p&gt;

&lt;p&gt;注册账号什么的就不提了，Disqus支持很多的博客平台，参见下图：
&lt;img src=&#34;/images/githubpages/disqus-site.jpg&#34; alt=&#34;Disqus sites&#34; /&gt;&lt;/p&gt;

&lt;p&gt;我们选择最下面的&lt;code&gt;Universal Code&lt;/code&gt;就好，然后会看到一个介绍页面，把下面这段代码复制到你的模板里面，可以只复制到显示文章的模板中：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div id=&amp;quot;disqus_thread&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = &#39;example&#39;; // required: replace example with your forum shortname 这个地方需要改成你配置的网站名

    /* * * DON&#39;T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
        dsq.src = &#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
        (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
    })();
&amp;lt;/script&amp;gt;
&amp;lt;noscript&amp;gt;Please enable JavaScript to view the &amp;lt;a href=&amp;quot;http://disqus.com/?ref_noscript&amp;quot;&amp;gt;comments powered by Disqus.&amp;lt;/a&amp;gt;&amp;lt;/noscript&amp;gt;
&amp;lt;a href=&amp;quot;http://disqus.com&amp;quot; class=&amp;quot;dsq-brlink&amp;quot;&amp;gt;blog comments powered by &amp;lt;span class=&amp;quot;logo-disqus&amp;quot;&amp;gt;Disqus&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;配置完之后，你也可以做一些异步加载的处理，提高性能，比如我就在最开始页面打开的时候不显示评论，当你想看评论的时候，点击“显示评论”再加载Disqus的模块。代码很简单，你可以参考我的写法。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$(&#39;#disqus_container .comment&#39;).on(&#39;click&#39;,function(){
        $(this).html(&#39;加载中...&#39;);
        var disqus_shortname = &#39;beiyuu&#39;;
        var that = this;
        BYB.includeScript(&#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;,function(){$(that).remove()}); //这是一个加载js的函数
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果你不喜欢Disqus的样式，你也可以根据他生成的HTML结构，自己改写样式覆盖它的，Disqus现在也提供每个页面的评论数接口，&lt;a href=&#34;http://docs.disqus.com/developers/universal/&#34; target=&#34;_blank&#34;&gt;帮助文档&lt;/a&gt;在这里可以看到。&lt;/p&gt;

&lt;h2 id=&#34;代码高亮插件&#34;&gt;代码高亮插件&lt;/h2&gt;

&lt;p&gt;如果写技术博客，代码高亮少不了，有两个可选插件&lt;a href=&#34;http://mihai.bazon.net/projects/javascript-syntax-highlighting-engine&#34; target=&#34;_blank&#34;&gt;DlHightLight代码高亮组件&lt;/a&gt;和&lt;a href=&#34;http://code.google.com/p/google-code-prettify/&#34; target=&#34;_blank&#34;&gt;Google Code Prettify&lt;/a&gt;。DLHightLight支持的语言相对较少一些，有js、css、xml和html，Google的高亮插件基本上任何语言都支持，也可以自定义语言，也支持自动识别，也有行号的特别支持。&lt;/p&gt;

&lt;p&gt;Google的高亮插件使用也比较方便，只需要在&lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt;的标签上加入&lt;code&gt;prettyprint&lt;/code&gt;即可。所以我选择了Google Code Prettify。&lt;/p&gt;

&lt;h2 id=&#34;搭建本地jekyll环境&#34;&gt;搭建本地jekyll环境&lt;/h2&gt;

&lt;p&gt;这里主要介绍一下在Mac OS X下面的安装过程，其他操作系统可以参考官方的&lt;a href=&#34;https://github.com/mojombo/jekyll/wiki/Install&#34; target=&#34;_blank&#34;&gt;jekyll安装&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;作为生活在水深火热的墙内人民，有必要进行下面一步修改gem的源，方便我们更快的下载所需组建：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo gem sources --remove http://rubygems.org/
sudo gem sources -a http://ruby.taobao.org/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后用Gem安装jekyll&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ gem install jekyll
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;不过一般如果有出错提示，你可能需要这样安装：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo gem install jekyll
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;我到了这一步的时候总是提示错误&lt;code&gt;Failed to build gem native extension&lt;/code&gt;，很可能的一个原因是没有安装rvm，&lt;a href=&#34;https://rvm.io/rvm/install/&#34; target=&#34;_blank&#34;&gt;rvm的安装&lt;/a&gt;可以参考这里，或者敲入下面的命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl -L https://get.rvm.io | bash -s stable --ruby
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后还需要安装Markdown的解释器，这个需要在你的_config.yml里面设置&lt;code&gt;markdown:rdiscount&lt;/code&gt;：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ gem install jekyll rdiscount
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;好了，如果一切顺利的话，本地环境就基本搭建完成了，进入之前我们建立的博客目录，运行下面的命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ jekyll serve --watch
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这个时候，你就可以通过&lt;code&gt;localhost:4000&lt;/code&gt;来访问了。还有关于&lt;a href=&#34;http://jekyllbootstrap.com/&#34; target=&#34;_blank&#34;&gt;jekyll bootstrap&lt;/a&gt;的资料，需要自己修改调试的，可以研究一下。&lt;/p&gt;

&lt;p&gt;我在这个过程中还遇到两个诡异的没有解决的问题，一个是我放在根目录下面的blog.md等文件，在GitHub的pages服务上一切正常，可以通过&lt;code&gt;beiyuu.com/blog&lt;/code&gt;访问的到，但是在本地环境下，总是&lt;code&gt;not found&lt;/code&gt;，很是让人郁闷，看生成的&lt;code&gt;_site&lt;/code&gt;目录下面的文件，也是正常的&lt;code&gt;blog.html&lt;/code&gt;，但就是找不到，只有当我把URL改为&lt;code&gt;localhost:4000/blog.html&lt;/code&gt;的时候，才能访问的到，环境不同真糟糕。&lt;/p&gt;

&lt;p&gt;还有一个是关于&lt;code&gt;category&lt;/code&gt;的问题，根据&lt;code&gt;YAML&lt;/code&gt;的语法，我们在文章头部可以定义文章所属的类别，也可以定义为&lt;code&gt;category:[blog,rss]&lt;/code&gt;这样子的多类别，我在本地试一切正常，但是push到GitHub之后，就无法读取了，真让人着急，没有办法，只能采用别的办法满足我的需求了。这里还有一篇&lt;a href=&#34;http://chxt6896.github.com/blog/2012/02/13/blog-jekyll-native.html&#34; target=&#34;_blank&#34;&gt;Jekyll 本地调试之若干问题&lt;/a&gt;，安装中如果有其他问题，也可以对照参考一下。&lt;/p&gt;

&lt;h2 id=&#34;结语&#34;&gt;结语&lt;/h2&gt;

&lt;p&gt;如果你跟着这篇不那么详尽的教程，成功搭建了自己的博客，恭喜你！剩下的就是保持热情的去写自己的文章吧。&lt;/p&gt;

&lt;p&gt;[1]:    {{ page.url}}  ({{ page.title }})&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
