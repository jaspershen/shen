<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog | Xiaotao Shen</title>
    <link>/tags/blog/</link>
      <atom:link href="/tags/blog/index.xml" rel="self" type="application/rss+xml" />
    <description>Blog</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>©Xiaotao Shen2019</copyright><lastBuildDate>Mon, 28 Oct 2019 00:00:00 +0000</lastBuildDate>
    <item>
      <title>dplyr cookbook</title>
      <link>/post/dplyr-cookbook/</link>
      <pubDate>Mon, 28 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/dplyr-cookbook/</guid>
      <description>


&lt;p&gt;test&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ggplot2主题扩充包-ggthemes</title>
      <link>/post/ggplot2-ggthemes/</link>
      <pubDate>Mon, 28 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/ggplot2-ggthemes/</guid>
      <description>


&lt;p&gt;&lt;code&gt;ggthemes&lt;/code&gt;是&lt;code&gt;ggplot2&lt;/code&gt;的一个主题扩展包.含有&lt;code&gt;ggplot2&lt;/code&gt;的多个扩展主题.官网参考文档见下面链接:&lt;/p&gt;
&lt;div id=&#34;安装&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;安装&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;# 从CRAN安装
install.packages(&amp;#39;ggthemes&amp;#39;, dependencies = TRUE)
# 从github安装
library(&amp;quot;devtools&amp;quot;)
install_github(c(&amp;quot;hadley/ggplot2&amp;quot;, &amp;quot;jrnold/ggthemes&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;主题&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;主题&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;ggthemes&lt;/code&gt;提供的最直接的就是主题.可以直接在ggplot2对象后通过&lt;code&gt;+&lt;/code&gt;好添加主题.&lt;/p&gt;
&lt;div id=&#34;theme_base主题&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;theme_base()&lt;/code&gt;主题&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;ggplot2&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggplot2&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggthemes)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggthemes&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;(
p &amp;lt;- ggplot(mtcars) + geom_point(aes(x = wt, y = mpg,
     colour = factor(gear))) + facet_wrap(~am)
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p + theme_base()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-1-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;theme_base()&lt;/code&gt;有两个参数,&lt;code&gt;base_size&lt;/code&gt;和&lt;code&gt;base_family&lt;/code&gt;,分别用来设置图片中所有字体的颜色和字体.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;theme_calc主题&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;theme_calc()&lt;/code&gt;主题&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;ggplot2&amp;quot;)
library(ggthemes)
(
p &amp;lt;- ggplot(mtcars) + geom_point(aes(x = wt, y = mpg,
     colour = factor(gear))) + facet_wrap(~am)
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p + theme_calc()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-2-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;还有很多其他的主题,可以直接参考官方网站.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;颜色标度&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;颜色标度&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;ggthemes()&lt;/code&gt;同样也提供了颜色标度.&lt;/p&gt;
&lt;div id=&#34;色盲友好型颜色调色板和标度&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;色盲友好型颜色调色板和标度&lt;/h2&gt;
&lt;p&gt;可以参考如下网址:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/#a-colorblind-friendly-palette&#34; class=&#34;uri&#34;&gt;http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/#a-colorblind-friendly-palette&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一共包括四个函数:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;colorblind_pal()&lt;/code&gt;,&lt;code&gt;scale_colour_colorblind()&lt;/code&gt;,&lt;code&gt;scale_color_colorblind()&lt;/code&gt;和&lt;code&gt;scale_fill_colorblind()&lt;/code&gt;.用于分散性的数据.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;ggplot2&amp;quot;)
library(&amp;quot;scales&amp;quot;)
library(ggthemes)

show_col(colorblind_pal()(8))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##该函数用来给出最多8种颜色的名字&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;ggplot2&amp;quot;)
library(&amp;quot;scales&amp;quot;)
library(ggthemes)

show_col(colorblind_pal()(8))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##该函数用来给出最多8种颜色的名字
(
p &amp;lt;- ggplot(mtcars) + 
  geom_point(aes(x = wt, y = mpg,
     colour = factor(gear))) + 
  facet_wrap(~am)
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-4-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p + 
  theme_igray() + 
  scale_colour_colorblind()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-4-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;scale_fill_colorblind()&lt;/code&gt;函数和colour函数相同,只是用来填充.&lt;/p&gt;
&lt;p&gt;还有很多其他的颜色标度扩展,详情可以看其官方网站.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;形状标度&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;形状标度&lt;/h1&gt;
&lt;p&gt;给美学参数&lt;code&gt;shape&lt;/code&gt;来提供扩展.&lt;/p&gt;
&lt;div id=&#34;scale_shape_calc&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;scale_shape_calc()&lt;/code&gt;&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;(
p &amp;lt;- ggplot(mtcars) + 
  geom_point(aes(x = wt, y = mpg,
     shape = factor(gear))) + 
  facet_wrap(~am)
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p + scale_shape_calc()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-5-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;线性标度&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;线性标度&lt;/h1&gt;
&lt;p&gt;给美学参数&lt;code&gt;linetype&lt;/code&gt;来提供扩展.&lt;/p&gt;
&lt;div id=&#34;scale_linetype_stata&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;scale_linetype_stata()&lt;/code&gt;&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
require(ggthemes)
(
  p &amp;lt;- 
    ggplot(mtcars,aes(mpg, wt)) +
    geom_line(aes(linetype = factor(gear)))
) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p  +
    scale_linetype_stata()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-6-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;颜色形状和线性调色板&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;颜色,形状和线性&lt;code&gt;调色板&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;提供了非常多的色板,可以看官网.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggthemes)
library(scales)
show_col(few_pal(palette = &amp;quot;Light&amp;quot;)(8))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;show_col(few_pal(palette = &amp;quot;Medium&amp;quot;)(8))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-7-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;show_col(few_pal(palette = &amp;quot;Dark&amp;quot;)(8))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-7-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;几何对象和统计变换函数&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;几何对象和统计变换函数&lt;/h1&gt;
&lt;div id=&#34;range-framesgeom_rangeframe&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Range Frames&lt;code&gt;geom_rangeframe&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;该函数是用来给轴加上直线的.看以下例子.与其他几何对象参数一样,他也可以接受一些常见的参数.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;ggplot2&amp;quot;)
library(ggthemes)
(
p &amp;lt;- 
ggplot(mtcars, aes(wt, mpg)) +
 geom_point() 
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p +
   geom_rangeframe(colour = &amp;quot;red&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-8-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p +
   geom_rangeframe(colour = &amp;quot;red&amp;quot;, linetype = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-8-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p +
   geom_rangeframe(colour = &amp;quot;red&amp;quot;, linetype = 2, sides = &amp;quot;top&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-8-4.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p +
   geom_rangeframe(colour = &amp;quot;red&amp;quot;, linetype = 2, sides = c(&amp;quot;top&amp;quot;)) +
  geom_rangeframe(colour = &amp;quot;red&amp;quot;, linetype = 2, sides = c(&amp;quot;right&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-8-5.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;tuftes-box-plot&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Tufte’s Box Plot&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;ggplot2&amp;quot;)
library(ggthemes)
(
  p &amp;lt;- ggplot(mtcars, aes(factor(cyl), mpg))
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# with a point for the median and lines for whiskers
p + geom_tufteboxplot()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-9-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# with a line for the interquartile range and points for whiskers
p + geom_tufteboxplot(median.type = &amp;quot;line&amp;quot;, whisker.type = &amp;quot;point&amp;quot;, hoffset = 0)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-9-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# with a wide line for the interquartile range and lines for whiskers
p + geom_tufteboxplot(median.type = &amp;quot;line&amp;quot;, hoffset = 0, width = 3)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: position_dodge requires non-overlapping x intervals&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-9-4.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# with an offset line for the interquartile range and lines for whiskers
p + geom_tufteboxplot(median.type = &amp;quot;line&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-9-5.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# combined with theme_tufte
p + geom_tufteboxplot() +
  theme_tufte() +
  theme(axis.ticks.x = element_blank())&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-ggplot2-ggthemes_files/figure-html/unnamed-chunk-9-6.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>pubmed插件scholarscoop使用总结</title>
      <link>/post/pubmed-scholarscoop-summary/</link>
      <pubDate>Mon, 28 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/pubmed-scholarscoop-summary/</guid>
      <description>


&lt;div id=&#34;如何对某个影响因子范围内的文章进行筛选&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;如何对某个影响因子范围内的文章进行筛选?&lt;/h1&gt;
&lt;p&gt;可以参考下面的连接.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://blog.scholarscope.cn/tutorial/pubmed-filter-longterm/&#34; class=&#34;uri&#34;&gt;http://blog.scholarscope.cn/tutorial/pubmed-filter-longterm/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;如何查看期刊影响因子&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;如何查看期刊影响因子?&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://www.scholarscope.cn/tools.html&#34; class=&#34;uri&#34;&gt;https://www.scholarscope.cn/tools.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;点击该网址,然后点击&lt;code&gt;查询期刊影响因子&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>文献管理工具mendeley使用总结</title>
      <link>/post/mendeley-summary/</link>
      <pubDate>Mon, 28 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/mendeley-summary/</guid>
      <description>



</description>
    </item>
    
    <item>
      <title>质谱常见问题总结</title>
      <link>/post/ms-summary/</link>
      <pubDate>Mon, 28 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/ms-summary/</guid>
      <description>



</description>
    </item>
    
    <item>
      <title>R常见错误总结</title>
      <link>/post/r-error-summary/</link>
      <pubDate>Sat, 26 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/r-error-summary/</guid>
      <description>


&lt;p&gt;这篇博客用来记录R常见的错及其器解决办法.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>下载KEGG数据库</title>
      <link>/post/download-kegg-database/</link>
      <pubDate>Sat, 26 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/download-kegg-database/</guid>
      <description>


&lt;p&gt;记录使用一些R语言包下载KEGG数据库.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#get the ID of all hsa pathways
KEGGREST::listDatabases()
path_ID &amp;lt;- 
KEGGREST::keggList(organism = &amp;quot;hsa&amp;quot;, database = &amp;quot;pathway&amp;quot;) %&amp;gt;% 
  names() %&amp;gt;% 
  unique() %&amp;gt;% 
  stringr::str_replace_all(., &amp;quot;path:&amp;quot;, &amp;quot;&amp;quot;)

dir.create(path = &amp;quot;kegg_pathway&amp;quot;)
setwd(&amp;quot;kegg_pathway/&amp;quot;)


node_info &amp;lt;- vector(mode = &amp;quot;list&amp;quot;, length = length(path_ID))
edge_info &amp;lt;- vector(mode = &amp;quot;list&amp;quot;, length = length(path_ID))

for(i in i:length(path_ID)){
  cat(i, &amp;quot; &amp;quot;)
  temp_kgml &amp;lt;- 
    get_KGML(pathwayid = path_ID[i])
  if(is.na(temp_kgml)){
    next()
  }
  # slot(object = temp_kgml, name = &amp;quot;pathwayInfo&amp;quot;)
  #Download a static pathway image (png file) to working directory:
  temp_image_link &amp;lt;- slot(slot(temp_kgml, &amp;quot;pathwayInfo&amp;quot;), &amp;quot;image&amp;quot;)
  download.file(temp_image_link, basename(temp_image_link), mode = &amp;quot;wb&amp;quot;)
  temp_kegg_mappings &amp;lt;- expand_KEGG_mappings(KGML_file = temp_kgml)
  temp_kegg_edges &amp;lt;- expand_KEGG_edges(temp_kgml, temp_kegg_mappings)
  #Modify existing data sets; specify as nodes and edges
  temp_node_mapping_info &amp;lt;- node_mapping_info(temp_kegg_mappings)
  temp_edge_mapping_info &amp;lt;- edge_mapping_info(temp_kegg_edges)
  #Create an igraph object
  # kegg_graph &amp;lt;- get_graph_object(temp_node_mapping_info, temp_edge_mapping_info)
  
  edge_info[[i]] &amp;lt;- 
    temp_kegg_edges
  node_info[[i]] &amp;lt;- temp_node_mapping_info

  temp_kegg_nodes &amp;lt;- temp_node_mapping_info

}


save(node_info, file = &amp;quot;node_info&amp;quot;)
save(edge_info, file = &amp;quot;edge_info&amp;quot;)



path_name &amp;lt;- KEGGREST::keggList(organism = &amp;quot;hsa&amp;quot;, database = &amp;quot;pathway&amp;quot;) %&amp;gt;% 
  unname()

path_name_id &amp;lt;- 
  paste(path_ID, path_name, sep = &amp;quot;;&amp;quot;)


for(i in 1:length(path_name_id)){
  cat(i, &amp;quot; &amp;quot;)
  if(!is.null(node_info[[i]])){
    temp &amp;lt;- node_info[[i]]
    temp[,3] &amp;lt;- lapply(temp[,3], function(x) paste(x, collapse = &amp;quot;;&amp;quot;)) %&amp;gt;% unlist()
    temp[,4] &amp;lt;- lapply(temp[,4], function(x) paste(x, collapse = &amp;quot;;&amp;quot;)) %&amp;gt;% unlist()
    temp[,13] &amp;lt;- lapply(temp[,13], function(x) paste(x, collapse = &amp;quot;;&amp;quot;)) %&amp;gt;% unlist()
    temp[,14] &amp;lt;- lapply(temp[,14], function(x) paste(x, collapse = &amp;quot;;&amp;quot;)) %&amp;gt;% unlist()
    readr::write_csv(temp[,-c(6,7,8,9,10,11,12,13,17,18)], paste(path_ID[i], &amp;quot;_node_info.csv&amp;quot;, sep = &amp;quot;&amp;quot;))
  }
  
  if(!is.null(edge_info[[i]])){
    temp &amp;lt;- edge_info[[i]]
    # temp[,3] &amp;lt;- lapply(temp[,3], function(x) paste(x, collapse = &amp;quot;;&amp;quot;)) %&amp;gt;% unlist()
    # temp[,4] &amp;lt;- lapply(temp[,4], function(x) paste(x, collapse = &amp;quot;;&amp;quot;)) %&amp;gt;% unlist()
    # temp[,13] &amp;lt;- lapply(temp[,13], function(x) paste(x, collapse = &amp;quot;;&amp;quot;)) %&amp;gt;% unlist()
    # temp[,14] &amp;lt;- lapply(temp[,14], function(x) paste(x, collapse = &amp;quot;;&amp;quot;)) %&amp;gt;% unlist()
    readr::write_csv(temp, paste(path_ID[i], &amp;quot;_edge_info.csv&amp;quot;, sep = &amp;quot;&amp;quot;))
  }
  
}

for(i in 1:length(path_ID)){
  cat(i, &amp;quot; &amp;quot;)
  file &amp;lt;- grep(path_ID[i], dir(), value = TRUE)
  dir.create(path_ID[i])
  file.copy(from = file, to = path_ID[i]) 
}

unlink(grep(&amp;quot;csv&amp;quot;, dir(), value = TRUE))

library(igraph)

as_edgelist(GO)

vertex_attr(GO)&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>ggplot2-cookbook</title>
      <link>/post/ggplot2-cookbook/</link>
      <pubDate>Fri, 25 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/ggplot2-cookbook/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#绘图基础plot-basics&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; 绘图基础(plot basics)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#ggplot-创建一个新的ggplot图片&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1&lt;/span&gt; &lt;code&gt;ggplot()&lt;/code&gt; 创建一个新的ggplot图片&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#参数&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1.1&lt;/span&gt; 参数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#细节&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1.2&lt;/span&gt; 细节&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#例子&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1.3&lt;/span&gt; 例子&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#aes-创建美学映射&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.2&lt;/span&gt; &lt;code&gt;aes()&lt;/code&gt; 创建美学映射&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#参数-1&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.2.1&lt;/span&gt; 参数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#细节-1&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.2.2&lt;/span&gt; 细节&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#例子-1&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.2.3&lt;/span&gt; 例子&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ggsave保存ggplot2图片对象&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.3&lt;/span&gt; &lt;code&gt;ggsave()&lt;/code&gt;保存&lt;code&gt;ggplot2&lt;/code&gt;图片对象&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#参数-2&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.3.1&lt;/span&gt; 参数&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#图层layer几何对象geoms&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; 图层(Layer):几何对象(geoms)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#直线geom_ablinegeom_hline和geom_vline&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.1&lt;/span&gt; 直线&lt;code&gt;geom_abline&lt;/code&gt;,&lt;code&gt;geom_hline&lt;/code&gt;和&lt;code&gt;geom_vline&lt;/code&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#参数-3&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.1.1&lt;/span&gt; 参数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#细节-2&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.1.2&lt;/span&gt; 细节&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#美学映射aesthetics&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.1.3&lt;/span&gt; 美学映射(Aesthetics)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#例子-2&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.1.4&lt;/span&gt; 例子&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#柱形图bar-chartsgeom_bargeom_col和stat_count&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.2&lt;/span&gt; 柱形图(bar charts)&lt;code&gt;geom_bar()&lt;/code&gt;,&lt;code&gt;geom_col()&lt;/code&gt;和&lt;code&gt;stat_count&lt;/code&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#参数-4&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.2.1&lt;/span&gt; 参数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#细节-3&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.2.2&lt;/span&gt; 细节&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#美学参数aesthetics&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.2.3&lt;/span&gt; 美学参数(Aesthetics)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#计算变量-computed-variables&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.2.4&lt;/span&gt; 计算变量 (Computed variables)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#例子-3&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.2.5&lt;/span&gt; 例子&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#二维方格计数热图heatmap-of-2d-bin-countsgeom_bin2d和stat_bin_2d&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.3&lt;/span&gt; 二维方格计数热图(Heatmap of 2d bin counts)&lt;code&gt;geom_bin2d()&lt;/code&gt;和&lt;code&gt;stat_bin_2d()&lt;/code&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#参数-5&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.3.1&lt;/span&gt; 参数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#美学参数asethetics&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.3.2&lt;/span&gt; 美学参数(Asethetics)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#计算变量computed-variables&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.3.3&lt;/span&gt; 计算变量(Computed variables)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#例子-4&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.3.4&lt;/span&gt; 例子&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#空白图geom_blank&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.4&lt;/span&gt; 空白图&lt;code&gt;geom_blank()&lt;/code&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#参数-6&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.4.1&lt;/span&gt; 参数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#例子-5&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.4.2&lt;/span&gt; 例子&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;绘图基础plot-basics&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; 绘图基础(plot basics)&lt;/h1&gt;
&lt;p&gt;所有的ggplot2图形都开始于&lt;code&gt;ggplot()&lt;/code&gt;函数的调用.给其提供数据,以及美学映射(aesthethic mappings)(使用&lt;code&gt;aes()&lt;/code&gt;函数).然后添加图层(layers), 度量系统(scales), 坐标系(coords)以及分面(facets).添加的每个对象,都是在前一行末尾使用符号&lt;code&gt;+&lt;/code&gt;.如果需要将一个ggplot2图像保存在本地,使用&lt;code&gt;ggsave()&lt;/code&gt;函数.&lt;/p&gt;
&lt;div id=&#34;ggplot-创建一个新的ggplot图片&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1&lt;/span&gt; &lt;code&gt;ggplot()&lt;/code&gt; 创建一个新的ggplot图片&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;ggplot()&lt;/code&gt;函数是用来启动初始化一个ggplot2对象的.It can be used to declare the input data frame for a graphic and to specify the set of plot aesthetics intended to be common throughout all subsequent layers unless specifically overridden.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggplot(data = NULL, mapping = aes(), ...,
  environment = parent.frame())
Arguments&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;参数&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.1&lt;/span&gt; 参数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;data&lt;/strong&gt; 用于绘图的数据.如果数据格式不是&lt;code&gt;data.frame&lt;/code&gt;,会默认使用&lt;code&gt;fortity()&lt;/code&gt;函数转换为&lt;code&gt;data.frame&lt;/code&gt;格式.如果在该函数中不提供data,则在后面添加的每一个图层,都需要提供data.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;mapping&lt;/strong&gt; 用于美学图层映射的参数.如果在这里不提供,则后面添加的每个图层,都需要提供.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;…&lt;/strong&gt; 其他可用于该函数的参数.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;environment&lt;/strong&gt; 该参数已经淘汰了.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;细节&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.2&lt;/span&gt; 细节&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ggplot()&lt;/code&gt;用来初始化ggplot2图形对象.经常后面需要通过&lt;code&gt;+&lt;/code&gt;来添加其他的对象.一般有三种方法调用该函数:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ggplot(df, aes(x, y, other aesthetics))&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ggplot(df)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ggplot2&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果后面的所有图层使用的都是同一套数据以及美学映射,则推荐使用第一种用法.如果后面图层使用数据一致,但是美学映射不同,则推荐使用第二种方法.如果每一个图层使用的数据和美学映射都不相同,则使用第三种方法,一般用来构建比较复杂的图形.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;例子&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1.3&lt;/span&gt; 例子&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggplot2&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 产生随机数据,然后计算平均值和标准差
df &amp;lt;- data.frame(
  gp = factor(rep(letters[1:3], each = 10)),
  y = rnorm(30)
)
ds &amp;lt;- do.call(rbind, lapply(split(df, df$gp), function(d) {
  data.frame(mean = mean(d$y), sd = sd(d$y), gp = d$gp)
}))

ggplot(df, aes(gp, y)) +
  geom_point() +
  geom_point(data = ds, aes(y = mean), colour = &amp;#39;red&amp;#39;, size = 3)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-25-ggplot2-cookbook_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#注意,第一个geom_point图层使用的是ggplot中的数据和美学映射.而第二个geom_point
#图层中使用的则是不同的数据和美学映射.

# 而下面这幅图,第一个geonm_point图层因为没有提供data,因此使用的是ggplot()中的data,
#而美学映射则是自己定义的.

ggplot(df) +
  geom_point(aes(gp, y)) +
  geom_point(data = ds, aes(gp, mean), colour = &amp;#39;red&amp;#39;, size = 3)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-25-ggplot2-cookbook_files/figure-html/unnamed-chunk-1-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 另外一个选择则是完全不在ggplot中定义数据和美学映射,而是在每一个图层中分别定义.
# 当你要画复杂图形的时候,这种方法就会显示的非常清晰和明了.
ggplot() +
  geom_point(data = df, aes(gp, y)) +
  geom_point(data = ds, aes(gp, mean), colour = &amp;#39;red&amp;#39;, size = 3) +
  geom_errorbar(
    data = ds,
    aes(gp, mean, ymin = mean - sd, ymax = mean + sd),
    colour = &amp;#39;red&amp;#39;,
    width = 0.4
  )&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Ignoring unknown aesthetics: y&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-25-ggplot2-cookbook_files/figure-html/unnamed-chunk-1-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;aes-创建美学映射&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2&lt;/span&gt; &lt;code&gt;aes()&lt;/code&gt; 创建美学映射&lt;/h2&gt;
&lt;p&gt;美学映射指的是数据中的变量如何映射到图形的视觉特性上(也就是美学aesthetics).美学映射可以在&lt;code&gt;ggplot()&lt;/code&gt;函数以及每一个单独的图层中进行设置.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;aes(x, y, ...)&lt;/code&gt;&lt;/p&gt;
&lt;div id=&#34;参数-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2.1&lt;/span&gt; 参数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;x, y, …&lt;/strong&gt; 将变量映射到图形的视觉特性的名字.x和y分别指x轴和y轴.通常他们可以省略不写.但是其他的,如颜色(colour/color),填充颜色(fill),大小(size)等则必须写明参数名字.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;细节-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2.2&lt;/span&gt; 细节&lt;/h3&gt;
&lt;p&gt;注意的是,在ggplot2种,对于视觉特征的名字进行了规范化,因此和R base绘图函数种的并不相同,比如从&lt;code&gt;pch&lt;/code&gt;改为&lt;code&gt;shape&lt;/code&gt;,从&lt;code&gt;cex&lt;/code&gt;改为&lt;code&gt;size&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;例子-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2.3&lt;/span&gt; 例子&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;aes(x = mpg, y = wt)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Aesthetic mapping: 
## * `x` -&amp;gt; `mpg`
## * `y` -&amp;gt; `wt`&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#&amp;gt; Aesthetic mapping: 
#&amp;gt; * `x` -&amp;gt; `mpg`
#&amp;gt; * `y` -&amp;gt; `wt`
aes(mpg, wt)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Aesthetic mapping: 
## * `x` -&amp;gt; `mpg`
## * `y` -&amp;gt; `wt`&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#&amp;gt; Aesthetic mapping: 
#&amp;gt; * `x` -&amp;gt; `mpg`
#&amp;gt; * `y` -&amp;gt; `wt`

# You can also map aesthetics to functions of variables
aes(x = mpg ^ 2, y = wt / cyl)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Aesthetic mapping: 
## * `x` -&amp;gt; `mpg^2`
## * `y` -&amp;gt; `wt/cyl`&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#&amp;gt; Aesthetic mapping: 
#&amp;gt; * `x` -&amp;gt; `mpg^2`
#&amp;gt; * `y` -&amp;gt; `wt/cyl`

# Or to constants
aes(x = 1, colour = &amp;quot;smooth&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Aesthetic mapping: 
## * `x`      -&amp;gt; 1
## * `colour` -&amp;gt; &amp;quot;smooth&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#&amp;gt; Aesthetic mapping: 
#&amp;gt; * `x`      -&amp;gt; 1
#&amp;gt; * `colour` -&amp;gt; &amp;quot;smooth&amp;quot;

# Aesthetic names are automatically standardised
aes(col = x)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Aesthetic mapping: 
## * `colour` -&amp;gt; `x`&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#&amp;gt; Aesthetic mapping: 
#&amp;gt; * `colour` -&amp;gt; `x`
aes(fg = x)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Aesthetic mapping: 
## * `colour` -&amp;gt; `x`&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#&amp;gt; Aesthetic mapping: 
#&amp;gt; * `colour` -&amp;gt; `x`
aes(color = x)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Aesthetic mapping: 
## * `colour` -&amp;gt; `x`&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#&amp;gt; Aesthetic mapping: 
#&amp;gt; * `colour` -&amp;gt; `x`
aes(colour = x)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Aesthetic mapping: 
## * `colour` -&amp;gt; `x`&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#&amp;gt; Aesthetic mapping: 
#&amp;gt; * `colour` -&amp;gt; `x`

# aes() is passed to either ggplot() or specific layer. Aesthetics supplied
# to ggplot() are used as defaults for every layer.
ggplot(mpg, aes(displ, hwy)) + geom_point()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-25-ggplot2-cookbook_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mpg) + geom_point(aes(displ, hwy))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-25-ggplot2-cookbook_files/figure-html/unnamed-chunk-2-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Tidy evaluation ----------------------------------------------------
# aes() automatically quotes all its arguments, so you need to use tidy
# evaluation to create wrappers around ggplot2 pipelines. The
# simplest case occurs when your wrapper takes dots:
scatter_by &amp;lt;- function(data, ...) {
  ggplot(data) + geom_point(aes(...))
}
scatter_by(mtcars, disp, drat)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-25-ggplot2-cookbook_files/figure-html/unnamed-chunk-2-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# If your wrapper has a more specific interface with named arguments,
# you need &amp;quot;enquote and unquote&amp;quot;:
scatter_by &amp;lt;- function(data, x, y) {
  x &amp;lt;- enquo(x)
  y &amp;lt;- enquo(y)

  ggplot(data) + geom_point(aes(!!x, !!y))
}
scatter_by(mtcars, disp, drat)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-25-ggplot2-cookbook_files/figure-html/unnamed-chunk-2-4.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Note that users of your wrapper can use their own functions in the
# quoted expressions and all will resolve as it should!
cut3 &amp;lt;- function(x) cut_number(x, 3)
scatter_by(mtcars, cut3(disp), drat)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-25-ggplot2-cookbook_files/figure-html/unnamed-chunk-2-5.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;ggsave保存ggplot2图片对象&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.3&lt;/span&gt; &lt;code&gt;ggsave()&lt;/code&gt;保存&lt;code&gt;ggplot2&lt;/code&gt;图片对象&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;ggsave()&lt;/code&gt;默认会保存当前最后一幅&lt;code&gt;ggplot2&lt;/code&gt;图片.如果不设置尺寸,则使用当前设备尺寸.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggsave(filename, plot = last_plot(), device = NULL, path = NULL,
  scale = 1, width = NA, height = NA, units = c(&amp;quot;in&amp;quot;, &amp;quot;cm&amp;quot;, &amp;quot;mm&amp;quot;),
  dpi = 300, limitsize = TRUE, ...)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;参数-2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.3.1&lt;/span&gt; 参数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;filename&lt;/strong&gt; 要保存的图片的名字,注意不包括后缀名.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;plot&lt;/strong&gt; 要保存的&lt;code&gt;ggplot2&lt;/code&gt;图片.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;device&lt;/strong&gt; 要保存的图片的类型.包括以下:“eps”, “ps”, “tex” (pictex), “pdf”, “jpeg”, “tiff”, “png”, “bmp”, “svg” or “wmf” (windows only).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;path&lt;/strong&gt; 图片所要保存的路径.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;scale&lt;/strong&gt; Multiplicative scaling factor.暂时不知道什么意思?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;width, height, units&lt;/strong&gt; 要保存图片的宽和高,以及其单位.单位包括:“in”(英寸), “cm”, or “mm”.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;dpi&lt;/strong&gt; 图片分辨率.一般是数字.也可以使用文字符:“retina” (320), “print” (300), or “screen” (72).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;limitsize&lt;/strong&gt; 如果设置为TRUE,则&lt;code&gt;ggsave&lt;/code&gt;不会保存尺寸大于50×50 inch的图片.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;…&lt;/strong&gt; 其他可以用于图形设备(graphics device function)的参数.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;图层layer几何对象geoms&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; 图层(Layer):几何对象(geoms)&lt;/h1&gt;
&lt;p&gt;一个图层包括了数据(data),美学映射(aesthetic mapping),几何对象(geometric object),统计转换(statistical transformation),以及位置调整(position adjustment).一般来说,应该使用&lt;code&gt;geom_xxx()&lt;/code&gt;函数来创建图层.必要情况下,需要手动设置去覆盖默认的位置和统计转换.&lt;/p&gt;
&lt;div id=&#34;直线geom_ablinegeom_hline和geom_vline&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.1&lt;/span&gt; 直线&lt;code&gt;geom_abline&lt;/code&gt;,&lt;code&gt;geom_hline&lt;/code&gt;和&lt;code&gt;geom_vline&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;这三个函数(几何对象)分别用来画对角线,水平和垂直直线.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;geom_abline(mapping = NULL, data = NULL, ..., slope, intercept,
  na.rm = FALSE, show.legend = NA)

geom_hline(mapping = NULL, data = NULL, ..., yintercept,
  na.rm = FALSE, show.legend = NA)

geom_vline(mapping = NULL, data = NULL, ..., xintercept,
  na.rm = FALSE, show.legend = NA)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;参数-3&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.1.1&lt;/span&gt; 参数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;mapping&lt;/strong&gt; 美学映射,使用&lt;code&gt;aes()&lt;/code&gt;函数设置.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;data&lt;/strong&gt; 用于创建该图层的数据.有三种选择: 1)如果设置为&lt;code&gt;NULL&lt;/code&gt;,也是默认设置.则该数据继承自&lt;code&gt;ggplot()&lt;/code&gt;函数中的数据.2)一个&lt;code&gt;data.frame&lt;/code&gt;,或者其他的对象,如&lt;code&gt;tibble&lt;/code&gt;,这将会覆盖&lt;code&gt;ggplot()&lt;/code&gt;中的数据.3)也可以是一个&lt;code&gt;function()&lt;/code&gt;,但是该function最后返回的对象应该是&lt;code&gt;data.frame&lt;/code&gt;.&lt;code&gt;function&lt;/code&gt;可以使用&lt;code&gt;formula&lt;/code&gt;格式进行创建,如:&lt;code&gt;head(.x, 10)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;…&lt;/strong&gt; 其他的可以传入&lt;code&gt;layer()&lt;/code&gt;的参数.一般是美学对象,如&lt;code&gt;colour = &#34;red&#34;&lt;/code&gt;或者&lt;code&gt;size = 3&lt;/code&gt;.也可以是一些一些能够传入到和&lt;code&gt;geom_&lt;/code&gt;配对的geom/stat的参数.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;na.rm&lt;/strong&gt; 默认为&lt;code&gt;FALSE&lt;/code&gt;, missing value会被去除掉,但是会给出&lt;code&gt;warning&lt;/code&gt;,如果设置为&lt;code&gt;TRUE&lt;/code&gt;,missing value也会被去除掉,但是不会给&lt;code&gt;warning&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;show.legend&lt;/strong&gt; 该图层是否要显示在legend上.默认为&lt;code&gt;NA&lt;/code&gt;,则该图层中所有的映射到图形属性的变量都会显示在legend中.&lt;code&gt;FALSE&lt;/code&gt;则永远不显示,&lt;code&gt;TRUE&lt;/code&gt;则永远显示.如果该图形有多个变量映射到不同的图形属性,则可以将其设置为一个vector,分别控制不同的变量是否显示.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;xintercept/yintercept/slope/intercept&lt;/strong&gt; 控制直线的位置参数.如果这些设置了,则&lt;code&gt;data&lt;/code&gt;,&lt;code&gt;mapping&lt;/code&gt;和&lt;code&gt;show.legend&lt;/code&gt;则会被覆盖掉.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;细节-2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.1.2&lt;/span&gt; 细节&lt;/h3&gt;
&lt;p&gt;这些几何对象和其他的几何对象稍微有些不同.可以通过两种方法提供参数:1)给layer函数提供参数,或者2)通过美学对象提供参数.如果你使用参数,例如&lt;code&gt;geom_abline(intercept = 0, slope = 1)&lt;/code&gt;,然后几何对象(&lt;code&gt;geom_&lt;/code&gt;)会创建一个新的data frame,这个data rame只包括了你所提供的数据.这意味着在所有的分面中,直线都是相同的.如果你想在不同的分面中,直线不相同,你需要自己创建一个data frame,然后再美学映射(aesthetics)中设置.&lt;/p&gt;
&lt;p&gt;与其他的几何对象不同,这些几何对象不会从&lt;code&gt;ggplot&lt;/code&gt;中继承data.他们也不会影响到x和y的scale.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;美学映射aesthetics&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.1.3&lt;/span&gt; 美学映射(Aesthetics)&lt;/h3&gt;
&lt;p&gt;这三个几何对象(geom)其实都是使用&lt;code&gt;geom_line()&lt;/code&gt;函数来画直线的,因此他们都支持&lt;code&gt;geom_line()&lt;/code&gt;的美学参数,如&lt;code&gt;alpha&lt;/code&gt;,&lt;code&gt;colour&lt;/code&gt;,&lt;code&gt;linetype&lt;/code&gt;和&lt;code&gt;size&lt;/code&gt;.对于每个几何对象都有,都有单独的参数用来控制直线的位置:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;geom_vline&lt;/code&gt;:&lt;code&gt;xintercept&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;geom_hline&lt;/code&gt;:&lt;code&gt;yintercept&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;geom_vline&lt;/code&gt;:&lt;code&gt;slope&lt;/code&gt;(斜率)和&lt;code&gt;intercept&lt;/code&gt;(截距).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;例子-2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.1.4&lt;/span&gt; 例子&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
p &amp;lt;- 
  ggplot(mtcars, aes(wt, mpg)) + 
  geom_point()

# 添加垂直直线
p + 
  geom_vline(xintercept = 5)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-25-ggplot2-cookbook_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p + 
  geom_vline(xintercept = 1:5)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-25-ggplot2-cookbook_files/figure-html/unnamed-chunk-3-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 添加水平直线
p + 
  geom_hline(yintercept = 20)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-25-ggplot2-cookbook_files/figure-html/unnamed-chunk-3-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 添加对角线,默认斜率为1
p + 
  geom_abline(intercept = 20)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-25-ggplot2-cookbook_files/figure-html/unnamed-chunk-3-4.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 计算直线回归的斜率和截距
coef(lm(mpg ~ wt, data = mtcars))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## (Intercept)          wt 
##   37.285126   -5.344472&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p + 
  geom_abline(intercept = 37, slope = -5)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-25-ggplot2-cookbook_files/figure-html/unnamed-chunk-3-5.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 但是使用geom_smooth更加简单h:
p + 
  geom_smooth(method = &amp;quot;lm&amp;quot;, se = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-25-ggplot2-cookbook_files/figure-html/unnamed-chunk-3-6.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 如果想要再不同分面显示不同的直线,则使用美学对象,也就是需要自己创建
p &amp;lt;- ggplot(mtcars, aes(mpg, wt)) +
  geom_point() +
  facet_wrap(~ cyl)

mean_wt &amp;lt;- 
  data.frame(cyl = c(4, 6, 8), wt = c(2.28, 3.11, 4.00))
mean_wt&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   cyl   wt
## 1   4 2.28
## 2   6 3.11
## 3   8 4.00&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p + 
  geom_hline(mapping = aes(x = cyl, yintercept = wt), 
             data = mean_wt)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Ignoring unknown aesthetics: x&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-25-ggplot2-cookbook_files/figure-html/unnamed-chunk-3-7.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##如果不使用美学对象,则在每一个分面上都是一样的
p +
  geom_hline(yintercept = mean_wt$wt)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-25-ggplot2-cookbook_files/figure-html/unnamed-chunk-3-8.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 控制其他美学对象
ggplot(mtcars, aes(mpg, wt, colour = wt)) +
  geom_point() +
  geom_hline(aes(yintercept = wt, colour = wt), mean_wt) +
  facet_wrap(~ cyl)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-25-ggplot2-cookbook_files/figure-html/unnamed-chunk-3-9.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;柱形图bar-chartsgeom_bargeom_col和stat_count&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.2&lt;/span&gt; 柱形图(bar charts)&lt;code&gt;geom_bar()&lt;/code&gt;,&lt;code&gt;geom_col()&lt;/code&gt;和&lt;code&gt;stat_count&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;一共有两种类型的函数用来绘制柱形图:&lt;code&gt;geom_bar()&lt;/code&gt;和&lt;code&gt;geom_col()&lt;/code&gt;函数.&lt;code&gt;geom_bar()&lt;/code&gt;配对的统计转换函数为&lt;code&gt;stat_count()&lt;/code&gt;函数,所以他会自动将每个group的case个数计算出来,然后转为新的data frame,也就是group和数目,然后映射到x和y轴上.而&lt;code&gt;geom_bar()&lt;/code&gt;则和R base的bar plot函数相似(默认配对统计转换函数为&lt;code&gt;stat_identify()&lt;/code&gt;函数),需要指定x和y轴变量,然后直接将指定的y轴变量映射为bar的高度.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;geom_bar(mapping = NULL, data = NULL, stat = &amp;quot;count&amp;quot;,
  position = &amp;quot;stack&amp;quot;, ..., width = NULL, binwidth = NULL,
  na.rm = FALSE, show.legend = NA, inherit.aes = TRUE)

geom_col(mapping = NULL, data = NULL, position = &amp;quot;stack&amp;quot;, ...,
  width = NULL, na.rm = FALSE, show.legend = NA,
  inherit.aes = TRUE)

stat_count(mapping = NULL, data = NULL, geom = &amp;quot;bar&amp;quot;,
  position = &amp;quot;stack&amp;quot;, ..., width = NULL, na.rm = FALSE,
  show.legend = NA, inherit.aes = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;参数-4&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.2.1&lt;/span&gt; 参数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;mapping&lt;/strong&gt; 美学映射,使用&lt;code&gt;aes()&lt;/code&gt;函数设置.如果设置参数&lt;code&gt;inherit.aes = TRUE&lt;/code&gt;(默认),则该图层会从&lt;code&gt;ggplot()&lt;/code&gt;函数继承美学映射的参数.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;data&lt;/strong&gt; 用于创建该图层的数据.有三种选择: 1)如果设置为&lt;code&gt;NULL&lt;/code&gt;,也是默认设置.则该数据继承自&lt;code&gt;ggplot()&lt;/code&gt;函数中的数据.2)一个&lt;code&gt;data.frame&lt;/code&gt;,或者其他的对象,如&lt;code&gt;tibble&lt;/code&gt;,这将会覆盖&lt;code&gt;ggplot()&lt;/code&gt;中的数据.3)也可以是一个&lt;code&gt;function()&lt;/code&gt;,但是该function最后返回的对象应该是&lt;code&gt;data.frame&lt;/code&gt;.&lt;code&gt;function&lt;/code&gt;可以使用&lt;code&gt;formula&lt;/code&gt;格式进行创建,如:&lt;code&gt;head(.x, 10)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;position&lt;/strong&gt; 位置调整(position adjustment).可以是字符,也可以是使用位置调整参数返回的对象.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;…&lt;/strong&gt; 其他的可以传入&lt;code&gt;layer()&lt;/code&gt;的参数.一般是美学对象,如&lt;code&gt;colour = &#34;red&#34;&lt;/code&gt;或者&lt;code&gt;size = 3&lt;/code&gt;.也可以是一些一些能够传入到和&lt;code&gt;geom_&lt;/code&gt;配对的geom/stat的参数.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;width&lt;/strong&gt; 柱形图的宽度. 默认设置为数据“分辨率”的90%(0.9).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;na.rm&lt;/strong&gt; 默认为&lt;code&gt;FALSE&lt;/code&gt;, missing value会被去除掉,但是会给出&lt;code&gt;warning&lt;/code&gt;,如果设置为&lt;code&gt;TRUE&lt;/code&gt;,missing value也会被去除掉,但是不会给&lt;code&gt;warning&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;show.legend&lt;/strong&gt; 该图层是否要显示在legend上.默认为&lt;code&gt;NA&lt;/code&gt;,则该图层中所有的映射到图形属性的变量都会显示在legend中.&lt;code&gt;FALSE&lt;/code&gt;则永远不显示,&lt;code&gt;TRUE&lt;/code&gt;则永远显示.如果该图形有多个变量映射到不同的图形属性,则可以将其设置为一个vector,分别控制不同的变量是否显示.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;inherit.aes&lt;/strong&gt; 如果设置为&lt;code&gt;FALSE&lt;/code&gt;,覆盖掉而不是结合默认美学参数. This is most useful for helper functions that define both data and aesthetics and shouldn’t inherit behaviour from the default plot specification, e.g. borders().不太明白这个意思?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;geom, stat&lt;/strong&gt; 覆盖掉默认的&lt;code&gt;geom_()&lt;/code&gt;和&lt;code&gt;stat_()&lt;/code&gt;函数.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;细节-3&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.2.2&lt;/span&gt; 细节&lt;/h3&gt;
&lt;p&gt;柱形图使用高度来表示数值.所以一般柱形图是用来进行对比展示的.这也是为什么如果你将数据log之后,使用柱形图就不太合适.&lt;/p&gt;
&lt;p&gt;默认,对于同个x轴位置有着多个柱子,则他们会堆积在一起.也就输堆积柱形图,这是由默认的位置调整函数&lt;code&gt;position_stack()&lt;/code&gt;实现的.如果你想要让他们并排排列,则需要使用&lt;code&gt;position_dodge()&lt;/code&gt;或者&lt;code&gt;position_dodge2()&lt;/code&gt;函数.当然,如果你想要堆叠柱形图,而显示的是比例而不是真实数值,则需要使用&lt;code&gt;position_fill()&lt;/code&gt;函数.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;美学参数aesthetics&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.2.3&lt;/span&gt; 美学参数(Aesthetics)&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;geom_bar()&lt;/code&gt;可以接受以下美学参数(粗体为必须参数).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;x&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;y&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;alpha&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;colour&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;fill&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;group&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;linetype&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;size&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;geom_col()&lt;/code&gt;可以接受以下美学参数(粗体为必须参数).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;x&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;y&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;alpha&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;colour&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;fill&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;group&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;linetype&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;size&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;stat_count()&lt;/code&gt;可以接受以下美学参数(粗体为必须参数).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;x&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;y&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;group&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;weight&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;计算变量-computed-variables&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.2.4&lt;/span&gt; 计算变量 (Computed variables)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;count&lt;/strong&gt; 每一个grou中的数目&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;prop&lt;/strong&gt; 每组的比例&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;例子-3&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.2.5&lt;/span&gt; 例子&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
## 首先创建一个ggplot2对象
g &amp;lt;- ggplot(mpg, aes(class))
# 然后使用geom_bar来展示每个class的case的数目
g + geom_bar()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-25-ggplot2-cookbook_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 可以通过设置weight参数,将每个柱子的高度改为该变量的和
g + geom_bar(aes(weight = displ))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-25-ggplot2-cookbook_files/figure-html/unnamed-chunk-4-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 当每一个柱子又可以分为不同的group时,默认是堆积在一起的.
g + geom_bar(aes(fill = drv))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-25-ggplot2-cookbook_files/figure-html/unnamed-chunk-4-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 如果想要翻转类别的顺序,可以在position参数中设置
g +
 geom_bar(aes(fill = drv), 
          position = position_stack(reverse = TRUE)) +
 coord_flip() +
 theme(legend.position = &amp;quot;top&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-25-ggplot2-cookbook_files/figure-html/unnamed-chunk-4-4.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 如果只是想要柱子高度显示某个变量的值,使用geom_col函数
df &amp;lt;- data.frame(trt = c(&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot;), outcome = c(2.3, 1.9, 3.2))
ggplot(df, aes(trt, outcome)) +
  geom_col()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-25-ggplot2-cookbook_files/figure-html/unnamed-chunk-4-5.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 当然,geom_bar函数也可以用来显示连续性的变量
df &amp;lt;- data.frame(x = rep(c(2.9, 3.1, 4.5), c(5, 10, 4)))
ggplot(df, aes(x)) + geom_bar()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-25-ggplot2-cookbook_files/figure-html/unnamed-chunk-4-6.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# cf. a histogram of the same data
ggplot(df, aes(x)) + geom_histogram(binwidth = 0.5)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-25-ggplot2-cookbook_files/figure-html/unnamed-chunk-4-7.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;二维方格计数热图heatmap-of-2d-bin-countsgeom_bin2d和stat_bin_2d&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.3&lt;/span&gt; 二维方格计数热图(Heatmap of 2d bin counts)&lt;code&gt;geom_bin2d()&lt;/code&gt;和&lt;code&gt;stat_bin_2d()&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;将平面划分为放个,然后计算每个方格中case的数目,然后将小方格内的case的数目映射到小方格的填充颜色上(默认).这种作图方法与&lt;code&gt;geom_point()&lt;/code&gt;相比,好处是可以有效的避免重叠.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;geom_bin2d(mapping = NULL, data = NULL, stat = &amp;quot;bin2d&amp;quot;,
  position = &amp;quot;identity&amp;quot;, ..., na.rm = FALSE, show.legend = NA,
  inherit.aes = TRUE)

stat_bin_2d(mapping = NULL, data = NULL, geom = &amp;quot;tile&amp;quot;,
  position = &amp;quot;identity&amp;quot;, ..., bins = 30, binwidth = NULL,
  drop = TRUE, na.rm = FALSE, show.legend = NA, inherit.aes = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;参数-5&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.3.1&lt;/span&gt; 参数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;mapping&lt;/strong&gt; 美学映射参数,使用&lt;code&gt;aes()&lt;/code&gt;建立.如果在该图层进行设置,并且&lt;code&gt;inherit.aes = TRUE&lt;/code&gt;(默认), it is combined with the default mapping at the top level of the plot. You must supply mapping if there is no plot mapping?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;data&lt;/strong&gt; 用于创建该图层的数据.有三种选择: 1)如果设置为&lt;code&gt;NULL&lt;/code&gt;,也是默认设置.则该数据继承自&lt;code&gt;ggplot()&lt;/code&gt;函数中的数据.2)一个&lt;code&gt;data.frame&lt;/code&gt;,或者其他的对象,如&lt;code&gt;tibble&lt;/code&gt;,这将会覆盖&lt;code&gt;ggplot()&lt;/code&gt;中的数据.3)也可以是一个&lt;code&gt;function()&lt;/code&gt;,但是该function最后返回的对象应该是&lt;code&gt;data.frame&lt;/code&gt;.&lt;code&gt;function&lt;/code&gt;可以使用&lt;code&gt;formula&lt;/code&gt;格式进行创建,如:&lt;code&gt;head(.x, 10)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;position&lt;/strong&gt; 位置调整(position adjustment).可以是字符,也可以是使用位置调整参数返回的对象.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;…&lt;/strong&gt; 其他的可以传入&lt;code&gt;layer()&lt;/code&gt;的参数.一般是美学对象,如&lt;code&gt;colour = &#34;red&#34;&lt;/code&gt;或者&lt;code&gt;size = 3&lt;/code&gt;.也可以是一些一些能够传入到和&lt;code&gt;geom_&lt;/code&gt;配对的geom/stat的参数.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;na.rm&lt;/strong&gt; 默认为&lt;code&gt;FALSE&lt;/code&gt;, missing value会被去除掉,但是会给出&lt;code&gt;warning&lt;/code&gt;,如果设置为&lt;code&gt;TRUE&lt;/code&gt;,missing value也会被去除掉,但是不会给&lt;code&gt;warning&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;show.legend&lt;/strong&gt; 该图层是否要显示在legend上.默认为&lt;code&gt;NA&lt;/code&gt;,则该图层中所有的映射到图形属性的变量都会显示在legend中.&lt;code&gt;FALSE&lt;/code&gt;则永远不显示,&lt;code&gt;TRUE&lt;/code&gt;则永远显示.如果该图形有多个变量映射到不同的图形属性,则可以将其设置为一个vector,分别控制不同的变量是否显示.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;inherit.aes&lt;/strong&gt; 如果设置为&lt;code&gt;FALSE&lt;/code&gt;,覆盖掉而不是结合默认美学参数. This is most useful for helper functions that define both data and aesthetics and shouldn’t inherit behaviour from the default plot specification, e.g. borders().不太明白这个意思?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;geom, stat&lt;/strong&gt; 覆盖掉默认的&lt;code&gt;geom_()&lt;/code&gt;和&lt;code&gt;stat_()&lt;/code&gt;函数.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;bins&lt;/strong&gt; 数值型的向量,用来分别设置垂直和水平方向上的bin的数目,默认都是30.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;binwidth&lt;/strong&gt; 数值型向量,用于设置在垂直和水平方向上的bin的宽度.如果该参数设置,则会覆盖掉bins参数.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;drop&lt;/strong&gt; 如果设置为&lt;code&gt;TRUE&lt;/code&gt;,则会去除掉count为0的方格.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;美学参数asethetics&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.3.2&lt;/span&gt; 美学参数(Asethetics)&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;stat_bind2d()&lt;/code&gt;接受以下美学参数(黑体为必须参数):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;x&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;y&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;fill&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;*group&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;计算变量computed-variables&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.3.3&lt;/span&gt; 计算变量(Computed variables)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;count&lt;/strong&gt; bin中的数据点的个数.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;density&lt;/strong&gt; bin中数据点的密度(density),整体数据点数目为1,所有其他bin内数据点数目与之scale.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ncount&lt;/strong&gt; count, scaled to maximum of 1?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ndensity&lt;/strong&gt; density, scaled to maximum of 1&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;例子-4&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.3.4&lt;/span&gt; 例子&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
d &amp;lt;- ggplot(diamonds, aes(x, y)) + 
  xlim(4, 10) + 
  ylim(4, 10)
d + geom_bin2d()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Removed 478 rows containing non-finite values (stat_bin2d).&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-25-ggplot2-cookbook_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;空白图geom_blank&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.4&lt;/span&gt; 空白图&lt;code&gt;geom_blank()&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;geom_blank()&lt;/code&gt;函数不绘制任何东西,但是可以用来绘制一个空的plot来保持一定的刻度.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;geom_blank(mapping = NULL, data = NULL, stat = &amp;quot;identity&amp;quot;,
  position = &amp;quot;identity&amp;quot;, ..., show.legend = NA, inherit.aes = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;参数-6&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.4.1&lt;/span&gt; 参数&lt;/h3&gt;
&lt;p&gt;所有参数可以参考上面所有的函数.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;例子-5&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.4.2&lt;/span&gt; 例子&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p &amp;lt;- 
  ggplot(mtcars, aes(wt, mpg))
p&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-25-ggplot2-cookbook_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p + 
  geom_blank()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-25-ggplot2-cookbook_files/figure-html/unnamed-chunk-6-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R data visulization cookbook</title>
      <link>/post/r-data-visulization-cookbook/</link>
      <pubDate>Fri, 25 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/r-data-visulization-cookbook/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#ggplot2中如何反转坐标轴&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.1&lt;/span&gt; &lt;code&gt;ggplot2&lt;/code&gt;中如何反转坐标轴?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ggplot2中如何修改绘图区域的边界&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.2&lt;/span&gt; &lt;code&gt;ggplot2&lt;/code&gt;中如何修改绘图区域的边界?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#如何获得合适的配色组合&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.3&lt;/span&gt; 如何获得合适的配色组合?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ggplot2中如何反转坐标轴-1&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.4&lt;/span&gt; &lt;code&gt;ggplot2&lt;/code&gt;中如何反转坐标轴?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;ggplot2中如何反转坐标轴&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1&lt;/span&gt; &lt;code&gt;ggplot2&lt;/code&gt;中如何反转坐标轴?&lt;/h3&gt;
&lt;p&gt;使用&lt;code&gt;scale_x_reverse()/scale_y_reverse()&lt;/code&gt;函数.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggplot2&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(magrittr)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;magrittr&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p &amp;lt;- 
mtcars %&amp;gt;% 
  ggplot(aes(mpg, disp)) +
  geom_point() 
p&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-25-r-data-visulization-cookbook_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##反转X坐标轴
p + 
  scale_x_reverse()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-25-r-data-visulization-cookbook_files/figure-html/unnamed-chunk-1-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 反转y坐标轴
p + 
  scale_y_reverse()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-25-r-data-visulization-cookbook_files/figure-html/unnamed-chunk-1-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ggplot2中如何修改绘图区域的边界&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.2&lt;/span&gt; &lt;code&gt;ggplot2&lt;/code&gt;中如何修改绘图区域的边界?&lt;/h3&gt;
&lt;p&gt;在&lt;code&gt;theme()&lt;/code&gt;函数中设置&lt;code&gt;plot.margin&lt;/code&gt;参数,且该参数应该是一个&lt;code&gt;margin()&lt;/code&gt;函数构建的对象.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
library(magrittr)
p &amp;lt;- 
mtcars %&amp;gt;% 
  ggplot(aes(mpg, disp)) +
  geom_point(size = 2, colour = &amp;quot;skyblue&amp;quot;) +
  theme_bw() +
  theme(plot.margin = margin(t = 0, r = 0, b = 0, l = 0, unit = &amp;quot;pt&amp;quot;))
p&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-25-r-data-visulization-cookbook_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;如何获得合适的配色组合&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.3&lt;/span&gt; 如何获得合适的配色组合?&lt;/h3&gt;
&lt;p&gt;比较常见的配色工具包括&lt;code&gt;ggsci&lt;/code&gt;,&lt;code&gt;RColorBrewer&lt;/code&gt;等.且可以使用&lt;code&gt;scales&lt;/code&gt;包中的&lt;code&gt;show_col()&lt;/code&gt;函数来展示颜色.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggsci)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggsci&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(scales)

test_colour &amp;lt;- 
  ggsci::pal_jama()(7)

show_col(test_colour)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-25-r-data-visulization-cookbook_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;test_colour &amp;lt;- 
  ggsci::pal_jama(alpha = 0.5)(7)

show_col(test_colour)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-25-r-data-visulization-cookbook_files/figure-html/unnamed-chunk-3-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;另外,&lt;code&gt;RColorBrewer&lt;/code&gt;包也非常方便.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(RColorBrewer)
##显示所有的配色
RColorBrewer::display.brewer.all()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-25-r-data-visulization-cookbook_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##可以扩大弄每一种配色左边都有该配色的名字,因此如果想要单独显示该配色,直接使用下列命令.
RColorBrewer::display.brewer.pal(n = 9, name = &amp;quot;Set1&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-25-r-data-visulization-cookbook_files/figure-html/unnamed-chunk-4-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##两个参数分别用来设置需要显示的颜色的个数以及配色的名字.
#如果需要将该配色名字提出来,使用下面命令
RColorBrewer::brewer.pal(n = 9, name = &amp;quot;Set1&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;#E41A1C&amp;quot; &amp;quot;#377EB8&amp;quot; &amp;quot;#4DAF4A&amp;quot; &amp;quot;#984EA3&amp;quot; &amp;quot;#FF7F00&amp;quot; &amp;quot;#FFFF33&amp;quot; &amp;quot;#A65628&amp;quot;
## [8] &amp;quot;#F781BF&amp;quot; &amp;quot;#999999&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;ggplot2中如何反转坐标轴-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.4&lt;/span&gt; &lt;code&gt;ggplot2&lt;/code&gt;中如何反转坐标轴?&lt;/h3&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>快速回到R project所在的工作目录</title>
      <link>/post/r-project-work-directory/</link>
      <pubDate>Fri, 25 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/r-project-work-directory/</guid>
      <description>


&lt;p&gt;&lt;code&gt;Rstudio&lt;/code&gt;的&lt;code&gt;Rproject&lt;/code&gt;可以用来方便的管理自己的某个项目的所有代码,文件等等.另外的一个好处是打开该项目文件之后,路径自动设置为该project所在的工作目录,因此在该项目下可以通过相对路径来设置后续分析文件所在的工作目录.从未方便代码的移植和分享.&lt;/p&gt;
&lt;p&gt;但是如何快速回到自己&lt;code&gt;Rproject&lt;/code&gt;所在的目录呢?比如在某个项目中,我的&lt;code&gt;Rproject&lt;/code&gt;所在目录为&lt;code&gt;A&lt;/code&gt;,而我的某个数据分析的文件在路径&lt;code&gt;A/B/C&lt;/code&gt;,当我通过相对路径设置在该目录下,另外一个分析所在的目录为&lt;code&gt;A/E/F&lt;/code&gt;,这时候我就需要先将路径设置到&lt;code&gt;A&lt;/code&gt;,然后才可以再通过设置相对路径将目录修改为&lt;code&gt;A/E/F&lt;/code&gt;.所以可以看到,需要经常将目录设置为&lt;code&gt;Rproject&lt;/code&gt;所在的根目录.因此,写了一个小的函数,可以用来快速的目录切换为&lt;code&gt;Rproject&lt;/code&gt;所在目录.&lt;/p&gt;
&lt;p&gt;代码如下:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;setwd_project &amp;lt;- function() {
  currect_wd &amp;lt;-
    getwd()

  candidate_wd &amp;lt;-
    currect_wd %&amp;gt;%
    stringr::str_split(&amp;quot;/&amp;quot;) %&amp;gt;%
    unlist()

  if (length(candidate_wd) == 1) {
    candidate_wd &amp;lt;- currect_wd
  } else{
    candidate_wd &amp;lt;-
      lapply(2:length(candidate_wd), function(i) {
        paste(candidate_wd[1:i], collapse = &amp;quot;/&amp;quot;)
      })
  }

  candidate_wd &amp;lt;-
    rev(candidate_wd)

  for (i in 1:length(candidate_wd)) {
    wd &amp;lt;- candidate_wd[[i]]
    file_name &amp;lt;-
      list.files(wd,
                 recursive = ifelse(wd == currect_wd, TRUE, FALSE),
                 full.names = TRUE)
    project_index &amp;lt;-
      grep(&amp;quot;.Rproj&amp;quot;, file_name)

    if (length(project_index) != 0) {
      project_wd &amp;lt;-
        file_name[project_index[1]] %&amp;gt;%
        stringr::str_split(&amp;quot;/&amp;quot;) %&amp;gt;%
        unlist() %&amp;gt;%
        head(-1) %&amp;gt;%
        paste(collapse = &amp;quot;/&amp;quot;)
      cat(
        &amp;quot;The project name is:&amp;quot;,
        file_name[project_index[1]] %&amp;gt;%
          stringr::str_split(&amp;quot;/&amp;quot;) %&amp;gt;%
          unlist() %&amp;gt;%
          tail(1),
        &amp;quot;\n&amp;quot;
      )
      cat(&amp;quot;The project wd is:&amp;quot;,
          project_wd, &amp;quot;\n&amp;quot;)

      setwd(project_wd)
      break()
    }
  }
  if (length(project_index) == 0) {
    cat(&amp;quot;There are no .Rproj in your file. No change for wd.\n&amp;quot;)
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;思路和代码都很简单,这个函数也在我自己常用的小工具集合&lt;code&gt;sxtTools&lt;/code&gt;包中,所过想要直接使用,可以考虑安装这个包.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;devtools::install_github(&amp;quot;jaspershen/sxtTools&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>斯坦福资源总结</title>
      <link>/post/stanford-resource-summary/</link>
      <pubDate>Fri, 25 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/stanford-resource-summary/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#adobe软件&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.1&lt;/span&gt; Adobe软件&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;这篇博文主要用来记录斯坦福校内的一些资源和手续的办理事项.&lt;/p&gt;
&lt;div id=&#34;adobe软件&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1&lt;/span&gt; Adobe软件&lt;/h3&gt;
&lt;p&gt;斯坦福医学院是有免费的Adobe软件可以使用的,包括Illustrator,photoshop等.网址如下:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://csbf.stanford.edu/software/&#34; class=&#34;uri&#34;&gt;https://csbf.stanford.edu/software/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;叫CSBF.点进去之后,点击&lt;code&gt;(Sign your lab up here)&lt;/code&gt;,然后输入信息,注册账号,会收到邮件,提示注册成功,一般账号就是SunetID.然后再次登录CSBF网站,下载软件,安装即可.但是该软件只能在斯坦福网络条件下使用.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2019-10-25-stanford-resource-summary/csbf.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Docker的安装使用和配置</title>
      <link>/post/docker/</link>
      <pubDate>Wed, 16 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/docker/</guid>
      <description>


&lt;p&gt;将自己安装docker,使用以及配置记录下来,主要还包括常用的命令总结以及一些bug的处理,以及一些常见资源.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>R 语言常见统计预测模型</title>
      <link>/post/r-ml-model/</link>
      <pubDate>Wed, 16 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/r-ml-model/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#lasso模型&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.1&lt;/span&gt; lasso模型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#references&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.2&lt;/span&gt; References&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;lasso模型&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1&lt;/span&gt; lasso模型&lt;/h3&gt;
&lt;p&gt;LASSO回归的特点是在拟合广义线性模型的同时进行变量筛选(variable selection)和复杂度调整(regularization).因此,不论因变量(dependent/response varaible)是连续的(continuous),还是二元或者多元离散的（discrete）,都可以用LASSO回归建模然后预测.这里的变量筛选是指不把所有的变量都放入模型中进行拟合,而是有选择的把变量放入模型从而得到更好的性能参数. 复杂度调整是指通过一系列参数控制模型的复杂度,从而避免过拟合(overfitting). 对于线性模型来说,复杂度与模型的变量数有直接关系,变量数越多,模型复杂度就越高. 更多的变量在拟合时往往可以给出一个看似更好的模型,但是同时也面临过度拟合的危险.此时如果用全新的数据去验证模型(validation),通常效果很差. 一般来说,变量数大于数据点数量很多,或者某一个离散变量有太多独特值时,都有可能过度拟合.&lt;/p&gt;
&lt;p&gt;LASSO回归的复杂度主要由参数&lt;span class=&#34;math inline&#34;&gt;\(\lambda\)&lt;/span&gt;(lambda)来控制.lambda越大,对变量较多的线性模型的惩罚力度就越大.最终获得一个变量较少的模型.&lt;/p&gt;
&lt;p&gt;另外还有一个参数&lt;span class=&#34;math inline&#34;&gt;\(\alpha\)&lt;/span&gt;(alpha)用来控制高度相关性模型的性状.LASSO回归时,alpha设置为1.&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;glmnet&lt;/code&gt;包可以进行LASSO回归.它可以对一系列不同的lambda值进行拟合,每次拟合都用到上一个lambda拟合的结果,从而大大提高了运行效率.&lt;/p&gt;
&lt;div id=&#34;常用参数如下&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1.1&lt;/span&gt; 常用参数如下:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;x&lt;/code&gt;: 自变量数据集,需要为matrix格式,行为观测列为变量.&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;y&lt;/code&gt;: 因变量数据集,需要为matrix格式,只有一列.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;family&lt;/code&gt;: 应变量类型.如果时连续性变量(也就是要做回归分析),&lt;code&gt;family&lt;/code&gt;应该为&lt;code&gt;gussian&lt;/code&gt;(高斯分布/正态分布)或者&lt;code&gt;poisson&lt;/code&gt;(泊松分布).如果为两分类不连续变量(factor类型,且只有两个levels),应设置为&lt;code&gt;binomial&lt;/code&gt;.如果时多分类不连续变量(factor类型,且多个levels),则应设置为&lt;code&gt;multinomial&lt;/code&gt;.如果设置为&lt;code&gt;cox&lt;/code&gt;,则y应当为一个两列的matrix,列名分别为&lt;code&gt;time&lt;/code&gt;和&lt;code&gt;status&lt;/code&gt;,&lt;code&gt;tiem&lt;/code&gt;为存活时间,&lt;code&gt;status&lt;/code&gt;为结局状态(1代表死亡,0代表还未死亡).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;alpha&lt;/code&gt;: 在LASSO回归中,将其设置为1.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nlambda&lt;/code&gt;: 选取多少个lambda进行优化,默认为100.也就是使用100个lambda值拟合出100个系数不同的模型.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lambda&lt;/code&gt;: 提供lambda值,如果设置该值(一个或者多个),则会覆盖掉自动选择的lambda值.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;standardize&lt;/code&gt;: 是否对数据进行标准化(scale),默认为TRUE.推荐自己对数据进行标准化,如果自己做过sca了,这里需要设置为FALSE.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;构建模型&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1.2&lt;/span&gt; 构建模型&lt;/h4&gt;
&lt;p&gt;构建模型之后,可以将其打印出来观察具体信息.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.2&lt;/span&gt; References&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cosx.org/2016/10/data-mining-1-lasso/&#34; class=&#34;uri&#34;&gt;https://cosx.org/2016/10/data-mining-1-lasso/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>网络分析之igraph</title>
      <link>/post/igraph/</link>
      <pubDate>Tue, 15 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/igraph/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#安装&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.1&lt;/span&gt; 安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#常用功能总结&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.2&lt;/span&gt; 常用功能总结&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code&gt;igraph&lt;/code&gt;是一些列网络分析工具的集合.开源且免费,拥有R, Python以及C/C++等语言接口.我们主要介绍R语言中的&lt;code&gt;igraph&lt;/code&gt;包.其官网如下:
&lt;a href=&#34;https://igraph.org/r/doc/plot.common.html&#34; class=&#34;uri&#34;&gt;https://igraph.org/r/doc/plot.common.html&lt;/a&gt;&lt;/p&gt;
&lt;div id=&#34;安装&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1&lt;/span&gt; 安装&lt;/h3&gt;
&lt;/div&gt;
&lt;div id=&#34;常用功能总结&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.2&lt;/span&gt; 常用功能总结&lt;/h3&gt;
&lt;div id=&#34;寻找某个vertex的neighbor&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.2.1&lt;/span&gt; 寻找某个vertex的neighbor&lt;/h4&gt;
&lt;p&gt;使用&lt;code&gt;neighbors()&lt;/code&gt;函数.一共两个参数:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;graph&lt;/code&gt;:&lt;code&gt;igraph&lt;/code&gt;类对象.&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;V&lt;/code&gt;:某vertex的名字(name).&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mode&lt;/code&gt;: 对于有向图来说,是寻找从该vertex出发的neighbors(‘out’),还是指向该vertex的neighbors(‘in’),还是两种都寻找(‘both’).&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;设置graph中vertex的属性&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.2.2&lt;/span&gt; 设置graph中vertex的属性&lt;/h4&gt;
&lt;p&gt;如果需要给graph中的vertex增加或者修改属性,可以使用&lt;code&gt;ste_vertex_attr()&lt;/code&gt;函数.一共四个参数:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;graph&lt;/code&gt;:&lt;code&gt;igraph&lt;/code&gt;类对象.&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;name&lt;/code&gt;:设置的新的属性的名字.&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;index&lt;/code&gt;:设置vertex属性时的vertex的index.默认按照graph中vertex的默认index(V(graph))来设置.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;value&lt;/code&gt;:设置的属性的值.需要和vertex的长度一致.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;将igraph对象转变为data.frame格式&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.2.3&lt;/span&gt; 将&lt;code&gt;igraph&lt;/code&gt;对象转变为data.frame格式&lt;/h4&gt;
&lt;p&gt;使用&lt;code&gt;as_long_data_frame()&lt;/code&gt;函数可以将&lt;code&gt;igraph&lt;/code&gt;转换为data.frame格式.只有一个参数,就是&lt;code&gt;graph&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;从一个graph提取子graphsubgraph&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.2.4&lt;/span&gt; 从一个graph提取子graph(subgraph)&lt;/h4&gt;
&lt;p&gt;使用&lt;code&gt;subgraph()&lt;/code&gt;函数.一共两个参数:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;graph&lt;/code&gt;:&lt;code&gt;igraph&lt;/code&gt;类对象.&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;V&lt;/code&gt;:要提取的subgraph的所有的vertex的名字(name).&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;获取vertex属性&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.2.5&lt;/span&gt; 获取vertex属性&lt;/h4&gt;
&lt;p&gt;使用&lt;code&gt;vertex_attr()&lt;/code&gt;函数.一共4个参数.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;graph&lt;/code&gt;:&lt;code&gt;igraph&lt;/code&gt;类对象.&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;name&lt;/code&gt;:需要获取的属性的名字,默认提取所有属性.&lt;/li&gt;
&lt;li&gt;index:需要获取那些vertex的属性,默认提取所有的vertex.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>20191014一点感想</title>
      <link>/post/20191014/</link>
      <pubDate>Mon, 14 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/20191014/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#远程连接&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.1&lt;/span&gt; 远程连接&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#安装虚拟机&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.2&lt;/span&gt; 安装虚拟机&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#网络连接问题&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.3&lt;/span&gt; 网络连接问题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;实验室新买了一台workstation.因为有软件需要在windows上运行,因此本来需要安装windows server版本.但是后来问了一下学校的IT部门,安装一台服务器非常麻烦,需要学校IT部门来关理,每月收费350刀.如果是自己关理,也可以,但是如果有数据外漏的话,责任需要自己负责.因此最后考虑安装普通的window10版本,然后可以远程连接.我自己再看看能够在上面的虚拟机上安装linux系统,实现多人同时远程练级额.&lt;/p&gt;
&lt;div id=&#34;远程连接&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1&lt;/span&gt; 远程连接&lt;/h3&gt;
&lt;p&gt;连接上Stanford的VPN之后,远程连接并不起作用.当时推测的可能就是这台电脑属于某个group,需要把我们的SunetID加入刀该group内,然后才能进去.但是来的IT人员搞了好几天也没搞定,我也是略微无语.随后不在管他,我在IT online提交了ticket,过了大概一个星期,终于查到了解决办法,就是说需要加入某个group.将邮件记录如下:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Xiaotao,
Your device is connected to Genetics VLAN 3020, CIDR 171.65.76.0/23. Users who need to have VPN/RDP access to the device need to be added to workgroup: net-access-som-vpn-genetics.&lt;br /&gt;
Please reach out to one of the admins below (to request access):&lt;br /&gt;
Chris Probert&lt;br /&gt;
Jin Wook Lee&lt;br /&gt;
Anna Scherbina&lt;br /&gt;
Please let me know if you have any questions.&lt;br /&gt;
Best regards,&lt;br /&gt;
Brian, Med T&amp;amp;DS&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;但是非常奇怪的是,这几个人我们都不认识,google一下,竟然是Biomedicine Informatics实验室的.然后赶紧给他们发了邮件,没想到很快就给了回复,说已经把我们的SunetID加入到该group中,大约20分钟之后可以连接.随后果然可以.&lt;/p&gt;
&lt;p&gt;使用Windows上的&lt;code&gt;Remote Desktop Connection&lt;/code&gt;软件进行连接时,注意&lt;code&gt;User name&lt;/code&gt;时需要在用户名前面加上&lt;code&gt;win\&lt;/code&gt;,也就是写&lt;code&gt;win\shenxt&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;安装虚拟机&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.2&lt;/span&gt; 安装虚拟机&lt;/h3&gt;
&lt;p&gt;原本想要安装VMware软件的,后来发现这个软件跟win10自带的&lt;code&gt;Hyper-V&lt;/code&gt;软件是冲突的.后来就放弃使用VMware,直接使用Hyper-V软件.&lt;/p&gt;
&lt;p&gt;最开始下载的&lt;code&gt;CentOS-8&lt;/code&gt;系统,但是安装的时候,遇到了问题,安装成功之后,重启之后没有进入登录界面,反而又重新到了安装界面!查了很多,都没有找到解决办法.&lt;/p&gt;
&lt;p&gt;后来,觉得有可能是系统版本的问题,因此在CentOS官网上找到了CentOS-7版本.重新走了一遍安装程序,终于成功了.&lt;/p&gt;
&lt;p&gt;安装之后没有图形界面,只有命令行形式.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;网络连接问题&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.3&lt;/span&gt; 网络连接问题&lt;/h3&gt;
&lt;p&gt;直接安装之后,并没有网络连接.需要进行设置.查了一些资料,首先需要在Hyper-V软件上创建虚拟交换机,但是我在创建的时候,总是报错,无法创建,然后又开始google.结果找到了这样一个网页:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://support.microsoft.com/zh-cn/help/3101106/you-cannot-create-a-hyper-v-virtual-switch-on-64-bit-versions-of-windo&#34; class=&#34;uri&#34;&gt;https://support.microsoft.com/zh-cn/help/3101106/you-cannot-create-a-hyper-v-virtual-switch-on-64-bit-versions-of-windo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;然后就下载软件,运行,重启,然后就没有网络连接了!而且是所有的网络都没有了,查了一下感觉应该是驱动的问题,然后在官网上下载了Intel的驱动,走的时候还没有安装好,看看明天结果如何.&lt;/p&gt;
&lt;p&gt;并不是driver的问题,第二天IT过来瞅了一眼,又重新搞了一会driver,还是不行,最后拉走了,说需要慢慢检查.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>blogdown创建博客总结</title>
      <link>/post/blogdown/</link>
      <pubDate>Sun, 13 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/blogdown/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#如何修改网站icon&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.1&lt;/span&gt; 如何修改网站icon?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#如何将个人网站作为图床使用&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.2&lt;/span&gt; 如何将个人网站作为图床使用?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#如何将某个部分如博客blog不显示在主页home上而是点击之后打开一个单独的page&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.3&lt;/span&gt; 如何将某个部分(如博客blog)不显示在主页(home)上,而是点击之后,打开一个单独的page?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#如何添加新的页面&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.4&lt;/span&gt; 如何添加新的页面?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#如何在post中添加本地图片&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.5&lt;/span&gt; 如何在post中添加本地图片?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#如何在rmarkdown中添加table-of-contents&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.6&lt;/span&gt; 如何在Rmarkdown中添加table of contents?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#netlify自动部署deployfailed的问题&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.7&lt;/span&gt; netlify自动部署(deploy)failed的问题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;如何修改网站icon&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1&lt;/span&gt; 如何修改网站icon?&lt;/h3&gt;
&lt;p&gt;将自己的logo图片截取为192x192像素(长款分别为0.21cm).然后将其命名为’icon-192.png’放置于&lt;code&gt;static/img&lt;/code&gt;文件夹中即可.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;如何将个人网站作为图床使用&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.2&lt;/span&gt; 如何将个人网站作为图床使用?&lt;/h3&gt;
&lt;p&gt;将图片放置于&lt;code&gt;static/files&lt;/code&gt;文件夹中即可.使用如下路径访问:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shenxt.info/files/figure.name&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如: &lt;a href=&#34;https://www.shenxt.info/files/wechat_QR.jpg&#34; class=&#34;uri&#34;&gt;https://www.shenxt.info/files/wechat_QR.jpg&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;如何将某个部分如博客blog不显示在主页home上而是点击之后打开一个单独的page&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.3&lt;/span&gt; 如何将某个部分(如博客blog)不显示在主页(home)上,而是点击之后,打开一个单独的page?&lt;/h3&gt;
&lt;p&gt;以blog为例(posts).&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;首先需要将 &lt;code&gt;content/home&lt;/code&gt;中的&lt;code&gt;posts.md&lt;/code&gt;中的active设置为false.这样,这一部分就不会在home主页显示.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;2019-10-13-blogdown/change-active.png&#34; /&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;然后将&lt;code&gt;content/home&lt;/code&gt;中的&lt;code&gt;posts.md&lt;/code&gt;拷贝到&lt;code&gt;content/post&lt;/code&gt;中,并改名为&lt;code&gt;index.md&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;打开&lt;code&gt;config/_default/menus.toml&lt;/code&gt;,然后将Blog的url修改为文件夹的名称.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;2019-10-13-blogdown/change-url.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;如何添加新的页面&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.4&lt;/span&gt; 如何添加新的页面?&lt;/h3&gt;
&lt;p&gt;以在我的网页添加新的中文入口为例.&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;conternt&lt;/code&gt;文件夹下面创建新的&lt;code&gt;chinese&lt;/code&gt;文件夹.在该文件夹下面创建&lt;code&gt;_index.md&lt;/code&gt;文件.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;如何在post中添加本地图片&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.5&lt;/span&gt; 如何在post中添加本地图片?&lt;/h3&gt;
&lt;p&gt;首先在&lt;code&gt;content/post/&lt;/code&gt;建立和post名z字去除掉数字之后的的文件夹(比如post名字为&lt;code&gt;2019-10-25-test&lt;/code&gt;,则文件夹命名为&lt;code&gt;test&lt;/code&gt;),然后再在该文件夹下建立和post同名的文件夹(&lt;code&gt;2019-10-25-test&lt;/code&gt;),然后将图片(如&lt;code&gt;test.png&lt;/code&gt;)放入该文件夹下.在post中,使用:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;![](test/2019-10-25-test/test.png)&lt;/code&gt;语句插入图片.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;如何在rmarkdown中添加table-of-contents&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.6&lt;/span&gt; 如何在Rmarkdown中添加table of contents?&lt;/h3&gt;
&lt;p&gt;在每篇&lt;code&gt;Rmarkdown&lt;/code&gt;的&lt;code&gt;YAML&lt;/code&gt;添加如下内容:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;output:
  blogdown::html_page:
    toc: true
    number_sections: true&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;netlify自动部署deployfailed的问题&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.7&lt;/span&gt; netlify自动部署(deploy)failed的问题&lt;/h3&gt;
&lt;p&gt;发现自动部署总是失败.查了一下,应该是本地的&lt;code&gt;Hugo&lt;/code&gt;和netlify上的版本不一致,解决方法如下:&lt;/p&gt;
&lt;p&gt;首先,在R console输入下列语句,查看本地&lt;code&gt;Hugo&lt;/code&gt;版本:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;blogdown::hugo_version()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;#39;0.58.3&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后修改netlify上的&lt;code&gt;Hugo&lt;/code&gt;的版本.&lt;/p&gt;
&lt;div id=&#34;打开netlify网站&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.7.1&lt;/span&gt; 打开netlify网站:&lt;/h4&gt;
&lt;p&gt;点击下面网站:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://app.netlify.com/teams/jaspershen/sites&#34; class=&#34;uri&#34;&gt;https://app.netlify.com/teams/jaspershen/sites&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;然后点击托管的自己的网站.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2019-10-13-blogdown/netlify.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;点击site-settings&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.7.2&lt;/span&gt; 点击&lt;code&gt;Site settings&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;2019-10-13-blogdown/site_setting.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;点击build-deploy&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.7.3&lt;/span&gt; 点击&lt;code&gt;Build &amp;amp; deploy&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;2019-10-13-blogdown/build_deploy.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;修改hugo-version&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.7.4&lt;/span&gt; 修改&lt;code&gt;Hugo version&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;然后点击&lt;code&gt;Environment&lt;/code&gt;,将HUGO_VERSION版本修改为和本地一致的版本.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2019-10-13-blogdown/hugo_version.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R可视化之桑吉图</title>
      <link>/post/r-sankey/</link>
      <pubDate>Sat, 12 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/r-sankey/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/d3/d3.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/sankey/sankey.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/sankeyNetwork-binding/sankeyNetwork.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#使用networkd3包构建桑吉图&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1&lt;/span&gt; 使用&lt;code&gt;networkD3&lt;/code&gt;包构建桑吉图&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#基础桑吉图绘制&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1.1&lt;/span&gt; 基础桑吉图绘制&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#另外一个例子&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1.2&lt;/span&gt; 另外一个例子&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#使用ggalluvial包绘制桑吉图&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1.3&lt;/span&gt; 使用&lt;code&gt;ggalluvial&lt;/code&gt;包绘制桑吉图&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;本文翻译自“The graph gallery”网站,原帖文地址链接:&lt;a href=&#34;https://www.r-graph-gallery.com/sankey-diagram.html&#34; class=&#34;uri&#34;&gt;https://www.r-graph-gallery.com/sankey-diagram.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;桑吉图(sankey diagram)使用来研究同一个变量在其不同分类中的比例或者说是流动的.实体(或者说是节点,node)一般使用长方形或者文字来表示.箭头和弧线用来表示在他们之间的流动.&lt;/p&gt;
&lt;div id=&#34;使用networkd3包构建桑吉图&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1&lt;/span&gt; 使用&lt;code&gt;networkD3&lt;/code&gt;包构建桑吉图&lt;/h2&gt;
&lt;div id=&#34;基础桑吉图绘制&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.1&lt;/span&gt; 基础桑吉图绘制&lt;/h3&gt;
&lt;p&gt;可以使用两种格式的数据进行桑吉图绘制:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;connection data frame(一共三列),可以理解为长数据.&lt;/li&gt;
&lt;li&gt;关联矩阵(incidence matrix),可以理解为宽数据.&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;使用connection-data-frame&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.1.1&lt;/span&gt; 使用connection data frame&lt;/h4&gt;
&lt;p&gt;connection data frame至少需要两列,分别为source和target.第三列可以用来说明该connection的数值.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(networkD3)
library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tidyverse&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Attaching packages ---------------------------------------------------------------- tidyverse 1.2.1 --&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## v ggplot2 3.2.1     v purrr   0.3.2
## v tibble  2.1.3     v dplyr   0.8.3
## v tidyr   1.0.0     v stringr 1.4.0
## v readr   1.3.1     v forcats 0.4.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggplot2&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tibble&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tidyr&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;dplyr&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Conflicts ------------------------------------------------------------------- tidyverse_conflicts() --
## x dplyr::filter() masks stats::filter()
## x dplyr::lag()    masks stats::lag()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;links &amp;lt;- data.frame(
  source = c(&amp;quot;group_A&amp;quot;,&amp;quot;group_A&amp;quot;, &amp;quot;group_B&amp;quot;, &amp;quot;group_C&amp;quot;, &amp;quot;group_C&amp;quot;, &amp;quot;group_E&amp;quot;), 
  target = c(&amp;quot;group_C&amp;quot;,&amp;quot;group_D&amp;quot;, &amp;quot;group_E&amp;quot;, &amp;quot;group_F&amp;quot;, &amp;quot;group_G&amp;quot;, &amp;quot;group_H&amp;quot;), 
  value = c(2,3, 2, 3, 1, 3)
  )
head(links)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    source  target value
## 1 group_A group_C     2
## 2 group_A group_D     3
## 3 group_B group_E     2
## 4 group_C group_F     3
## 5 group_C group_G     1
## 6 group_E group_H     3&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##构建connection data frame中所有nodes的data frame
nodes &amp;lt;- data.frame(
  name = c(as.character(links$source), 
  as.character(links$target)) %&amp;gt;% unique()
)

#然后我们需要将每个node的名字代替为其在node data frame中的位置index,注意是要从哦开始计算.
links$IDsource &amp;lt;- match(links$source, nodes$name) - 1 
links$IDtarget &amp;lt;- match(links$target, nodes$name) - 1

#开始创建桑吉图
p &amp;lt;- networkD3::sankeyNetwork(
  Links = links,
  Nodes = nodes,
  Source = &amp;quot;IDsource&amp;quot;,
  Target = &amp;quot;IDtarget&amp;quot;,
  Value = &amp;quot;value&amp;quot;,
  NodeID = &amp;quot;name&amp;quot;,
  sinksRight = FALSE
)
p&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;sankeyNetwork html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;links&#34;:{&#34;source&#34;:[0,0,1,2,2,3],&#34;target&#34;:[2,4,3,5,6,7],&#34;value&#34;:[2,3,2,3,1,3]},&#34;nodes&#34;:{&#34;name&#34;:[&#34;group_A&#34;,&#34;group_B&#34;,&#34;group_C&#34;,&#34;group_E&#34;,&#34;group_D&#34;,&#34;group_F&#34;,&#34;group_G&#34;,&#34;group_H&#34;],&#34;group&#34;:[&#34;group_A&#34;,&#34;group_B&#34;,&#34;group_C&#34;,&#34;group_E&#34;,&#34;group_D&#34;,&#34;group_F&#34;,&#34;group_G&#34;,&#34;group_H&#34;]},&#34;options&#34;:{&#34;NodeID&#34;:&#34;name&#34;,&#34;NodeGroup&#34;:&#34;name&#34;,&#34;LinkGroup&#34;:null,&#34;colourScale&#34;:&#34;d3.scaleOrdinal(d3.schemeCategory20);&#34;,&#34;fontSize&#34;:7,&#34;fontFamily&#34;:null,&#34;nodeWidth&#34;:15,&#34;nodePadding&#34;:10,&#34;units&#34;:&#34;&#34;,&#34;margin&#34;:{&#34;top&#34;:null,&#34;right&#34;:null,&#34;bottom&#34;:null,&#34;left&#34;:null},&#34;iterations&#34;:32,&#34;sinksRight&#34;:false}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
图片时交互性的.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;使用关联矩阵&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.1.2&lt;/span&gt; 使用关联矩阵&lt;/h4&gt;
&lt;p&gt;关联矩阵时正方形或者长方形的.行名和列名分别为node的名称.每一个cell代表着两个node之间flow的数值.但是因为在&lt;code&gt;network3D&lt;/code&gt;中,只能使用长数据,因此其实就是将宽数据转换为长数据.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;另外一个例子&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.2&lt;/span&gt; 另外一个例子&lt;/h3&gt;
&lt;p&gt;我们使用桑吉图来展示科学家的移民或者说是流动情况.左边代表科学家的移出国,右边代表科学家的移进国.数据来自scientific publication(&lt;a href=&#34;https://onlinelibrary.wiley.com/doi/abs/10.1111/imre.12327&#34; class=&#34;uri&#34;&gt;https://onlinelibrary.wiley.com/doi/abs/10.1111/imre.12327&lt;/a&gt;).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#加载包
library(tidyverse)
library(networkD3)

# 读取数据
data &amp;lt;- 
  read.table(&amp;quot;https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/13_AdjacencyDirectedWeighted.csv&amp;quot;, header = TRUE)

# 讲数据转换为长数据
data_long &amp;lt;- data %&amp;gt;%
  rownames_to_column(var = &amp;quot;name&amp;quot;) %&amp;gt;%
  pivot_longer(cols = -name, names_to = &amp;quot;key&amp;quot;, values_to = &amp;quot;value&amp;quot;) %&amp;gt;% 
  filter(value &amp;gt; 0) %&amp;gt;% 
  as.data.frame()

colnames(data_long) &amp;lt;- 
  c(&amp;quot;source&amp;quot;, &amp;quot;target&amp;quot;, &amp;quot;value&amp;quot;)

data_long$target &amp;lt;- 
  paste(data_long$target, &amp;quot; &amp;quot;, sep = &amp;quot;&amp;quot;)

# 创建node data frame
nodes &amp;lt;- 
  data.frame(name = c(as.character(data_long$source),  
                      as.character(data_long$target)) %&amp;gt;% unique()
             ) %&amp;gt;% 
  arrange(name) %&amp;gt;% 
  as.data.frame()
 
data_long$IDsource = match(data_long$source, nodes$name) - 1 
data_long$IDtarget = match(data_long$target, nodes$name) - 1

# prepare colour scale
ColourScal &amp;lt;- &amp;#39;d3.scaleOrdinal() .range([&amp;quot;#FDE725FF&amp;quot;,&amp;quot;#B4DE2CFF&amp;quot;,&amp;quot;#6DCD59FF&amp;quot;,&amp;quot;#35B779FF&amp;quot;,&amp;quot;#1F9E89FF&amp;quot;,
&amp;quot;#26828EFF&amp;quot;,&amp;quot;#31688EFF&amp;quot;,&amp;quot;#3E4A89FF&amp;quot;,&amp;quot;#482878FF&amp;quot;,&amp;quot;#440154FF&amp;quot;])&amp;#39;

# Make the Network
sankeyNetwork(
  Links = data_long,
  Nodes = nodes,
  Source = &amp;quot;IDsource&amp;quot;,
  Target = &amp;quot;IDtarget&amp;quot;,
  Value = &amp;quot;value&amp;quot;,
  NodeID = &amp;quot;name&amp;quot;,
  sinksRight = FALSE,
  colourScale = ColourScal,
  nodeWidth = 40,
  fontSize = 13,
  nodePadding = 20
)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-2&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;sankeyNetwork html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-2&#34;&gt;{&#34;x&#34;:{&#34;links&#34;:{&#34;source&#34;:[0,0,0,0,0,2,2,2,2,2,2,4,6,6,6,8,8,10,10,12,12,12,12,12,12,13,13,13,13,13,16,16,18,18,18],&#34;target&#34;:[1,5,9,11,19,3,5,9,11,15,19,5,5,7,9,5,7,5,11,3,5,9,11,14,19,3,5,9,11,15,5,17,5,9,19],&#34;value&#34;:[3.142471,2.107883,0.540887,0.155988,0.673004,1.630997,0.601265,0.97306,0.333608,0.380388,0.869311,2.401476,1.762587,0.879198,3.627847,1.215929,0.276908,0.17037,0.190706,0.525881,1.390272,1.508008,0.34742,1.307907,4.902081,0.145264,0.468762,1.057904,0.278746,0.781316,0.60923,1.870501,0.449623,0.169274,0.927243]},&#34;nodes&#34;:{&#34;name&#34;:[&#34;Africa&#34;,&#34;Africa &#34;,&#34;East Asia&#34;,&#34;East.Asia &#34;,&#34;Europe&#34;,&#34;Europe &#34;,&#34;Latin America&#34;,&#34;Latin.America &#34;,&#34;North America&#34;,&#34;North.America &#34;,&#34;Oceania&#34;,&#34;Oceania &#34;,&#34;South Asia&#34;,&#34;South East Asia&#34;,&#34;South.Asia &#34;,&#34;South.East.Asia &#34;,&#34;Soviet Union&#34;,&#34;Soviet.Union &#34;,&#34;West Asia&#34;,&#34;West.Asia &#34;],&#34;group&#34;:[&#34;Africa&#34;,&#34;Africa &#34;,&#34;East Asia&#34;,&#34;East.Asia &#34;,&#34;Europe&#34;,&#34;Europe &#34;,&#34;Latin America&#34;,&#34;Latin.America &#34;,&#34;North America&#34;,&#34;North.America &#34;,&#34;Oceania&#34;,&#34;Oceania &#34;,&#34;South Asia&#34;,&#34;South East Asia&#34;,&#34;South.Asia &#34;,&#34;South.East.Asia &#34;,&#34;Soviet Union&#34;,&#34;Soviet.Union &#34;,&#34;West Asia&#34;,&#34;West.Asia &#34;]},&#34;options&#34;:{&#34;NodeID&#34;:&#34;name&#34;,&#34;NodeGroup&#34;:&#34;name&#34;,&#34;LinkGroup&#34;:null,&#34;colourScale&#34;:&#34;d3.scaleOrdinal() .range([\&#34;#FDE725FF\&#34;,\&#34;#B4DE2CFF\&#34;,\&#34;#6DCD59FF\&#34;,\&#34;#35B779FF\&#34;,\&#34;#1F9E89FF\&#34;,\n\&#34;#26828EFF\&#34;,\&#34;#31688EFF\&#34;,\&#34;#3E4A89FF\&#34;,\&#34;#482878FF\&#34;,\&#34;#440154FF\&#34;])&#34;,&#34;fontSize&#34;:13,&#34;fontFamily&#34;:null,&#34;nodeWidth&#34;:40,&#34;nodePadding&#34;:20,&#34;units&#34;:&#34;&#34;,&#34;margin&#34;:{&#34;top&#34;:null,&#34;right&#34;:null,&#34;bottom&#34;:null,&#34;left&#34;:null},&#34;iterations&#34;:32,&#34;sinksRight&#34;:false}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;/div&gt;
&lt;div id=&#34;使用ggalluvial包绘制桑吉图&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.3&lt;/span&gt; 使用&lt;code&gt;ggalluvial&lt;/code&gt;包绘制桑吉图&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ggalluvial&lt;/code&gt;包是&lt;code&gt;ggplot2&lt;/code&gt;的一个扩展包.可以用来绘制桑吉图.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;##加载包
library(ggalluvial)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggalluvial&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## 使用示例数据
data(vaccinations)
head(vaccinations)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   freq           a subject    survey response
## 1   48 0.050367261       1 ms153_NSA   Always
## 2    9 0.009443861       2 ms153_NSA   Always
## 3   66 0.069254984       3 ms153_NSA   Always
## 4    1 0.001049318       4 ms153_NSA   Always
## 5   11 0.011542497       5 ms153_NSA   Always
## 6    1 0.001049318       6 ms153_NSA   Always&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;levels(vaccinations$response) &amp;lt;- rev(levels(vaccinations$response))
ggplot(vaccinations,
       aes(x = survey, 
           y = freq,
           stratum = response, 
           alluvium = subject,
           fill = response, 
           label = response)) +
  scale_x_discrete(expand = c(.1, .1)) +
  ggalluvial::geom_flow() +
  labs(x = &amp;quot;&amp;quot;, y = &amp;quot;&amp;quot;) +
  ggalluvial::geom_stratum(alpha = .5) +
  geom_text(stat = &amp;quot;stratum&amp;quot;, size = 3) +
  theme_bw() +
  theme(legend.position = &amp;quot;none&amp;quot;, 
        plot.background = element_blank(), 
        panel.border = element_blank(), 
        panel.grid = element_blank(), 
        axis.ticks = element_blank(), 
        axis.text.y = element_blank()) +
  ggtitle(&amp;quot;vaccination survey responses at three points in time&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-12-r-sankey_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;我们在对该包做一个详细的讲解.&lt;/p&gt;
&lt;div id=&#34;冲积图alluvial-diagrams的结构&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.3.1&lt;/span&gt; 冲积图(Alluvial diagrams)的结构&lt;/h4&gt;
&lt;p&gt;使用&lt;code&gt;ggalluvial&lt;/code&gt;包绘制的图称之为冲积图(Alluvial diagrams).我们以上面的例子图为例,来进行解释.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;X轴代表着数据流动的分类.比如上图中,一共有三类,也就是ms153_NSA,ms432_NSA和ms460_NSA.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;而X轴的每一类又会分为不同的分组,称之为地层(strata).在我们这个例子中,每一类都分成了四组,Missing,Never,Sometimes和Always.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;然后我们再看每一列,每一列的每一个分组都会被图形分割,这称之为冲积(alluvia).在这个例子中,每个冲积的宽度(也就是在Y轴上range)代表着分类的该组分到下一个分类某个分组的数据的多少.当然,冲积的颜色用来代表不同的分类.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;两个相邻的分类之间的连接的冲积称之为flow.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们对这个图的结构进行详细的理解之后,我们在来看如何使用&lt;code&gt;galluvial&lt;/code&gt;包绘制冲积图.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;所需要的数据类型&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.3.2&lt;/span&gt; 所需要的数据类型&lt;/h4&gt;
&lt;p&gt;跟&lt;code&gt;network3D&lt;/code&gt;包一样,&lt;code&gt;ggalluvial&lt;/code&gt;包也可以使用宽数据和长数据.我们使用&lt;code&gt;UCBAdmissions&lt;/code&gt;数据为例进行说明.&lt;/p&gt;
&lt;div id=&#34;宽数据&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.3.2.1&lt;/span&gt; 宽数据&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;UCBAdmissions&lt;/code&gt;数据一共有4列.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Modern Statistics for Modern Biology:第一章</title>
      <link>/post/2019-10-10-modern-statistics-for-modern-biology/</link>
      <pubDate>Thu, 10 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-10-10-modern-statistics-for-modern-biology/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#离散变量discrete-data的生成模型&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.1&lt;/span&gt; 离散变量(discrete data)的生成模型&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;离散变量discrete-data的生成模型&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1&lt;/span&gt; 离散变量(discrete data)的生成模型&lt;/h3&gt;
&lt;p&gt;在分子生物学中,在很多情况下都会产生离散变量.&lt;/p&gt;
&lt;div id=&#34;本章目标&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1.1&lt;/span&gt; 1.1 本章目标&lt;/h4&gt;
&lt;p&gt;在本章中,我们将会:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;学会对于一个给定模型如何获取其所有可能结果的概率(probabilities),并且将理论的频率(frequencies)和实际数据观测到的进行比较.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;探索一个完整的例子,如何使用泊松分布来分析表位(epitope)检测.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如何使用几种常见的非常有用的离散变量生成模型:泊松,二项式和多项式.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;学会使用R函数来计算概率和计数罕见实例.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;从指定的分布生成随机数.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;一个真实例子&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1.2&lt;/span&gt; 1.2 一个真实例子&lt;/h4&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>组学数据分析常见方法总结</title>
      <link>/post/2019-10-10-/</link>
      <pubDate>Thu, 10 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-10-10-/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#correlation-analysis&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.1&lt;/span&gt; Correlation analysis&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;correlation-analysis&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1&lt;/span&gt; Correlation analysis&lt;/h3&gt;
&lt;p&gt;将组学变量(gene,protein,metabolite,clinical factor)进行相关性分析,得到他们之间的相关性,注意需要选择合适的相关性计算方法,并进行多重比较矫正(FDR,BH等).&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>purrr教程1:Overview</title>
      <link>/post/2019-10-08-purrr-1-overview/</link>
      <pubDate>Tue, 08 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-10-08-purrr-1-overview/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#安装&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.1&lt;/span&gt; 安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#使用&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.2&lt;/span&gt; 使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#map-family&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.3&lt;/span&gt; Map family&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code&gt;purrr&lt;/code&gt;是一个提供函数编程的工具箱.&lt;/p&gt;
&lt;div id=&#34;安装&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1&lt;/span&gt; 安装&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;purrr&lt;/code&gt;包含在&lt;code&gt;tidyverse&lt;/code&gt;种,因此如果你已经安装了他,不需要再安装.当然也可以单独安装&lt;code&gt;purrr&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;### 安装tidyverse
install.packages(&amp;quot;tidyverse&amp;quot;)
### 单独安装purrr
install.packages(&amp;quot;purrr&amp;quot;)

### 安装开发板
devtools::install_github(&amp;quot;tidyverse/purrr&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;使用&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.2&lt;/span&gt; 使用&lt;/h3&gt;
&lt;p&gt;使用一个简单的例子来展示&lt;code&gt;purrr&lt;/code&gt;的作用.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(purrr)

mtcars %&amp;gt;%
  split(x = ., f = .$cyl) %&amp;gt;% # 按照cyl将mtcars数据分割为数个list
  map(.x = ., .f = ~ lm(mpg ~ wt, data = .)) %&amp;gt;%#对每一个list数据,简历mpg和wt的线性模型
  map(.x = ., .f = summary) %&amp;gt;%##对每一个线性模型进行summary
  map_dbl(.x = , .f = &amp;quot;r.squared&amp;quot;)##提取出来R2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##         4         6         8 
## 0.5086326 0.4645102 0.4229655&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这个例子显示了和R中相同功能的base函数的优点.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;map-family&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.3&lt;/span&gt; Map family&lt;/h3&gt;
&lt;p&gt;map函数对输入的vector的每一个元素进行&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>tidyverse select使用总结</title>
      <link>/post/tidyverse-select/</link>
      <pubDate>Tue, 08 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/tidyverse-select/</guid>
      <description>


&lt;p&gt;test&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>文献解读:Longitudinal multi-omics of host– microbe dynamics in prediabetes</title>
      <link>/post/longitudinal-multi-omics-of-host-microbe-dynamics-in-prediabetes/</link>
      <pubDate>Tue, 08 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/longitudinal-multi-omics-of-host-microbe-dynamics-in-prediabetes/</guid>
      <description>



</description>
    </item>
    
    <item>
      <title>ggplot2拼图工具:patchwork</title>
      <link>/post/ggplot2-patchwork/</link>
      <pubDate>Mon, 09 Sep 2019 00:00:00 +0000</pubDate>
      <guid>/post/ggplot2-patchwork/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#安装&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.1&lt;/span&gt; 安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#使用&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.2&lt;/span&gt; 使用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;推荐一个用来拼图的包:&lt;code&gt;patchwork&lt;/code&gt;.作者是&lt;a href=&#34;https://github.com/thomasp85&#34;&gt;Thomas Lin Pedersen&lt;/a&gt;.使用方法非常简洁,具体使用方法可以查看其帮助文档.他的思想跟&lt;code&gt;tidyverse&lt;/code&gt;非常像,直接使用&lt;code&gt;+&lt;/code&gt;,&lt;code&gt;-&lt;/code&gt;等符号来进行图的拼接.举个例子说明.&lt;/p&gt;
&lt;div id=&#34;安装&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1&lt;/span&gt; 安装&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;patchwork&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;devtools::install_github(&amp;quot;thomasp85/patchwork&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Skipping install of &amp;#39;patchwork&amp;#39; from a github remote, the SHA1 (36b49187) has not changed since last install.
##   Use `force = TRUE` to force installation&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;使用&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.2&lt;/span&gt; 使用&lt;/h3&gt;
&lt;p&gt;拼图有两种不同的含义:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;像一幅图中不同的panel一样,他们分别是独立的;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;反映同样的数据信息,将几个图拼成一个panel.比如对于一个散点图,在其右侧和左侧分别添加其对应的变量的密度分布图等.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(patchwork)
library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tidyverse&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Attaching packages ---------------------------------------------------------------- tidyverse 1.2.1 --&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## v ggplot2 3.2.1     v purrr   0.3.2
## v tibble  2.1.3     v dplyr   0.8.3
## v tidyr   1.0.0     v stringr 1.4.0
## v readr   1.3.1     v forcats 0.4.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggplot2&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tibble&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tidyr&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;dplyr&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Conflicts ------------------------------------------------------------------- tidyverse_conflicts() --
## x dplyr::filter() masks stats::filter()
## x dplyr::lag()    masks stats::lag()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot1 &amp;lt;- 
  ggplot(mtcars, aes(x = mpg, y = disp)) +
  geom_point() +
  theme_bw() +
  scale_x_continuous(limits = c(10, 35)) +
  scale_y_continuous(limits = c(50, 500))
  
plot2 &amp;lt;- 
  ggplot(mtcars, aes(x = mpg)) +
  geom_histogram() +
  theme_bw() +
  scale_x_continuous(limits = c(10, 35), 
                     name = NULL, labels = NULL, breaks = NULL) +
  scale_y_continuous(expand = expand_scale(mult = c(0, .05))) +
  theme(panel.border = element_blank(),
        axis.line = element_line(colour = &amp;quot;black&amp;quot;),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank())

plot3 &amp;lt;- 
  ggplot(mtcars, aes(x = disp)) +
  geom_histogram() +
  theme_bw() +
  coord_flip() +
    scale_x_continuous(limits = c(150, 500), 
                     name = NULL, labels = NULL, breaks = NULL) +
  scale_y_continuous(expand = expand_scale(mult = c(0, .05))) +
  theme(panel.border = element_blank(),
        axis.line = element_line(colour = &amp;quot;black&amp;quot;),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank())&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我们画出了汽车&lt;code&gt;mpg&lt;/code&gt;和&lt;code&gt;disp&lt;/code&gt;的关系,然后想在这个散点图上方和右方分别画上&lt;code&gt;disp&lt;/code&gt;和&lt;code&gt;mpg&lt;/code&gt;的分布图.这时候需要注意的是,需要确定&lt;code&gt;xlim&lt;/code&gt;和&lt;code&gt;ylim&lt;/code&gt;的发明,从而使其坐标轴能够精确对上.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot &amp;lt;- 
{plot2 + plot_spacer() + plot_layout(ncol = 2, widths = c(3, 1))} -
  {plot1 + plot3 + plot_layout(ncol = 2, widths = c(3, 1))} +
  plot_layout(ncol = 1, heights = c(1,3))
plot&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Removed 2 rows containing missing values (geom_bar).&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Removed 12 rows containing non-finite values (stat_bin).

## Warning: Removed 2 rows containing missing values (geom_bar).&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-09-09-ggplot2-patchwork_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;plot_spacer()&lt;/code&gt;函数用来生成一个空白图片.&lt;code&gt;plot_layout()&lt;/code&gt;函数用来设置拼接图片的一些具体参数,如列数,行数,宽度或者高度比等.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;{}&lt;/code&gt;括起来的几个plot组成一个完整的新的plot.&lt;/p&gt;
&lt;p&gt;这里面需要注意的是&lt;code&gt;-&lt;/code&gt;.它是指该符号左右两侧当成两个新的图层进行拼接.&lt;/p&gt;
&lt;p&gt;具体使用方法可以参考作者github(&lt;a href=&#34;https://github.com/thomasp85/patchwork&#34; class=&#34;uri&#34;&gt;https://github.com/thomasp85/patchwork&lt;/a&gt;).&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;http://www.youtube.com/embed/9bZkp7q19f0?rel=0&#34; frameborder=&#34;0&#34; allowfullscreen&gt;
&lt;/iframe&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>如何修改ggplot2垂直square legend之间的距离</title>
      <link>/post/ggplot2-square-legend/</link>
      <pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate>
      <guid>/post/ggplot2-square-legend/</guid>
      <description>


&lt;p&gt;今天看到有人在讨论如何修改&lt;code&gt;ggplot2&lt;/code&gt;中垂直square legend之间的距离.原来想着&lt;code&gt;ggplot2&lt;/code&gt;中的&lt;code&gt;theme&lt;/code&gt;函数的&lt;code&gt;legend.key.height&lt;/code&gt;参数不就是来控制这个距离的吗?后来试了一下,还真的不行.&lt;/p&gt;
&lt;p&gt;先画出图来:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggplot2&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars, aes(x = factor(cyl))) +
  geom_bar(aes(fill = factor(cyl)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-09-04-ggplot2-square-legend_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;legend.key.height&lt;/code&gt;参数来设置:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars, aes(x = factor(cyl))) +
  geom_bar(aes(fill = factor(cyl))) +
  theme(legend.key.height = unit(4, &amp;quot;line&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-09-04-ggplot2-square-legend_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以看到每个key变高了,但是距离并没有变化.我们试试其他类型的legend,比如point.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars, aes(x = factor(cyl))) +
  geom_point(aes(colour = factor(cyl)), stat = &amp;quot;count&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-09-04-ggplot2-square-legend_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars, aes(x = factor(cyl))) +
  geom_point(aes(colour = factor(cyl)), stat = &amp;quot;count&amp;quot;) +
  theme(legend.key.height = unit(10, &amp;quot;mm&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-09-04-ggplot2-square-legend_files/figure-html/unnamed-chunk-3-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;从这幅图看的就非常的清楚了,每个legend的图像元素是由&lt;code&gt;key&lt;/code&gt;(背景)和指示元素组成的.&lt;code&gt;legend.key.height&lt;/code&gt;参数可以改变&lt;code&gt;key&lt;/code&gt;的高度,而指示元素则处在key的中间,对于square legend来说,他们其实是和&lt;code&gt;key&lt;/code&gt;背景重合的,所以&lt;code&gt;legend.key.height&lt;/code&gt;没有办法改变他们之间的距离.&lt;/p&gt;
&lt;p&gt;那如果确实有需要更改这个距离,怎么做呢?想到一个办法只能更改square指示元素的line的宽度(line颜色为白色),从而间接修改他们之间的距离.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars, aes(x = factor(cyl))) +
  geom_bar(aes(fill = factor(cyl)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-09-04-ggplot2-square-legend_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars, aes(x = factor(cyl))) +
  geom_bar(aes(fill = factor(cyl))) +
  theme(legend.key.size = unit(2, &amp;quot;line&amp;quot;)) +
  guides(fill = guide_legend(override.aes = list(size = 3, colour = &amp;quot;white&amp;quot;)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-09-04-ggplot2-square-legend_files/figure-html/unnamed-chunk-4-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;欢迎大家由其他办法的留言讨论.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title> 生物统计学学习:逻辑回归</title>
      <link>/post/2019-08-31-/</link>
      <pubDate>Sat, 31 Aug 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-08-31-/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#sigmoid函数logistic-function&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.1&lt;/span&gt; Sigmoid函数(logistic function)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;逻辑回归(logistic regression)其实就是线性回归的一种.只是对于逻辑回归的因变量,是非连续变量的0和1,通过Sigmoid函数将其映射为连续性变量.逻辑回归虽然叫回归,但是预测给出的值只是0和1,因此其实是属于分类.&lt;/p&gt;
&lt;div id=&#34;sigmoid函数logistic-function&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1&lt;/span&gt; Sigmoid函数(logistic function)&lt;/h3&gt;
&lt;p&gt;sigmoid函数的方程如下:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[f(x) = \frac{1}{1+e^{-x}}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其函数曲线我们可以通过模拟给出:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
x &amp;lt;- seq(-10, 10, by = 0.1)
y &amp;lt;- 1/(1+exp(-x))

ggplot(data.frame(x,y), aes(x, y)) +
  geom_line(colour = &amp;quot;red&amp;quot;) +
  geom_vline(xintercept = 0) +
  theme_bw()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-08-31-_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以看出来sigmoid函数是一个S型曲线.他的取值在[0,1]之间.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>生物统计学习:简单线性回归模型</title>
      <link>/post/2019-08-26-/</link>
      <pubDate>Mon, 26 Aug 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-08-26-/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#线性回归&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1&lt;/span&gt; 线性回归&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#简单线性回归&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1.1&lt;/span&gt; 简单线性回归&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#r2&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1.2&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#r2的假设检验&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1.3&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;的假设检验&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#矫正r2adjusted-r2&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1.4&lt;/span&gt; 矫正&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;(&lt;span class=&#34;math inline&#34;&gt;\(adjusted R^2\)&lt;/span&gt;)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#系数的假设检验&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1.5&lt;/span&gt; 系数的假设检验&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#r语言进行线性回归&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.1.6&lt;/span&gt; R语言进行线性回归&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;线性回归&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1&lt;/span&gt; 线性回归&lt;/h2&gt;
&lt;p&gt;使用直线拟合的方法得到拟合直线称之为线性回归(linear regression).如果只有一个自变量,则称之为简单线性回归(simple),有多个自变量,则称之为多元线性回归(multiple regression).这两个模型都必须满足变量是连续性变量,如果变量为分类变量,也可以进行线性回归,称之为逻辑回归(logistic regression).&lt;/p&gt;
&lt;div id=&#34;简单线性回归&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.1&lt;/span&gt; 简单线性回归&lt;/h3&gt;
&lt;p&gt;我们举个例子,年龄和身高是否有线性关系,是否可以使用年龄来预测身高呢?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;age &amp;lt;- 18:29
height &amp;lt;- 
  c(76.1,77,78.1,78.2,78.8,79.7,79.9,81.1,81.2,81.8,82.8,83.5)
data &amp;lt;- 
  data.frame(age, height, 
             stringsAsFactors = FALSE)
library(ggplot2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggplot2&amp;#39; was built under R version 3.6.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;(
plot &amp;lt;- 
ggplot(data, aes(age, height)) +
  geom_point() +
  theme_bw()
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-08-26-_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;我们画出散点图之后,可以看出age和height呈比较明显的线性关系.&lt;/p&gt;
&lt;p&gt;那我们怎么用一条直线去拟合(fit)数据呢?我们使用的就是最小平方差法(least square).&lt;/p&gt;
&lt;p&gt;那么最简单的拟合办法是什么呢?也就是直接使用所有人的height的平均值去拟合.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot +
  geom_hline(yintercept = mean(data$height))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-08-26-_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;那么怎么评价一条直线对数据拟合的好坏呢?这时候就需要引入另外一个概念,残差(residuls).残差也就是真实值和拟合值之间差值:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[residual = y_i - y_i^{&amp;#39;}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其中&lt;span class=&#34;math inline&#34;&gt;\(y_i\)&lt;/span&gt;是真实值,而&lt;span class=&#34;math inline&#34;&gt;\(y_i{&amp;#39;}\)&lt;/span&gt;是模型预测值.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot +
  geom_hline(yintercept = mean(data$height)) +
  geom_segment(aes(x = data$age[1], y = data$height[1], xend = data$age[1], yend = mean(data$height)), colour = &amp;quot;red&amp;quot;, arrow = arrow()) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-08-26-_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;从定义可以看到,残差有正有负.为了表示一条拟合直线对数据拟合的程度的好坏,我们将残差平方然后加和,从而得到&lt;strong&gt;残差平方和(sum of squared residuals)&lt;/strong&gt;,该值就可以用来表示一条直线对数据的拟合的好坏.拟合的越好,该值越小,拟合的越差,该值越大.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;其实使用残差平方和作为损失函数得到的最后的方程或者说模型并不一定是最优解,但是好处是方便后面求解(求导)并且解是唯一的.另外还有使用残差绝对值之和作为损失函数进行求解.以后再慢慢介绍.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[sum \quad of \quad squared \quad residuals = \sum_{i=1}^n(y_i-y_i^{&amp;#39;})^2\]&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意,该值是有量纲的,只能比较同一组数据不同拟合直线的好坏,而不能比较不同数据之间的拟合的好坏.后面会介绍&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;那么怎样找到一个最好的拟合直线呢?我们可以将这条线(平均值)进行旋转,每条直线都会有截距(intersect)和斜率(slope)两个参数,对于每一条直线,我们都会计算其残差平方和.&lt;/p&gt;
&lt;p&gt;最后,我们会得到一系列的截距和斜率组合以及他们所对应的残差平方和.我们可以简单的理解,直接选取残差平方和最小的参数组合即可(实际情况更为复杂一些).从而得到最佳的参数组合.这也是为什么这种方法称之为’least square’的原因.&lt;/p&gt;
&lt;p&gt;那么如何估量一个拟合直线的好坏呢?这时候就需要引入&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;的概念.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;r2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.2&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;首先,我们计算使用身高平均值拟合直线的残差平方和,称之为&lt;span class=&#34;math inline&#34;&gt;\(SS(mean)\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[SS(mean) = (data - mean)^2\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;同时,我们知道方差(Var(mean))等于残差平方和除以样本个数:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[Var(mean) = \frac{SS(mean)}{n}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;然后,按照同样的方法,我们计算拟合直线的残差平方和,称之为&lt;span class=&#34;math inline&#34;&gt;\(SS(fit)\)&lt;/span&gt;.同时,我们也可以计算出来拟合直线的方差(Var(fit)).&lt;/p&gt;
&lt;p&gt;可以看到,拟合直线得到的残差平方和要比平均值得到的要小,也就是说,将年龄因素考虑进去之后,身高的方差有一部分能够被年龄所解释.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;告诉我们年龄可以解释多少比例的身高的方差.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[R^2 = \frac{Var(mean) - Var(fit)}{Var(mean)} = \frac{SS(mean) - SS(fit)}{SS(mean)} = 1 - \frac{ SS(fit)}{SS(mean)}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;从公式可以看出,如果一条直线正好穿过所有的数据点,那么&lt;span class=&#34;math inline&#34;&gt;\(SS(fit)=0\)&lt;/span&gt;,这时候&lt;span class=&#34;math inline&#34;&gt;\(R^2=1\)&lt;/span&gt;.而如果身高和年龄完全没有关系,则&lt;span class=&#34;math inline&#34;&gt;\(R^2 = 0\)&lt;/span&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;需要注意的是,&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;的大小并不具有统计学意义,我们可以想象,如果只有两个点,那么必定有一条直线通过他们,因此&lt;span class=&#34;math inline&#34;&gt;\(SS(fit)\)&lt;/span&gt;为0,但是很明显这样的fit是没有意义的,得到的&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;也并不能说明两个变量之间真是的关系.这说明了样本的数量也同样重要,因此,我们需要对&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;进行统计学假设检验,得到其统计学显著性,也就是p value.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;r2的假设检验&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.3&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;的假设检验&lt;/h3&gt;
&lt;p&gt;首先,我们需要明白&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;的含义,我们上面已经讨论过了,&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;指的是变量x能够解释变量y的方差的比例.比如上面的例子,&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;为0.99,说明年龄可以解释99%的身高的方差.&lt;/p&gt;
&lt;p&gt;这时候,需要引入一个统计量,F:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[F = \frac{(Var(mean) - Var(fit))/(p_{fit}-p_{mean})}{Var(fit)/(n-p_{fit})} = \frac{(SS(mean) - SS(fit))/(p_{fit}-p_{mean})}{SS(fit)/(n-p_{fit})} = \frac{\frac{(SS(mean) - SS(fit))}{p_{fit}-p_{mean}}} {\frac{SS(fit)}{n-p_{fit}}}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;也就是说,F等于变量x能够解释变量y的方差除以变量x不能够解释变量y的方差.&lt;/p&gt;
&lt;p&gt;而&lt;span class=&#34;math inline&#34;&gt;\((n-p_{fit})/(p_{fit}-p_{mean})\)&lt;/span&gt;则称之为自由度(degrees of freedoms).自由度的定义以后再详细解释.&lt;/p&gt;
&lt;p&gt;其中&lt;span class=&#34;math inline&#34;&gt;\(p_{fit}\)&lt;/span&gt;代表回归方程中参数的数目,比如一元线性方程中,只有两个参数(intercept和slop),所以&lt;span class=&#34;math inline&#34;&gt;\(p_{fit}=2\)&lt;/span&gt;.&lt;span class=&#34;math inline&#34;&gt;\(p_{mean}\)&lt;/span&gt;代表平均值直线的参数个数,在一元线性方程中,为1.n是数据集的样本个数.&lt;/p&gt;
&lt;p&gt;因此,&lt;span class=&#34;math inline&#34;&gt;\(p_{fit}-p_{mean}\)&lt;/span&gt;代表的含义是该拟合模型与平均值模型相比,多出来的参数的个数.在简单线性回归中,多出来的就是slope.对于多元线性回归,比如,两个自变量预测一个因变量,则这时候&lt;span class=&#34;math inline&#34;&gt;\(p_{fit}=3\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;我们再来看分母,为什么需要使用&lt;span class=&#34;math inline&#34;&gt;\(SS(fit)\)&lt;/span&gt;除以&lt;span class=&#34;math inline&#34;&gt;\(n-p_{fit}\)&lt;/span&gt;呢?因为我们知道模型越复杂(参数越多),你就需要更多的点去拟合.比如,对于两个点的一元一次方程,只需要两个点即可(两点确定一条直线).而对于二元一次方程,则需要三个点去拟合.&lt;/p&gt;
&lt;p&gt;这时候我们再来看分子分母分别代表什么意义.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;分子:拟合模型多出来的参数能够解释的方差(变异).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;分母:拟合模型多出来的参数不能够解释的方差(变异).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这样我们拿到F值以后,怎么计算p value呢?其实就是使用permutation test的方法.&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;随机产生与数据集样本数相同数目的数据集.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对其进行拟合并计算每一组随机数据的F值.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;产生大量的随机F值,并得到随机F值的分布.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;拿到随机F值的分布,p value就等于大于真实F值的数目除以随机F值的总数目.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;当然,所有随机F值的分布其实是符合F分布的,拿到了F分布,就可以计算p value.F分布以后再详细介绍.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;矫正r2adjusted-r2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.4&lt;/span&gt; 矫正&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;(&lt;span class=&#34;math inline&#34;&gt;\(adjusted R^2\)&lt;/span&gt;)&lt;/h3&gt;
&lt;p&gt;什么是矫正&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;呢?我们从&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;定义可以看到,如果我们增加了拟合模型的变量个数,因为&lt;span class=&#34;math inline&#34;&gt;\(SS(mean)\)&lt;/span&gt;是固定的,因此&lt;span class=&#34;math inline&#34;&gt;\(SS(fit)\)&lt;/span&gt;都会减小,所以导致&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;变大,从而造成过拟合(over fitting).因此,我们需要对模型选入的变量个数做一个惩罚,这就是&lt;span class=&#34;math inline&#34;&gt;\(adjusted \quad R^2\)&lt;/span&gt;.以后再详细解释.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;系数的假设检验&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.5&lt;/span&gt; 系数的假设检验&lt;/h3&gt;
&lt;p&gt;同样的,我们可以看到,上面是对&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;做假设检验,当然我们也需要对每个变量的系数(包括intersect)进行假设验证,在多元回归中尤其重要,我们会在以后进行详细解释.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;r语言进行线性回归&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.1.6&lt;/span&gt; R语言进行线性回归&lt;/h3&gt;
&lt;p&gt;R语言中的&lt;code&gt;lm()&lt;/code&gt;函数可以用来进行线性回归.使用方法如下:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;lm_fit &amp;lt;- 
  lm(height ~ age, data)
summary(lm_fit)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = height ~ age, data = data)
## 
## Residuals:
##      Min       1Q   Median       3Q      Max 
## -0.27238 -0.24248 -0.02762  0.16014  0.47238 
## 
## Coefficients:
##             Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept)  64.9283     0.5084  127.71  &amp;lt; 2e-16 ***
## age           0.6350     0.0214   29.66 4.43e-11 ***
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## Residual standard error: 0.256 on 10 degrees of freedom
## Multiple R-squared:  0.9888, Adjusted R-squared:  0.9876 
## F-statistic:   880 on 1 and 10 DF,  p-value: 4.428e-11&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;summary中提供了该线性回归的大部分内容.其中&lt;code&gt;Multiple R-squared&lt;/code&gt;其实就是&lt;code&gt;R-squared&lt;/code&gt;&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;,而&lt;code&gt;Adjusted R-Squred&lt;/code&gt;主要是对多元线性回归时对多个变量进行矫正,因为当变量数目增加的时候,&lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;总会变小,因此需要对其进行矫正.对于简单线性回归来说.直接使用&lt;code&gt;Multiple R-squared&lt;/code&gt;即可,而对于多元线性回归来说,则需要使用&lt;code&gt;Adjusted R-Squred&lt;/code&gt;来衡量模型拟合的效果.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Markdown中输入数学公式</title>
      <link>/post/2019-08-25-markdown/</link>
      <pubDate>Sun, 25 Aug 2019 00:00:00 +0000</pubDate>
      <guid>/post/2019-08-25-markdown/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#如何插入公式&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.1&lt;/span&gt; 1. 如何插入公式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#上下标&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.2&lt;/span&gt; 2. 上下标&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#括号和分隔符&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.3&lt;/span&gt; 3. 括号和分隔符&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#分数&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.4&lt;/span&gt; 4. 分数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#开方&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.5&lt;/span&gt; 5. 开方&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#省略号&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.6&lt;/span&gt; 6. 省略号&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#矢量&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.7&lt;/span&gt; 7. 矢量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#积分&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.8&lt;/span&gt; 8. 积分&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#极限预算&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.9&lt;/span&gt; 9. 极限预算&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#累加累乘公式&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.10&lt;/span&gt; 10. 累加,累乘公式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#希腊字母&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.11&lt;/span&gt; 11. 希腊字母&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#运算符&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.12&lt;/span&gt; 12. 运算符&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#字体转换&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;0.0.13&lt;/span&gt; 13. 字体转换&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;在Markdown中可以方便的输入数学公式.现在将Markdown中数学公式总结一下.&lt;/p&gt;
&lt;div id=&#34;如何插入公式&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.1&lt;/span&gt; 1. 如何插入公式&lt;/h3&gt;
&lt;p&gt;包括两种,一种是在行内插入,一种是独立公式(单独一行).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;行中插入公式(&lt;code&gt;$E = mc^2$&lt;/code&gt;): &lt;span class=&#34;math inline&#34;&gt;\(E = mc^2\)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;独立公式:&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;$$E = mc^2$$&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[E = mc^2\]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;上下标&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.2&lt;/span&gt; 2. 上下标&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;^&lt;/code&gt;上标,&lt;code&gt;_&lt;/code&gt;下标.如果上下标内容多于一个字符,需要使用&lt;code&gt;{}&lt;/code&gt;将其扩大为一个整体.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;例子&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$$ x^{y^z}=(1+{\rm e}^x)^{-2xy^w} $$&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[ x^{y^z}=(1+{\rm e}^x)^{-2xy^w} \]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;括号和分隔符&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.3&lt;/span&gt; 3. 括号和分隔符&lt;/h3&gt;
&lt;p&gt;()、[] 和 | 表示符号本身，使用 {} 来表示{} 。当要显示大号的括号或分隔符时，要用 和 命令。&lt;/p&gt;
&lt;p&gt;一些特殊的例子:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\langle&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\langle\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\rangle&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\rangle\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\lceil&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\rceil\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\lfloor&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\lfloor\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\lbrace&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\lbrace\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;例子&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$$ f(x,y,z) = 3y^2z \left( 3+\frac{7x+5}{1+y^2} \right) $$&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[ f(x,y,z) = 3y^2z \left( 3+\frac{7x+5}{1+y^2}\right) \]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;分数&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.4&lt;/span&gt; 4. 分数&lt;/h3&gt;
&lt;p&gt;通常使用  {分母} 命令产生一个分数，分数可嵌套。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;例子&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$$\frac{a-1}{b-1} \quad and \quad {a+1\over b+1}$$&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\frac{a-1}{b-1}\]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;开方&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.5&lt;/span&gt; 5. 开方&lt;/h3&gt;
&lt;p&gt;使用  命令输入开方。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;例子&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$$\sqrt{2} \quad and \quad \sqrt[n]{3}$$&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\sqrt{2} \quad and \quad \sqrt[n]{3}\]&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;其中.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;省略号&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.6&lt;/span&gt; 6. 省略号&lt;/h3&gt;
&lt;p&gt;数学公式中常见的省略号有两种，表示与文本底线对齐的省略号，表示与文本中线对齐的省略号。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;例子&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$$f(x_1,x_2,\ldots ,x_n) = x_1^2 + x_2^2 + \cdots + x_n^2$$&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[f(x_1,x_2,\ldots ,x_n) = x_1^2 + x_2^2 + \cdots + x_n^2\]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;矢量&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.7&lt;/span&gt; 7. 矢量&lt;/h3&gt;
&lt;p&gt;使用  来自动产生一个矢量。也可以使用 等命令自定义字母上方的符号。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;例子&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$$\vec{a} \cdot \vec{b}=0$$&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\vec{a} \cdot \vec{b}=0\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其中(&lt;span class=&#34;math inline&#34;&gt;\(\cdot\)&lt;/span&gt;).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;例子&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$$\overleftarrow{xy} \quad and \quad \overleftrightarrow{xy} \quad and \quad \overrightarrow{xy}$$&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\overleftarrow{xy} \quad and \quad \overleftrightarrow{xy} \quad and \quad \overrightarrow{xy}\]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;积分&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.8&lt;/span&gt; 8. 积分&lt;/h3&gt;
&lt;p&gt;使用 _积分下限^积分上限 {被积表达式} 来输入一个积分。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;例子&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$$\int_0^1 {x^2} \,{\rm d}x$$&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\int_0^1 {x^2} dx\]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;极限预算&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.9&lt;/span&gt; 9. 极限预算&lt;/h3&gt;
&lt;p&gt;使用 _{变量 表达式} 表达式 来输入一个极限。如有需求，可以更改 符号至任意符号。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;例子&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$$ \lim_{n \to +\infty} \frac{1}{n(n+1)} \quad and \quad \lim_{x\leftarrow{示例}} \frac{1}{n(n+1)} $$&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[ \lim_{n \to +\infty} \frac{1}{n(n+1)} \quad and \quad \lim_{x\leftarrow{示例}} \frac{1}{n(n+1)} \]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其中,都表示向右的箭头.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;例子&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$$\to \quad and \quad \rightarrow$$&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\to \quad and \quad \rightarrow\]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;累加累乘公式&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.10&lt;/span&gt; 10. 累加,累乘公式&lt;/h3&gt;
&lt;p&gt;使用 _{下标表达式}^{上标表达式} {累加表达式} 来输入一个累加。
与之类似，使用 来分别输入累乘、并集和交集。
此类符号在行内显示时上下标表达式将会移至右上角和右下角。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;例子&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$$\sum_{i=1}^n \frac{1}{i^2} \quad and \quad \prod_{i=1}^n \frac{1}{i^2} \quad and \quad \bigcup_{i=1}^{2} R$$&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\sum_{i=1}^n \frac{1}{i^2} \quad and \quad \prod_{i=1}^n \frac{1}{i^2} \quad and \quad \bigcup_{i=1}^{2} R\]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;希腊字母&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.11&lt;/span&gt; 11. 希腊字母&lt;/h3&gt;
&lt;p&gt;输入&lt;code&gt;\小写希腊字母英文全称&lt;/code&gt;和&lt;code&gt;\首字母大写希腊字母英文全称&lt;/code&gt;来分别输入小写和大写希腊字母。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;对于大写希腊字母与现有字母相同的，直接输入大写字母即可。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\alpha&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\alpha\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;A&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\beta&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;B&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(B\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\gamma&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\gamma\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Gamma&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\Gamma\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\delta&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\delta\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Delta&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\Delta\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\epsilon&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\epsilon\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;E&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(E\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\zeta&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\zeta\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Z&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(Z\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\eta&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\eta\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;H&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(H\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\theta&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\theta\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Theta&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\Theta\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\iota&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\iota\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;I&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(I\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\kappa&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\kappa\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;K&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\lambda&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\lambda\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Lambda&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\Lambda\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\mu&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;M&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(M\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\nu&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\nu\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;N&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\xi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\xi\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Xi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(Xi\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;o&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(o\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;O&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(O\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\pi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\pi\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Pi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\Pi\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\rho&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\rho\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;P&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\sigma&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sigma\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Sigma&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\Sigma\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\tau&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\tau\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;T&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\upsilon&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\upsilon\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Upsilon&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\Upsilon\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\phi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\phi\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Phi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\Phi\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\chi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\chi\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Chi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\Chi\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\psi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\psi\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Psi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\Psi\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\omega&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\omega\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Omega&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\Omega\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;运算符&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.12&lt;/span&gt; 12. 运算符&lt;/h3&gt;
&lt;div id=&#34;关系运算符&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.12.1&lt;/span&gt; (1) 关系运算符&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\pm&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\pm\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\times&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\times\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\div&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\div\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\mid&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\mid\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\nmid&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\nmid\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\cdot&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\cdot\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\circ&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\circ\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\ast&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\ast\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\bigodot&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\bigodot\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\bigotimes&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\bigotimes\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\bigoplus&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\bigoplus\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\leq&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\leq\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\geq&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\geq\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\neq&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\neq\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\approx&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\approx\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\equiv&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\equiv\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\sum&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sum\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\prod&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\prod\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\coprod&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\coprod\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\backslash&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\backslash\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;集合运算符&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.12.2&lt;/span&gt; (2) 集合运算符&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\emptyset&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\emptyset\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\in&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\in\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\notin&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\notin\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\subset&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\subset\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\supset&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\supset\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\subseteq&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\subseteq\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\supseteq&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\supseteq\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\bigcap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\bigcap\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\bigcup&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\bigcup\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\bigvee&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\bigvee\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\bigwedge&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\bigwedge\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\biguplus&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\biguplus\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;对数运算符&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.12.3&lt;/span&gt; (3) 对数运算符&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\log&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\log\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\lg&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\lg\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\ln&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\ln\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;三角运算符&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.12.4&lt;/span&gt; (4) 三角运算符&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;30^\circ&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(30^\circ\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\bot&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\bot\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\angle A&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\angle A\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\sin&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sin\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\cos&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\cos\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\csc&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\csc\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\sec&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sec\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\cot&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\cot\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;字体转换&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;header-section-number&#34;&gt;0.0.13&lt;/span&gt; 13. 字体转换&lt;/h3&gt;
&lt;p&gt;若要对公式的某一部分字符进行字体转换，可以用&lt;code&gt;{\字体 {需转换的部分字符}}&lt;/code&gt;命令，其中 &lt;code&gt;\字体&lt;/code&gt; 部分可以参照下表选择合适的字体。一般情况下，公式默认为意大利体。&lt;/p&gt;
&lt;p&gt;示例中&lt;code&gt;全部大写&lt;/code&gt;的字体仅大写可用。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;输入&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\rm&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\rm {Sample}\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;罗马体&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\it&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\it {Sample}\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;意大利斜体&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\bf&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\bf {Sample}\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;粗体&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>使用Github和Hexo建独立博客</title>
      <link>/post/2017-09-09-github-blog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/post/2017-09-09-github-blog/</guid>
      <description>

&lt;p&gt;参考了一篇&lt;a href=&#34;https://github.com/limedroid/HexoLearning#42-直接方式&#34; target=&#34;_blank&#34;&gt;非常好的文章&lt;/a&gt;，然后结合自己的实际问题，讲解如何使用github结合hexo建立个人的独立博客。&lt;/p&gt;

&lt;h2 id=&#34;1-hexo介绍&#34;&gt;1. Hexo介绍&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://hexo.io/zh-cn/&#34; target=&#34;_blank&#34;&gt;Hexo&lt;/a&gt;是基于NodeJs的静态博客框架，简单、轻量，其生成的静态网页可以托管在Github和Heroku上。&lt;/p&gt;

&lt;p&gt;. 超快速度
. 支持MarkDown
. 一键部署
. 丰富的插件&lt;/p&gt;

&lt;p&gt;下面以我的博客为例，&lt;a href=&#34;https://shenxt.github.io/&#34; target=&#34;_blank&#34;&gt;shenxt.github.io&lt;/a&gt;为例，讲解如何部署自己的博客。&lt;/p&gt;

&lt;h2 id=&#34;2-环境准备&#34;&gt;2. 环境准备&lt;/h2&gt;

&lt;h3 id=&#34;2-1-安装node-js&#34;&gt;2.1 安装node.js&lt;/h3&gt;

&lt;p&gt;去&lt;a href=&#34;https://nodejs.org/en/download/&#34; target=&#34;_blank&#34;&gt;nodejs&lt;/a&gt;官网下载对应系统的安装包，按提示安装。&lt;/p&gt;

&lt;p&gt;检验安装成功，在git shell中输入一下代码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ node -v
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-2-安装hexo&#34;&gt;2.2 安装hexo&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ npm install hexo-cli -g
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果是mac，则需要输入：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo npm install hexo-cli -g
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;3-利用hexo搭建一个博客&#34;&gt;3. 利用Hexo搭建一个博客&lt;/h2&gt;

&lt;h3 id=&#34;3-1-创建博客目录shenxt-github-io&#34;&gt;3.1 创建博客目录shenxt@github.io&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ hexo init shenxt.github.io
$ cd limedroid.github.io
$ npm install
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-2-生成静态页面&#34;&gt;3.2 生成静态页面&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ hexo clean
$ hexo g # g is generate
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-3-运行&#34;&gt;3.3 运行&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ hexo s -p3600# is server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后可以打开浏览器，输入地址 localhost:3600 即可看到效果。&lt;/p&gt;

&lt;h2 id=&#34;4-发一篇文章试试&#34;&gt;4 发一篇文章试试&lt;/h2&gt;

&lt;h3 id=&#34;4-1-穿件一个新的博客&#34;&gt;4.1 穿件一个新的博客&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ hexo new test
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;此时会在source/posts目录下生成test.md文件，输入一些内容，然后保存。&lt;/p&gt;

&lt;p&gt;然后看一下效果:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hexo clean
$ hexo g
$ hexo s -p3600# is server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后可以打开浏览器，输入地址 localhost:3600 即可看到效果。&lt;/p&gt;

&lt;h2 id=&#34;5-配置&#34;&gt;5 配置&lt;/h2&gt;

&lt;p&gt;网站的设置大部分都在_config.yml文件夹中，详细配置可以查看&lt;a href=&#34;https://hexo.io/zh-cn/docs/configuration.html&#34; target=&#34;_blank&#34;&gt;官方文档&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;下面只列出简单常用配置:&lt;/p&gt;

&lt;p&gt;.title -&amp;gt; 网站标题
.subtitle -&amp;gt; 网站副标题
.description -&amp;gt; 网站描述
.author -&amp;gt; 您的名字
.language -&amp;gt; 网站使用的语言&lt;/p&gt;

&lt;p&gt;注意：进行配置时，需要在冒号:后加一个英文空格。&lt;/p&gt;

&lt;h2 id=&#34;6-更换主题&#34;&gt;6 更换主题&lt;/h2&gt;

&lt;p&gt;在网站配置文件_config.yml中，配置theme。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;theme: next
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;next是主题的名字。Hexo有不同的人贡献主题，可以到其&lt;a href=&#34;https://hexo.io/themes/index.html&#34; target=&#34;_blank&#34;&gt;官方网站&lt;/a&gt;上下载不同主题。看中某一主题之后，直接点击其名字，进入到其github界面，然后复制其网址，使用下面代码，即可下载主题到本地。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/fi3ework/hexo-theme-archer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后将博客的配置文件theme修改为archer即可。&lt;/p&gt;

&lt;p&gt;观察效果：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hexo clean
$ hexo g
$ hexo s -p3600# is server
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;7-部署到github上&#34;&gt;7 部署到github上&lt;/h2&gt;

&lt;h3 id=&#34;7-1-在github网页版上创建和自己账户名相同的仓库-比如我的账户为shenxt-因此-创建的仓库为shenxt-github-io&#34;&gt;7.1 在github网页版上创建和自己账户名相同的仓库，比如我的账户为shenxt，因此，创建的仓库为shenxt.github.io。&lt;/h3&gt;

&lt;h3 id=&#34;7-2-安装hexo-deployer-git&#34;&gt;7.2 安装hexo-deployer-git&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ npm install hexo-deployer-git --save
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;7-3-网站配置git&#34;&gt;7.3 网站配置git&lt;/h3&gt;

&lt;p&gt;在网上的配置文件_config.yml中配置deploy。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-deploy:&#34;&gt;  type: git
  repo: https://github.com/shenxt/shenxt.github.io
  branch: master
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;7-4-部署&#34;&gt;7.4 部署&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ hexo d# d is deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;贴标签-方便搜索&#34;&gt;贴标签，方便搜索&lt;/h2&gt;

&lt;h3 id=&#34;8-1-两个确认&#34;&gt;8.1 两个确认&lt;/h3&gt;

&lt;p&gt;. 首先确认博客的配置文件中有：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tag_dir: tags
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;. 然后确认主题的配置文件有：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tags: tags
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;8-2-新建tags页面&#34;&gt;8.2 新建tags页面&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ hexo new page tags
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;此时会在source/下生成tags/index.md文件。&lt;/p&gt;

&lt;h3 id=&#34;8-3-修改source-tags-index-md&#34;&gt;8.3 修改source/tags/index.md&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;title: tags
date: 2015-10-20 06:49:50
type: &amp;quot;tags&amp;quot;
comments: false
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;8-4-在文章中添加tags&#34;&gt;8.4 在文章中添加tags&lt;/h3&gt;

&lt;p&gt;在你的文章中添加：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tags:
	- Tag1
	- Tag2
	- Tag3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其文件头部类似于：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;title: TagEditText
date: 2016-11-19 10:44:25
tags:
	- Tag1
	- Tag2
	- Tag3
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;9-分类-给文章归档&#34;&gt;9 分类，给文章归档&lt;/h2&gt;

&lt;h3 id=&#34;9-1-两个确认&#34;&gt;9.1 两个确认&lt;/h3&gt;

&lt;p&gt;. 确认博客配置文件打开了&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;category_dir: categories
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;. 确认主题配置文件打开了&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;categories: /categories
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;9-2-新建categories文件&#34;&gt;9.2 新建categories文件&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;hexo new page categories
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;9-3-修改categories-index-md&#34;&gt;9.3 修改categories/index.md&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;title: categories
date: 2015-10-20 06:49:50
type: &amp;quot;categories&amp;quot;
comments: false
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;9-4-在文章中添加categories&#34;&gt;9.4 在文章中添加categories&lt;/h3&gt;

&lt;p&gt;在文章中添加：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;categories:
	- cate
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其文件头部类似：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;title: TagEditText
date: 2016-11-19 10:44:25
categories:
	- cate
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;10-添加评论功能&#34;&gt;10 添加评论功能&lt;/h2&gt;

&lt;p&gt;这里推荐使用韩国的来必力系统。参考&lt;a href=&#34;https://www.drixn.com/2017/LiveReCommentsSystem/&#34; target=&#34;_blank&#34;&gt;这个博客&lt;/a&gt;进行设置。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
